// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: profile/v1/profile.proto
// Protobuf Java Version: 4.29.3

package com.antinvestor.apis.profile.v1;

public interface CreateRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:profile.v1.CreateRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>.profile.v1.ProfileType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
   * @return The enum numeric value on the wire for type.
   */
  int getTypeValue();
  /**
   * <code>.profile.v1.ProfileType type = 1 [json_name = "type", (.buf.validate.field) = { ... }</code>
   * @return The type.
   */
  com.antinvestor.apis.profile.v1.ProfileType getType();

  /**
   * <code>string contact = 2 [json_name = "contact", (.buf.validate.field) = { ... }</code>
   * @return The contact.
   */
  java.lang.String getContact();
  /**
   * <code>string contact = 2 [json_name = "contact", (.buf.validate.field) = { ... }</code>
   * @return The bytes for contact.
   */
  com.google.protobuf.ByteString
      getContactBytes();

  /**
   * <code>map&lt;string, string&gt; properties = 3 [json_name = "properties"];</code>
   */
  int getPropertiesCount();
  /**
   * <code>map&lt;string, string&gt; properties = 3 [json_name = "properties"];</code>
   */
  boolean containsProperties(
      java.lang.String key);
  /**
   * Use {@link #getPropertiesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getProperties();
  /**
   * <code>map&lt;string, string&gt; properties = 3 [json_name = "properties"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getPropertiesMap();
  /**
   * <code>map&lt;string, string&gt; properties = 3 [json_name = "properties"];</code>
   */
  /* nullable */
java.lang.String getPropertiesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; properties = 3 [json_name = "properties"];</code>
   */
  java.lang.String getPropertiesOrThrow(
      java.lang.String key);
}
