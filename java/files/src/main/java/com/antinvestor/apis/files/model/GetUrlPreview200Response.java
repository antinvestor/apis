/*
 * Ant Investor Files
 * An openAPI 3.0 specification that defines how files are stored and accessed on ant investor products
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@antinvestor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.antinvestor.apis.files.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * GetUrlPreview200Response
 */
@JsonPropertyOrder({
  GetUrlPreview200Response.JSON_PROPERTY_MATRIX_COLON_IMAGE_COLON_SIZE,
  GetUrlPreview200Response.JSON_PROPERTY_OG_COLON_IMAGE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetUrlPreview200Response {
  public static final String JSON_PROPERTY_MATRIX_COLON_IMAGE_COLON_SIZE = "matrix:image:size";
  private JsonNullable<Object> matrixColonImageColonSize = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_OG_COLON_IMAGE = "og:image";
  private JsonNullable<Object> ogColonImage = JsonNullable.<Object>of(null);

  public GetUrlPreview200Response() { 
  }

  public GetUrlPreview200Response matrixColonImageColonSize(Object matrixColonImageColonSize) {
    this.matrixColonImageColonSize = JsonNullable.<Object>of(matrixColonImageColonSize);
    return this;
  }

   /**
   * The byte-size of the image. Omitted if there is no image attached.
   * @return matrixColonImageColonSize
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getMatrixColonImageColonSize() {
        return matrixColonImageColonSize.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MATRIX_COLON_IMAGE_COLON_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMatrixColonImageColonSize_JsonNullable() {
    return matrixColonImageColonSize;
  }
  
  @JsonProperty(JSON_PROPERTY_MATRIX_COLON_IMAGE_COLON_SIZE)
  public void setMatrixColonImageColonSize_JsonNullable(JsonNullable<Object> matrixColonImageColonSize) {
    this.matrixColonImageColonSize = matrixColonImageColonSize;
  }

  public void setMatrixColonImageColonSize(Object matrixColonImageColonSize) {
    this.matrixColonImageColonSize = JsonNullable.<Object>of(matrixColonImageColonSize);
  }


  public GetUrlPreview200Response ogColonImage(Object ogColonImage) {
    this.ogColonImage = JsonNullable.<Object>of(ogColonImage);
    return this;
  }

   /**
   * An [&#x60;mxc://&#x60; URI](/client-server-api/#matrix-content-mxc-uris) to the image. Omitted if there is no image.
   * @return ogColonImage
  **/
  @javax.annotation.Nullable
  @JsonIgnore

  public Object getOgColonImage() {
        return ogColonImage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OG_COLON_IMAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getOgColonImage_JsonNullable() {
    return ogColonImage;
  }
  
  @JsonProperty(JSON_PROPERTY_OG_COLON_IMAGE)
  public void setOgColonImage_JsonNullable(JsonNullable<Object> ogColonImage) {
    this.ogColonImage = ogColonImage;
  }

  public void setOgColonImage(Object ogColonImage) {
    this.ogColonImage = JsonNullable.<Object>of(ogColonImage);
  }


  /**
   * Return true if this getUrlPreview_200_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetUrlPreview200Response getUrlPreview200Response = (GetUrlPreview200Response) o;
    return equalsNullable(this.matrixColonImageColonSize, getUrlPreview200Response.matrixColonImageColonSize) &&
        equalsNullable(this.ogColonImage, getUrlPreview200Response.ogColonImage);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(matrixColonImageColonSize), hashCodeNullable(ogColonImage));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetUrlPreview200Response {\n");
    sb.append("    matrixColonImageColonSize: ").append(toIndentedString(matrixColonImageColonSize)).append("\n");
    sb.append("    ogColonImage: ").append(toIndentedString(ogColonImage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `matrix:image:size` to the URL query string
    if (getMatrixColonImageColonSize() != null) {
      joiner.add(String.format("%smatrix:image:size%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getMatrixColonImageColonSize()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    // add `og:image` to the URL query string
    if (getOgColonImage() != null) {
      joiner.add(String.format("%sog:image%s=%s", prefix, suffix, URLEncoder.encode(String.valueOf(getOgColonImage()), StandardCharsets.UTF_8).replaceAll("\\+", "%20")));
    }

    return joiner.toString();
  }
}

