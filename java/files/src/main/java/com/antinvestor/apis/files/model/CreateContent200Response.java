/*
 * Ant Investor Files
 * An openAPI 3.0 specification that defines how files are stored and accessed on ant investor products
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@antinvestor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.antinvestor.apis.files.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.antinvestor.apis.files.invoker.ApiClient;
/**
 * CreateContent200Response
 */
@JsonPropertyOrder({
  CreateContent200Response.JSON_PROPERTY_CONTENT_URI,
  CreateContent200Response.JSON_PROPERTY_UNUSED_EXPIRES_AT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class CreateContent200Response {
  public static final String JSON_PROPERTY_CONTENT_URI = "content_uri";
  @javax.annotation.Nonnull
  private String contentUri;

  public static final String JSON_PROPERTY_UNUSED_EXPIRES_AT = "unused_expires_at";
  @javax.annotation.Nullable
  private Long unusedExpiresAt;

  public CreateContent200Response() { 
  }

  public CreateContent200Response contentUri(@javax.annotation.Nonnull String contentUri) {
    this.contentUri = contentUri;
    return this;
  }

  /**
   * The [&#x60;mxc://&#x60; URI](/client-server-api/#matrix-content-mxc-uris) at which the content will be available, once it is uploaded.
   * @return contentUri
   */
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONTENT_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getContentUri() {
    return contentUri;
  }


  @JsonProperty(JSON_PROPERTY_CONTENT_URI)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setContentUri(@javax.annotation.Nonnull String contentUri) {
    this.contentUri = contentUri;
  }


  public CreateContent200Response unusedExpiresAt(@javax.annotation.Nullable Long unusedExpiresAt) {
    this.unusedExpiresAt = unusedExpiresAt;
    return this;
  }

  /**
   * The timestamp (in milliseconds since the unix epoch) when the generated media id will expire, if media is not uploaded.
   * @return unusedExpiresAt
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UNUSED_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getUnusedExpiresAt() {
    return unusedExpiresAt;
  }


  @JsonProperty(JSON_PROPERTY_UNUSED_EXPIRES_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUnusedExpiresAt(@javax.annotation.Nullable Long unusedExpiresAt) {
    this.unusedExpiresAt = unusedExpiresAt;
  }


  /**
   * Return true if this createContent_200_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateContent200Response createContent200Response = (CreateContent200Response) o;
    return Objects.equals(this.contentUri, createContent200Response.contentUri) &&
        Objects.equals(this.unusedExpiresAt, createContent200Response.unusedExpiresAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentUri, unusedExpiresAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateContent200Response {\n");
    sb.append("    contentUri: ").append(toIndentedString(contentUri)).append("\n");
    sb.append("    unusedExpiresAt: ").append(toIndentedString(unusedExpiresAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `content_uri` to the URL query string
    if (getContentUri() != null) {
      joiner.add(String.format("%scontent_uri%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getContentUri()))));
    }

    // add `unused_expires_at` to the URL query string
    if (getUnusedExpiresAt() != null) {
      joiner.add(String.format("%sunused_expires_at%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getUnusedExpiresAt()))));
    }

    return joiner.toString();
  }
}

