/*
 * Ant Investor Files
 * An openAPI 3.0 specification that defines how files are stored and accessed on ant investor products
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@antinvestor.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.antinvestor.apis.files.model;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.StringJoiner;
import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


import com.antinvestor.apis.files.invoker.ApiClient;
/**
 * GetConfigAuthed200Response
 */
@JsonPropertyOrder({
  GetConfigAuthed200Response.JSON_PROPERTY_M_UPLOAD_SIZE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class GetConfigAuthed200Response {
  public static final String JSON_PROPERTY_M_UPLOAD_SIZE = "m.upload.size";
  @javax.annotation.Nullable
  private Long mUploadSize;

  public GetConfigAuthed200Response() { 
  }

  public GetConfigAuthed200Response mUploadSize(@javax.annotation.Nullable Long mUploadSize) {
    this.mUploadSize = mUploadSize;
    return this;
  }

  /**
   * The maximum size an upload can be in bytes. Clients SHOULD use this as a guide when uploading content. If not listed or null, the size limit should be treated as unknown.
   * @return mUploadSize
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_M_UPLOAD_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getmUploadSize() {
    return mUploadSize;
  }


  @JsonProperty(JSON_PROPERTY_M_UPLOAD_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setmUploadSize(@javax.annotation.Nullable Long mUploadSize) {
    this.mUploadSize = mUploadSize;
  }


  /**
   * Return true if this getConfigAuthed_200_response object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetConfigAuthed200Response getConfigAuthed200Response = (GetConfigAuthed200Response) o;
    return Objects.equals(this.mUploadSize, getConfigAuthed200Response.mUploadSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mUploadSize);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetConfigAuthed200Response {\n");
    sb.append("    mUploadSize: ").append(toIndentedString(mUploadSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

  /**
   * Convert the instance into URL query string.
   *
   * @return URL query string
   */
  public String toUrlQueryString() {
    return toUrlQueryString(null);
  }

  /**
   * Convert the instance into URL query string.
   *
   * @param prefix prefix of the query string
   * @return URL query string
   */
  public String toUrlQueryString(String prefix) {
    String suffix = "";
    String containerSuffix = "";
    String containerPrefix = "";
    if (prefix == null) {
      // style=form, explode=true, e.g. /pet?name=cat&type=manx
      prefix = "";
    } else {
      // deepObject style e.g. /pet?id[name]=cat&id[type]=manx
      prefix = prefix + "[";
      suffix = "]";
      containerSuffix = "]";
      containerPrefix = "[";
    }

    StringJoiner joiner = new StringJoiner("&");

    // add `m.upload.size` to the URL query string
    if (getmUploadSize() != null) {
      joiner.add(String.format("%sm.upload.size%s=%s", prefix, suffix, ApiClient.urlEncode(ApiClient.valueToString(getmUploadSize()))));
    }

    return joiner.toString();
  }
}

