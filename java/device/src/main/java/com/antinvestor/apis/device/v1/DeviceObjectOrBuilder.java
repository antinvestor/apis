// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: device/v1/device.proto
// Protobuf Java Version: 4.31.1

package com.antinvestor.apis.device.v1;

@com.google.protobuf.Generated
public interface DeviceObjectOrBuilder extends
    // @@protoc_insertion_point(interface_extends:device.v1.DeviceObject)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string id = 1 [json_name = "id", (.buf.validate.field) = { ... }</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <code>string id = 1 [json_name = "id", (.buf.validate.field) = { ... }</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The name.
   */
  java.lang.String getName();
  /**
   * <code>string name = 2 [json_name = "name"];</code>
   * @return The bytes for name.
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>string session_id = 3 [json_name = "sessionId"];</code>
   * @return The sessionId.
   */
  java.lang.String getSessionId();
  /**
   * <code>string session_id = 3 [json_name = "sessionId"];</code>
   * @return The bytes for sessionId.
   */
  com.google.protobuf.ByteString
      getSessionIdBytes();

  /**
   * <code>string ip = 4 [json_name = "ip"];</code>
   * @return The ip.
   */
  java.lang.String getIp();
  /**
   * <code>string ip = 4 [json_name = "ip"];</code>
   * @return The bytes for ip.
   */
  com.google.protobuf.ByteString
      getIpBytes();

  /**
   * <code>string user_agent = 5 [json_name = "userAgent"];</code>
   * @return The userAgent.
   */
  java.lang.String getUserAgent();
  /**
   * <code>string user_agent = 5 [json_name = "userAgent"];</code>
   * @return The bytes for userAgent.
   */
  com.google.protobuf.ByteString
      getUserAgentBytes();

  /**
   * <code>string os = 6 [json_name = "os"];</code>
   * @return The os.
   */
  java.lang.String getOs();
  /**
   * <code>string os = 6 [json_name = "os"];</code>
   * @return The bytes for os.
   */
  com.google.protobuf.ByteString
      getOsBytes();

  /**
   * <code>string last_seen = 7 [json_name = "lastSeen"];</code>
   * @return The lastSeen.
   */
  java.lang.String getLastSeen();
  /**
   * <code>string last_seen = 7 [json_name = "lastSeen"];</code>
   * @return The bytes for lastSeen.
   */
  com.google.protobuf.ByteString
      getLastSeenBytes();

  /**
   * <code>map&lt;string, string&gt; locale = 9 [json_name = "locale"];</code>
   */
  int getLocaleCount();
  /**
   * <code>map&lt;string, string&gt; locale = 9 [json_name = "locale"];</code>
   */
  boolean containsLocale(
      java.lang.String key);
  /**
   * Use {@link #getLocaleMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getLocale();
  /**
   * <code>map&lt;string, string&gt; locale = 9 [json_name = "locale"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getLocaleMap();
  /**
   * <code>map&lt;string, string&gt; locale = 9 [json_name = "locale"];</code>
   */
  /* nullable */
java.lang.String getLocaleOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; locale = 9 [json_name = "locale"];</code>
   */
  java.lang.String getLocaleOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, string&gt; location = 11 [json_name = "location"];</code>
   */
  int getLocationCount();
  /**
   * <code>map&lt;string, string&gt; location = 11 [json_name = "location"];</code>
   */
  boolean containsLocation(
      java.lang.String key);
  /**
   * Use {@link #getLocationMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getLocation();
  /**
   * <code>map&lt;string, string&gt; location = 11 [json_name = "location"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getLocationMap();
  /**
   * <code>map&lt;string, string&gt; location = 11 [json_name = "location"];</code>
   */
  /* nullable */
java.lang.String getLocationOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; location = 11 [json_name = "location"];</code>
   */
  java.lang.String getLocationOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, string&gt; properties = 15 [json_name = "properties"];</code>
   */
  int getPropertiesCount();
  /**
   * <code>map&lt;string, string&gt; properties = 15 [json_name = "properties"];</code>
   */
  boolean containsProperties(
      java.lang.String key);
  /**
   * Use {@link #getPropertiesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getProperties();
  /**
   * <code>map&lt;string, string&gt; properties = 15 [json_name = "properties"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getPropertiesMap();
  /**
   * <code>map&lt;string, string&gt; properties = 15 [json_name = "properties"];</code>
   */
  /* nullable */
java.lang.String getPropertiesOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; properties = 15 [json_name = "properties"];</code>
   */
  java.lang.String getPropertiesOrThrow(
      java.lang.String key);
}
