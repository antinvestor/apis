// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: device/v1/device.proto
// Protobuf Java Version: 4.33.0

package com.antinvestor.apis.device.v1;

/**
 * <pre>
 * PresenceStatus defines the online/offline status of a device.
 * buf:lint:ignore ENUM_VALUE_PREFIX
 * </pre>
 *
 * Protobuf enum {@code device.v1.PresenceStatus}
 */
@com.google.protobuf.Generated
public enum PresenceStatus
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
   * </pre>
   *
   * <code>OFFLINE = 0;</code>
   */
  OFFLINE(0),
  /**
   * <pre>
   * Device is online and active
   * </pre>
   *
   * <code>ONLINE = 1;</code>
   */
  ONLINE(1),
  /**
   * <pre>
   * Device is online but idle/away
   * </pre>
   *
   * <code>AWAY = 2;</code>
   */
  AWAY(2),
  /**
   * <pre>
   * Device is online but user is busy
   * </pre>
   *
   * <code>BUSY = 3;</code>
   */
  BUSY(3),
  /**
   * <pre>
   * Device is online but appears offline to others
   * </pre>
   *
   * <code>INVISIBLE = 4;</code>
   */
  INVISIBLE(4),
  UNRECOGNIZED(-1),
  ;

  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 33,
      /* patch= */ 0,
      /* suffix= */ "",
      "PresenceStatus");
  }
  /**
   * <pre>
   * buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
   * </pre>
   *
   * <code>OFFLINE = 0;</code>
   */
  public static final int OFFLINE_VALUE = 0;
  /**
   * <pre>
   * Device is online and active
   * </pre>
   *
   * <code>ONLINE = 1;</code>
   */
  public static final int ONLINE_VALUE = 1;
  /**
   * <pre>
   * Device is online but idle/away
   * </pre>
   *
   * <code>AWAY = 2;</code>
   */
  public static final int AWAY_VALUE = 2;
  /**
   * <pre>
   * Device is online but user is busy
   * </pre>
   *
   * <code>BUSY = 3;</code>
   */
  public static final int BUSY_VALUE = 3;
  /**
   * <pre>
   * Device is online but appears offline to others
   * </pre>
   *
   * <code>INVISIBLE = 4;</code>
   */
  public static final int INVISIBLE_VALUE = 4;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static PresenceStatus valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static PresenceStatus forNumber(int value) {
    switch (value) {
      case 0: return OFFLINE;
      case 1: return ONLINE;
      case 2: return AWAY;
      case 3: return BUSY;
      case 4: return INVISIBLE;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<PresenceStatus>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      PresenceStatus> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<PresenceStatus>() {
          public PresenceStatus findValueByNumber(int number) {
            return PresenceStatus.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.antinvestor.apis.device.v1.DeviceProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final PresenceStatus[] VALUES = values();

  public static PresenceStatus valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private PresenceStatus(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:device.v1.PresenceStatus)
}

