// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: chat/v1/chat.proto
// Protobuf Java Version: 4.33.0

package com.antinvestor.apis.chat.v1;

@com.google.protobuf.Generated
public interface ErrorDetailOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chat.v1.ErrorDetail)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * application code (see doc)
   * </pre>
   *
   * <code>int32 code = 1 [json_name = "code"];</code>
   * @return The code.
   */
  int getCode();

  /**
   * <pre>
   * human readable
   * </pre>
   *
   * <code>string message = 2 [json_name = "message"];</code>
   * @return The message.
   */
  java.lang.String getMessage();
  /**
   * <pre>
   * human readable
   * </pre>
   *
   * <code>string message = 2 [json_name = "message"];</code>
   * @return The bytes for message.
   */
  com.google.protobuf.ByteString
      getMessageBytes();

  /**
   * <pre>
   * additional machine-readable data
   * </pre>
   *
   * <code>map&lt;string, string&gt; meta = 3 [json_name = "meta"];</code>
   */
  int getMetaCount();
  /**
   * <pre>
   * additional machine-readable data
   * </pre>
   *
   * <code>map&lt;string, string&gt; meta = 3 [json_name = "meta"];</code>
   */
  boolean containsMeta(
      java.lang.String key);
  /**
   * Use {@link #getMetaMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getMeta();
  /**
   * <pre>
   * additional machine-readable data
   * </pre>
   *
   * <code>map&lt;string, string&gt; meta = 3 [json_name = "meta"];</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getMetaMap();
  /**
   * <pre>
   * additional machine-readable data
   * </pre>
   *
   * <code>map&lt;string, string&gt; meta = 3 [json_name = "meta"];</code>
   */
  /* nullable */
java.lang.String getMetaOrDefault(
      java.lang.String key,
      /* nullable */
java.lang.String defaultValue);
  /**
   * <pre>
   * additional machine-readable data
   * </pre>
   *
   * <code>map&lt;string, string&gt; meta = 3 [json_name = "meta"];</code>
   */
  java.lang.String getMetaOrThrow(
      java.lang.String key);
}
