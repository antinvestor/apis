// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: chat/v1/chat.proto
// Protobuf Java Version: 4.32.1

package com.antinvestor.apis.chat.v1;

@com.google.protobuf.Generated
public interface ServerEventOrBuilder extends
    // @@protoc_insertion_point(interface_extends:chat.v1.ServerEvent)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string id = 3 [json_name = "id", (.buf.validate.field) = { ... }</code>
   * @return The id.
   */
  java.lang.String getId();
  /**
   * <code>string id = 3 [json_name = "id", (.buf.validate.field) = { ... }</code>
   * @return The bytes for id.
   */
  com.google.protobuf.ByteString
      getIdBytes();

  /**
   * <code>.google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];</code>
   * @return Whether the timestamp field is set.
   */
  boolean hasTimestamp();
  /**
   * <code>.google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];</code>
   * @return The timestamp.
   */
  com.google.protobuf.Timestamp getTimestamp();
  /**
   * <code>.google.protobuf.Timestamp timestamp = 5 [json_name = "timestamp"];</code>
   */
  com.google.protobuf.TimestampOrBuilder getTimestampOrBuilder();

  /**
   * <code>.chat.v1.RoomEvent message = 10 [json_name = "message"];</code>
   * @return Whether the message field is set.
   */
  boolean hasMessage();
  /**
   * <code>.chat.v1.RoomEvent message = 10 [json_name = "message"];</code>
   * @return The message.
   */
  com.antinvestor.apis.chat.v1.RoomEvent getMessage();
  /**
   * <code>.chat.v1.RoomEvent message = 10 [json_name = "message"];</code>
   */
  com.antinvestor.apis.chat.v1.RoomEventOrBuilder getMessageOrBuilder();

  /**
   * <pre>
   * user presence change affecting the room
   * </pre>
   *
   * <code>.chat.v1.PresenceEvent presence_event = 12 [json_name = "presenceEvent"];</code>
   * @return Whether the presenceEvent field is set.
   */
  boolean hasPresenceEvent();
  /**
   * <pre>
   * user presence change affecting the room
   * </pre>
   *
   * <code>.chat.v1.PresenceEvent presence_event = 12 [json_name = "presenceEvent"];</code>
   * @return The presenceEvent.
   */
  com.antinvestor.apis.chat.v1.PresenceEvent getPresenceEvent();
  /**
   * <pre>
   * user presence change affecting the room
   * </pre>
   *
   * <code>.chat.v1.PresenceEvent presence_event = 12 [json_name = "presenceEvent"];</code>
   */
  com.antinvestor.apis.chat.v1.PresenceEventOrBuilder getPresenceEventOrBuilder();

  /**
   * <code>.chat.v1.ReceiptEvent receipt_event = 13 [json_name = "receiptEvent"];</code>
   * @return Whether the receiptEvent field is set.
   */
  boolean hasReceiptEvent();
  /**
   * <code>.chat.v1.ReceiptEvent receipt_event = 13 [json_name = "receiptEvent"];</code>
   * @return The receiptEvent.
   */
  com.antinvestor.apis.chat.v1.ReceiptEvent getReceiptEvent();
  /**
   * <code>.chat.v1.ReceiptEvent receipt_event = 13 [json_name = "receiptEvent"];</code>
   */
  com.antinvestor.apis.chat.v1.ReceiptEventOrBuilder getReceiptEventOrBuilder();

  /**
   * <code>.chat.v1.TypingEvent typing_event = 14 [json_name = "typingEvent"];</code>
   * @return Whether the typingEvent field is set.
   */
  boolean hasTypingEvent();
  /**
   * <code>.chat.v1.TypingEvent typing_event = 14 [json_name = "typingEvent"];</code>
   * @return The typingEvent.
   */
  com.antinvestor.apis.chat.v1.TypingEvent getTypingEvent();
  /**
   * <code>.chat.v1.TypingEvent typing_event = 14 [json_name = "typingEvent"];</code>
   */
  com.antinvestor.apis.chat.v1.TypingEventOrBuilder getTypingEventOrBuilder();

  com.antinvestor.apis.chat.v1.ServerEvent.PayloadCase getPayloadCase();
}
