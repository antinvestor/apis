// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file property/v1/property.proto (package property.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { AddLocalityRequest, AddLocalityResponse, AddPropertyTypeRequest, AddPropertyTypeResponse, AddSubscriptionRequest, AddSubscriptionResponse, CreatePropertyRequest, CreatePropertyResponse, DeleteLocalityRequest, DeleteLocalityResponse, DeletePropertyRequest, DeletePropertyResponse, DeleteSubscriptionRequest, DeleteSubscriptionResponse, HistoryOfPropertyRequest, HistoryOfPropertyResponse, ListPropertyTypeRequest, ListPropertyTypeResponse, ListSubscriptionRequest, ListSubscriptionResponse, SearchPropertyRequest, SearchPropertyResponse, StateOfPropertyRequest, StateOfPropertyResponse, UpdatePropertyRequest, UpdatePropertyResponse } from "./property_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service property.v1.PropertyService
 */
export const PropertyService = {
  typeName: "property.v1.PropertyService",
  methods: {
    /**
     * Create method for adding a new property type into the system
     *
     * @generated from rpc property.v1.PropertyService.AddPropertyType
     */
    addPropertyType: {
      name: "AddPropertyType",
      I: AddPropertyTypeRequest,
      O: AddPropertyTypeResponse,
      kind: MethodKind.Unary,
    },
    /**
     * List method for showing all property types in the system
     *
     * @generated from rpc property.v1.PropertyService.ListPropertyType
     */
    listPropertyType: {
      name: "ListPropertyType",
      I: ListPropertyTypeRequest,
      O: ListPropertyTypeResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Create method for adding a new locality into the system
     *
     * @generated from rpc property.v1.PropertyService.AddLocality
     */
    addLocality: {
      name: "AddLocality",
      I: AddLocalityRequest,
      O: AddLocalityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete method for removing an existing locality from the system
     *
     * @generated from rpc property.v1.PropertyService.DeleteLocality
     */
    deleteLocality: {
      name: "DeleteLocality",
      I: DeleteLocalityRequest,
      O: DeleteLocalityResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Create method for adding a new property into the system
     *
     * @generated from rpc property.v1.PropertyService.CreateProperty
     */
    createProperty: {
      name: "CreateProperty",
      I: CreatePropertyRequest,
      O: CreatePropertyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update property request to modify its current form to another
     *
     * @generated from rpc property.v1.PropertyService.UpdateProperty
     */
    updateProperty: {
      name: "UpdateProperty",
      I: UpdatePropertyRequest,
      O: UpdatePropertyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete property request to modify its current form to another
     *
     * @generated from rpc property.v1.PropertyService.DeleteProperty
     */
    deleteProperty: {
      name: "DeleteProperty",
      I: DeletePropertyRequest,
      O: DeletePropertyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * State request to determine active state and status of a property
     *
     * @generated from rpc property.v1.PropertyService.StateOfProperty
     */
    stateOfProperty: {
      name: "StateOfProperty",
      I: StateOfPropertyRequest,
      O: StateOfPropertyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * History request returns all the state transitions a property has had over its lifetime in the system
     *
     * @generated from rpc property.v1.PropertyService.HistoryOfProperty
     */
    historyOfProperty: {
      name: "HistoryOfProperty",
      I: HistoryOfPropertyRequest,
      O: HistoryOfPropertyResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * Search method is for client request to query for properties that match query
     *
     * @generated from rpc property.v1.PropertyService.SearchProperty
     */
    searchProperty: {
      name: "SearchProperty",
      I: SearchPropertyRequest,
      O: SearchPropertyResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * ListSubscriptions for a particular property
     *
     * @generated from rpc property.v1.PropertyService.ListSubscription
     */
    listSubscription: {
      name: "ListSubscription",
      I: ListSubscriptionRequest,
      O: ListSubscriptionResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * AddSubscription for a profile to a property
     *
     * @generated from rpc property.v1.PropertyService.AddSubscription
     */
    addSubscription: {
      name: "AddSubscription",
      I: AddSubscriptionRequest,
      O: AddSubscriptionResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Delete subscription of profile to a property
     *
     * @generated from rpc property.v1.PropertyService.DeleteSubscription
     */
    deleteSubscription: {
      name: "DeleteSubscription",
      I: DeleteSubscriptionRequest,
      O: DeleteSubscriptionResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

