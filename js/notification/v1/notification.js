// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// source: notification/v1/notification.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.notification.v1.Notification');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Map');
goog.require('jspb.Message');
goog.require('proto.common.v1.ContactLink');
goog.require('proto.common.v1.StatusResponse');

goog.forwardDeclare('proto.notification.v1.PRIORITY');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.notification.v1.Notification = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.notification.v1.Notification, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.notification.v1.Notification.displayName = 'proto.notification.v1.Notification';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.notification.v1.Notification.prototype.toObject = function(opt_includeInstance) {
  return proto.notification.v1.Notification.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.notification.v1.Notification} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification.v1.Notification.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    parentId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    source: (f = msg.getSource()) && proto.common.v1.ContactLink.toObject(includeInstance, f),
    recipient: (f = msg.getRecipient()) && proto.common.v1.ContactLink.toObject(includeInstance, f),
    type: jspb.Message.getFieldWithDefault(msg, 6, ""),
    template: jspb.Message.getFieldWithDefault(msg, 7, ""),
    payloadMap: (f = msg.getPayloadMap()) ? f.toObject(includeInstance, undefined) : [],
    data: jspb.Message.getFieldWithDefault(msg, 9, ""),
    language: jspb.Message.getFieldWithDefault(msg, 10, ""),
    outBound: jspb.Message.getBooleanFieldWithDefault(msg, 11, false),
    autoRelease: jspb.Message.getBooleanFieldWithDefault(msg, 12, false),
    routeId: jspb.Message.getFieldWithDefault(msg, 13, ""),
    status: (f = msg.getStatus()) && proto.common.v1.StatusResponse.toObject(includeInstance, f),
    extrasMap: (f = msg.getExtrasMap()) ? f.toObject(includeInstance, undefined) : [],
    priority: jspb.Message.getFieldWithDefault(msg, 16, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.notification.v1.Notification}
 */
proto.notification.v1.Notification.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.notification.v1.Notification;
  return proto.notification.v1.Notification.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.notification.v1.Notification} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.notification.v1.Notification}
 */
proto.notification.v1.Notification.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 3:
      var value = new proto.common.v1.ContactLink;
      reader.readMessage(value,proto.common.v1.ContactLink.deserializeBinaryFromReader);
      msg.setSource(value);
      break;
    case 4:
      var value = new proto.common.v1.ContactLink;
      reader.readMessage(value,proto.common.v1.ContactLink.deserializeBinaryFromReader);
      msg.setRecipient(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTemplate(value);
      break;
    case 8:
      var value = msg.getPayloadMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setData(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguage(value);
      break;
    case 11:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOutBound(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAutoRelease(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setRouteId(value);
      break;
    case 14:
      var value = new proto.common.v1.StatusResponse;
      reader.readMessage(value,proto.common.v1.StatusResponse.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 15:
      var value = msg.getExtrasMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 16:
      var value = /** @type {!proto.notification.v1.PRIORITY} */ (reader.readEnum());
      msg.setPriority(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.notification.v1.Notification.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.notification.v1.Notification.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.notification.v1.Notification} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.notification.v1.Notification.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getParentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSource();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.common.v1.ContactLink.serializeBinaryToWriter
    );
  }
  f = message.getRecipient();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.common.v1.ContactLink.serializeBinaryToWriter
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getTemplate();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getPayloadMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(8, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getData();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLanguage();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getOutBound();
  if (f) {
    writer.writeBool(
      11,
      f
    );
  }
  f = message.getAutoRelease();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getRouteId();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.common.v1.StatusResponse.serializeBinaryToWriter
    );
  }
  f = message.getExtrasMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(15, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getPriority();
  if (f !== 0.0) {
    writer.writeEnum(
      16,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.notification.v1.Notification.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string parent_id = 2;
 * @return {string}
 */
proto.notification.v1.Notification.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.setParentId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional common.v1.ContactLink source = 3;
 * @return {?proto.common.v1.ContactLink}
 */
proto.notification.v1.Notification.prototype.getSource = function() {
  return /** @type{?proto.common.v1.ContactLink} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ContactLink, 3));
};


/**
 * @param {?proto.common.v1.ContactLink|undefined} value
 * @return {!proto.notification.v1.Notification} returns this
*/
proto.notification.v1.Notification.prototype.setSource = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.clearSource = function() {
  return this.setSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.notification.v1.Notification.prototype.hasSource = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.v1.ContactLink recipient = 4;
 * @return {?proto.common.v1.ContactLink}
 */
proto.notification.v1.Notification.prototype.getRecipient = function() {
  return /** @type{?proto.common.v1.ContactLink} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.ContactLink, 4));
};


/**
 * @param {?proto.common.v1.ContactLink|undefined} value
 * @return {!proto.notification.v1.Notification} returns this
*/
proto.notification.v1.Notification.prototype.setRecipient = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.clearRecipient = function() {
  return this.setRecipient(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.notification.v1.Notification.prototype.hasRecipient = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string type = 6;
 * @return {string}
 */
proto.notification.v1.Notification.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string template = 7;
 * @return {string}
 */
proto.notification.v1.Notification.prototype.getTemplate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.setTemplate = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * map<string, string> payload = 8;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.notification.v1.Notification.prototype.getPayloadMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 8, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.clearPayloadMap = function() {
  this.getPayloadMap().clear();
  return this;
};


/**
 * optional string data = 9;
 * @return {string}
 */
proto.notification.v1.Notification.prototype.getData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.setData = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string language = 10;
 * @return {string}
 */
proto.notification.v1.Notification.prototype.getLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.setLanguage = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional bool out_bound = 11;
 * @return {boolean}
 */
proto.notification.v1.Notification.prototype.getOutBound = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 11, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.setOutBound = function(value) {
  return jspb.Message.setProto3BooleanField(this, 11, value);
};


/**
 * optional bool auto_release = 12;
 * @return {boolean}
 */
proto.notification.v1.Notification.prototype.getAutoRelease = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 12, false));
};


/**
 * @param {boolean} value
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.setAutoRelease = function(value) {
  return jspb.Message.setProto3BooleanField(this, 12, value);
};


/**
 * optional string route_id = 13;
 * @return {string}
 */
proto.notification.v1.Notification.prototype.getRouteId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.setRouteId = function(value) {
  return jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional common.v1.StatusResponse status = 14;
 * @return {?proto.common.v1.StatusResponse}
 */
proto.notification.v1.Notification.prototype.getStatus = function() {
  return /** @type{?proto.common.v1.StatusResponse} */ (
    jspb.Message.getWrapperField(this, proto.common.v1.StatusResponse, 14));
};


/**
 * @param {?proto.common.v1.StatusResponse|undefined} value
 * @return {!proto.notification.v1.Notification} returns this
*/
proto.notification.v1.Notification.prototype.setStatus = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.notification.v1.Notification.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * map<string, string> extras = 15;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.notification.v1.Notification.prototype.getExtrasMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 15, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.clearExtrasMap = function() {
  this.getExtrasMap().clear();
  return this;
};


/**
 * optional PRIORITY priority = 16;
 * @return {!proto.notification.v1.PRIORITY}
 */
proto.notification.v1.Notification.prototype.getPriority = function() {
  return /** @type {!proto.notification.v1.PRIORITY} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/**
 * @param {!proto.notification.v1.PRIORITY} value
 * @return {!proto.notification.v1.Notification} returns this
 */
proto.notification.v1.Notification.prototype.setPriority = function(value) {
  return jspb.Message.setProto3EnumField(this, 16, value);
};


