// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: payment/v1/payment.proto

package paymentv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/antinvestor/apis/go/common/v1"
	_ "github.com/google/gnostic/openapiv3"
	money "google.golang.org/genproto/googleapis/type/money"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// NotificationType defines how customers are notified about payment links.
type NotificationType int32

const (
	NotificationType_NOTIFICATION_TYPE_UNSPECIFIED NotificationType = 0 // No notification preference specified
	NotificationType_NOTIFICATION_TYPE_EMAIL       NotificationType = 1 // Send payment link via email
	NotificationType_NOTIFICATION_TYPE_SMS         NotificationType = 2 // Send payment link via SMS
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		0: "NOTIFICATION_TYPE_UNSPECIFIED",
		1: "NOTIFICATION_TYPE_EMAIL",
		2: "NOTIFICATION_TYPE_SMS",
	}
	NotificationType_value = map[string]int32{
		"NOTIFICATION_TYPE_UNSPECIFIED": 0,
		"NOTIFICATION_TYPE_EMAIL":       1,
		"NOTIFICATION_TYPE_SMS":         2,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_payment_v1_payment_proto_enumTypes[0].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_payment_v1_payment_proto_enumTypes[0]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{0}
}

// Payment represents a payment transaction.
type Payment struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Id                    string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                                      // Unique payment ID
	TransactionId         string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`                           // Associated transaction ID (ledger)
	ReferenceId           string                 `protobuf:"bytes,3,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`                                 // External reference (invoice, order)
	BatchId               string                 `protobuf:"bytes,4,opt,name=batch_id,json=batchId,proto3" json:"batch_id,omitempty"`                                             // Batch ID for grouped payments
	ExternalTransactionId string                 `protobuf:"bytes,5,opt,name=external_transaction_id,json=externalTransactionId,proto3" json:"external_transaction_id,omitempty"` // Provider's transaction ID (M-PESA, bank)
	Route                 string                 `protobuf:"bytes,6,opt,name=route,proto3" json:"route,omitempty"`                                                                // Payment route (M-PESA, RTGS, CARD, INTERNAL)
	Source                *v1.ContactLink        `protobuf:"bytes,7,opt,name=source,proto3" json:"source,omitempty"`                                                              // Payment source (payer)
	Recipient             *v1.ContactLink        `protobuf:"bytes,8,opt,name=recipient,proto3" json:"recipient,omitempty"`                                                        // Payment recipient (payee)
	Amount                *money.Money           `protobuf:"bytes,9,opt,name=amount,proto3" json:"amount,omitempty"`                                                              // Payment amount
	Cost                  *money.Money           `protobuf:"bytes,10,opt,name=cost,proto3" json:"cost,omitempty"`                                                                 // Transaction cost/fee
	State                 v1.STATE               `protobuf:"varint,11,opt,name=state,proto3,enum=common.v1.STATE" json:"state,omitempty"`                                         // Processing state
	Status                v1.STATUS              `protobuf:"varint,12,opt,name=status,proto3,enum=common.v1.STATUS" json:"status,omitempty"`                                      // Payment status
	DateCreated           string                 `protobuf:"bytes,13,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`                                // Creation timestamp (RFC3339)
	DateProcessed         string                 `protobuf:"bytes,14,opt,name=date_processed,json=dateProcessed,proto3" json:"date_processed,omitempty"`                          // Processing timestamp (RFC3339)
	Outbound              bool                   `protobuf:"varint,15,opt,name=outbound,proto3" json:"outbound,omitempty"`                                                        // True if outbound, false if inbound
	Extra                 *structpb.Struct       `protobuf:"bytes,16,opt,name=extra,proto3" json:"extra,omitempty"`                                                               // Additional metadata
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *Payment) Reset() {
	*x = Payment{}
	mi := &file_payment_v1_payment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{0}
}

func (x *Payment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Payment) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *Payment) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *Payment) GetBatchId() string {
	if x != nil {
		return x.BatchId
	}
	return ""
}

func (x *Payment) GetExternalTransactionId() string {
	if x != nil {
		return x.ExternalTransactionId
	}
	return ""
}

func (x *Payment) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *Payment) GetSource() *v1.ContactLink {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Payment) GetRecipient() *v1.ContactLink {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *Payment) GetAmount() *money.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *Payment) GetCost() *money.Money {
	if x != nil {
		return x.Cost
	}
	return nil
}

func (x *Payment) GetState() v1.STATE {
	if x != nil {
		return x.State
	}
	return v1.STATE(0)
}

func (x *Payment) GetStatus() v1.STATUS {
	if x != nil {
		return x.Status
	}
	return v1.STATUS(0)
}

func (x *Payment) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *Payment) GetDateProcessed() string {
	if x != nil {
		return x.DateProcessed
	}
	return ""
}

func (x *Payment) GetOutbound() bool {
	if x != nil {
		return x.Outbound
	}
	return false
}

func (x *Payment) GetExtra() *structpb.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

// Account represents a merchant or recipient account.
type Account struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AccountNumber string                 `protobuf:"bytes,1,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"` // Account number to be credited
	CountryCode   string                 `protobuf:"bytes,2,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`       // Country code (ISO 3166-1 alpha-2)
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                                        // Account holder name
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_payment_v1_payment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{1}
}

func (x *Account) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *Account) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Account) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Customer represents a payment link customer.
type Customer struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Source              *v1.ContactLink        `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`                                                        // Customer contact information
	FirstAddress        string                 `protobuf:"bytes,2,opt,name=first_address,json=firstAddress,proto3" json:"first_address,omitempty"`                        // Primary address line
	CountryCode         string                 `protobuf:"bytes,3,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`                           // Country code (ISO 3166-1 alpha-2)
	PostalOrZipCode     string                 `protobuf:"bytes,4,opt,name=postal_or_zip_code,json=postalOrZipCode,proto3" json:"postal_or_zip_code,omitempty"`           // Postal/ZIP code
	CustomerExternalRef string                 `protobuf:"bytes,5,opt,name=customer_external_ref,json=customerExternalRef,proto3" json:"customer_external_ref,omitempty"` // External customer reference
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *Customer) Reset() {
	*x = Customer{}
	mi := &file_payment_v1_payment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Customer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Customer) ProtoMessage() {}

func (x *Customer) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Customer.ProtoReflect.Descriptor instead.
func (*Customer) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{2}
}

func (x *Customer) GetSource() *v1.ContactLink {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Customer) GetFirstAddress() string {
	if x != nil {
		return x.FirstAddress
	}
	return ""
}

func (x *Customer) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Customer) GetPostalOrZipCode() string {
	if x != nil {
		return x.PostalOrZipCode
	}
	return ""
}

func (x *Customer) GetCustomerExternalRef() string {
	if x != nil {
		return x.CustomerExternalRef
	}
	return ""
}

// PaymentLink represents a shareable payment link.
type PaymentLink struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                                    // Unique payment link ID
	ExpiryDate      string                 `protobuf:"bytes,2,opt,name=expiry_date,json=expiryDate,proto3" json:"expiry_date,omitempty"`                  // Link expiration date (RFC3339)
	SaleDate        string                 `protobuf:"bytes,3,opt,name=sale_date,json=saleDate,proto3" json:"sale_date,omitempty"`                        // Sale date (RFC3339)
	PaymentLinkType string                 `protobuf:"bytes,4,opt,name=payment_link_type,json=paymentLinkType,proto3" json:"payment_link_type,omitempty"` // Link type (invoice, donation, subscription)
	SaleType        string                 `protobuf:"bytes,5,opt,name=sale_type,json=saleType,proto3" json:"sale_type,omitempty"`                        // Sale type (goods, services)
	Name            string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                                                // Payment link name/title
	Description     string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                                  // Payment description
	ExternalRef     string                 `protobuf:"bytes,8,opt,name=external_ref,json=externalRef,proto3" json:"external_ref,omitempty"`               // External reference (invoice number)
	PaymentLinkRef  string                 `protobuf:"bytes,9,opt,name=payment_link_ref,json=paymentLinkRef,proto3" json:"payment_link_ref,omitempty"`    // Generated payment link reference
	RedirectUrl     string                 `protobuf:"bytes,10,opt,name=redirect_url,json=redirectUrl,proto3" json:"redirect_url,omitempty"`              // Post-payment redirect URL
	AmountOption    string                 `protobuf:"bytes,11,opt,name=amount_option,json=amountOption,proto3" json:"amount_option,omitempty"`           // Amount option (fixed, variable, minimum)
	Amount          *money.Money           `protobuf:"bytes,12,opt,name=amount,proto3" json:"amount,omitempty"`                                           // Payment amount (if fixed)
	Currency        string                 `protobuf:"bytes,13,opt,name=currency,proto3" json:"currency,omitempty"`                                       // Currency code (ISO 4217)
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *PaymentLink) Reset() {
	*x = PaymentLink{}
	mi := &file_payment_v1_payment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PaymentLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentLink) ProtoMessage() {}

func (x *PaymentLink) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentLink.ProtoReflect.Descriptor instead.
func (*PaymentLink) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{3}
}

func (x *PaymentLink) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *PaymentLink) GetExpiryDate() string {
	if x != nil {
		return x.ExpiryDate
	}
	return ""
}

func (x *PaymentLink) GetSaleDate() string {
	if x != nil {
		return x.SaleDate
	}
	return ""
}

func (x *PaymentLink) GetPaymentLinkType() string {
	if x != nil {
		return x.PaymentLinkType
	}
	return ""
}

func (x *PaymentLink) GetSaleType() string {
	if x != nil {
		return x.SaleType
	}
	return ""
}

func (x *PaymentLink) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PaymentLink) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PaymentLink) GetExternalRef() string {
	if x != nil {
		return x.ExternalRef
	}
	return ""
}

func (x *PaymentLink) GetPaymentLinkRef() string {
	if x != nil {
		return x.PaymentLinkRef
	}
	return ""
}

func (x *PaymentLink) GetRedirectUrl() string {
	if x != nil {
		return x.RedirectUrl
	}
	return ""
}

func (x *PaymentLink) GetAmountOption() string {
	if x != nil {
		return x.AmountOption
	}
	return ""
}

func (x *PaymentLink) GetAmount() *money.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *PaymentLink) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

// SendRequest queues an outbound payment.
type SendRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Payment               `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // Payment to send
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendRequest) Reset() {
	*x = SendRequest{}
	mi := &file_payment_v1_payment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendRequest) ProtoMessage() {}

func (x *SendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendRequest.ProtoReflect.Descriptor instead.
func (*SendRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{4}
}

func (x *SendRequest) GetData() *Payment {
	if x != nil {
		return x.Data
	}
	return nil
}

// SendResponse confirms payment queuing.
type SendResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *v1.StatusResponse     `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // Status response
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendResponse) Reset() {
	*x = SendResponse{}
	mi := &file_payment_v1_payment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendResponse) ProtoMessage() {}

func (x *SendResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendResponse.ProtoReflect.Descriptor instead.
func (*SendResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{5}
}

func (x *SendResponse) GetData() *v1.StatusResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

// ReceiveRequest queues an inbound payment.
type ReceiveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *Payment               `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // Payment to receive
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveRequest) Reset() {
	*x = ReceiveRequest{}
	mi := &file_payment_v1_payment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveRequest) ProtoMessage() {}

func (x *ReceiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveRequest.ProtoReflect.Descriptor instead.
func (*ReceiveRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{6}
}

func (x *ReceiveRequest) GetData() *Payment {
	if x != nil {
		return x.Data
	}
	return nil
}

// ReceiveResponse confirms payment queuing.
type ReceiveResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *v1.StatusResponse     `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // Status response
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiveResponse) Reset() {
	*x = ReceiveResponse{}
	mi := &file_payment_v1_payment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiveResponse) ProtoMessage() {}

func (x *ReceiveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiveResponse.ProtoReflect.Descriptor instead.
func (*ReceiveResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{7}
}

func (x *ReceiveResponse) GetData() *v1.StatusResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

// InitiatePromptRequest initiates a payment prompt (e.g., STK push).
type InitiatePromptRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Source           *v1.ContactLink        `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`                                              // Payment source
	Recipient        *v1.ContactLink        `protobuf:"bytes,2,opt,name=recipient,proto3" json:"recipient,omitempty"`                                        // Payment recipient
	Amount           *money.Money           `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`                                              // Payment amount
	DateCreated      string                 `protobuf:"bytes,4,opt,name=date_created,json=dateCreated,proto3" json:"date_created,omitempty"`                 // Creation timestamp (RFC3339)
	DeviceId         string                 `protobuf:"bytes,5,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`                          // Device ID for prompt
	Id               string                 `protobuf:"bytes,6,opt,name=id,proto3" json:"id,omitempty"`                                                      // Payment ID
	State            v1.STATE               `protobuf:"varint,7,opt,name=state,proto3,enum=common.v1.STATE" json:"state,omitempty"`                          // Processing state
	Status           v1.STATUS              `protobuf:"varint,8,opt,name=status,proto3,enum=common.v1.STATUS" json:"status,omitempty"`                       // Payment status
	Route            string                 `protobuf:"bytes,9,opt,name=route,proto3" json:"route,omitempty"`                                                // Payment route hint (M-PESA, RTGS, INTERNAL)
	RecipientAccount *Account               `protobuf:"bytes,10,opt,name=recipient_account,json=recipientAccount,proto3" json:"recipient_account,omitempty"` // Merchant account information
	Extra            *structpb.Struct       `protobuf:"bytes,11,opt,name=extra,proto3" json:"extra,omitempty"`                                               // Additional metadata
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *InitiatePromptRequest) Reset() {
	*x = InitiatePromptRequest{}
	mi := &file_payment_v1_payment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiatePromptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiatePromptRequest) ProtoMessage() {}

func (x *InitiatePromptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiatePromptRequest.ProtoReflect.Descriptor instead.
func (*InitiatePromptRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{8}
}

func (x *InitiatePromptRequest) GetSource() *v1.ContactLink {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *InitiatePromptRequest) GetRecipient() *v1.ContactLink {
	if x != nil {
		return x.Recipient
	}
	return nil
}

func (x *InitiatePromptRequest) GetAmount() *money.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *InitiatePromptRequest) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *InitiatePromptRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *InitiatePromptRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *InitiatePromptRequest) GetState() v1.STATE {
	if x != nil {
		return x.State
	}
	return v1.STATE(0)
}

func (x *InitiatePromptRequest) GetStatus() v1.STATUS {
	if x != nil {
		return x.Status
	}
	return v1.STATUS(0)
}

func (x *InitiatePromptRequest) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *InitiatePromptRequest) GetRecipientAccount() *Account {
	if x != nil {
		return x.RecipientAccount
	}
	return nil
}

func (x *InitiatePromptRequest) GetExtra() *structpb.Struct {
	if x != nil {
		return x.Extra
	}
	return nil
}

// InitiatePromptResponse confirms prompt initiation.
type InitiatePromptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *v1.StatusResponse     `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // Status response
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitiatePromptResponse) Reset() {
	*x = InitiatePromptResponse{}
	mi := &file_payment_v1_payment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitiatePromptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitiatePromptResponse) ProtoMessage() {}

func (x *InitiatePromptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitiatePromptResponse.ProtoReflect.Descriptor instead.
func (*InitiatePromptResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{9}
}

func (x *InitiatePromptResponse) GetData() *v1.StatusResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

// ReleaseRequest releases a queued payment for processing.
type ReleaseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`           // Payment ID to release
	Comment       string                 `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"` // Release comment/reason
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseRequest) Reset() {
	*x = ReleaseRequest{}
	mi := &file_payment_v1_payment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseRequest) ProtoMessage() {}

func (x *ReleaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseRequest.ProtoReflect.Descriptor instead.
func (*ReleaseRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{10}
}

func (x *ReleaseRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReleaseRequest) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

// ReleaseResponse confirms payment release.
type ReleaseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *v1.StatusResponse     `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // Status response
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReleaseResponse) Reset() {
	*x = ReleaseResponse{}
	mi := &file_payment_v1_payment_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReleaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReleaseResponse) ProtoMessage() {}

func (x *ReleaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReleaseResponse.ProtoReflect.Descriptor instead.
func (*ReleaseResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{11}
}

func (x *ReleaseResponse) GetData() *v1.StatusResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

// ReconcileRequest reconciles an external transaction.
type ReconcileRequest struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	ExternalTransactionId string                 `protobuf:"bytes,1,opt,name=external_transaction_id,json=externalTransactionId,proto3" json:"external_transaction_id,omitempty"` // Provider's transaction ID
	Route                 string                 `protobuf:"bytes,2,opt,name=route,proto3" json:"route,omitempty"`                                                                // Payment route
	Outbound              bool                   `protobuf:"varint,3,opt,name=outbound,proto3" json:"outbound,omitempty"`                                                         // Payment direction
	Amount                *money.Money           `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`                                                              // Transaction amount
	Owner                 string                 `protobuf:"bytes,5,opt,name=owner,proto3" json:"owner,omitempty"`                                                                // Account owner
	CountryCode           string                 `protobuf:"bytes,6,opt,name=country_code,json=countryCode,proto3" json:"country_code,omitempty"`                                 // Country code (ISO 3166-1 alpha-2)
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *ReconcileRequest) Reset() {
	*x = ReconcileRequest{}
	mi := &file_payment_v1_payment_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReconcileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconcileRequest) ProtoMessage() {}

func (x *ReconcileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconcileRequest.ProtoReflect.Descriptor instead.
func (*ReconcileRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{12}
}

func (x *ReconcileRequest) GetExternalTransactionId() string {
	if x != nil {
		return x.ExternalTransactionId
	}
	return ""
}

func (x *ReconcileRequest) GetRoute() string {
	if x != nil {
		return x.Route
	}
	return ""
}

func (x *ReconcileRequest) GetOutbound() bool {
	if x != nil {
		return x.Outbound
	}
	return false
}

func (x *ReconcileRequest) GetAmount() *money.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *ReconcileRequest) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *ReconcileRequest) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

// ReconcileResponse returns reconciliation result.
type ReconcileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                            // Internal payment ID
	TransactionId string                 `protobuf:"bytes,2,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"` // Transaction ID
	ReferenceId   string                 `protobuf:"bytes,3,opt,name=reference_id,json=referenceId,proto3" json:"reference_id,omitempty"`       // Reference ID
	Status        v1.STATUS              `protobuf:"varint,4,opt,name=status,proto3,enum=common.v1.STATUS" json:"status,omitempty"`             // Reconciliation status
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`                          // Status description
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReconcileResponse) Reset() {
	*x = ReconcileResponse{}
	mi := &file_payment_v1_payment_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReconcileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReconcileResponse) ProtoMessage() {}

func (x *ReconcileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReconcileResponse.ProtoReflect.Descriptor instead.
func (*ReconcileResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{13}
}

func (x *ReconcileResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ReconcileResponse) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *ReconcileResponse) GetReferenceId() string {
	if x != nil {
		return x.ReferenceId
	}
	return ""
}

func (x *ReconcileResponse) GetStatus() v1.STATUS {
	if x != nil {
		return x.Status
	}
	return v1.STATUS(0)
}

func (x *ReconcileResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

// SearchResponse returns payment search results.
type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Payment             `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"` // List of matching payments
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_payment_v1_payment_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{14}
}

func (x *SearchResponse) GetData() []*Payment {
	if x != nil {
		return x.Data
	}
	return nil
}

// CreatePaymentLinkRequest creates a new payment link.
type CreatePaymentLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Customers     []*Customer            `protobuf:"bytes,1,rep,name=customers,proto3" json:"customers,omitempty"`                                                  // Customers to notify
	PaymentLink   *PaymentLink           `protobuf:"bytes,2,opt,name=payment_link,json=paymentLink,proto3" json:"payment_link,omitempty"`                           // Payment link details
	Notifications []NotificationType     `protobuf:"varint,3,rep,packed,name=notifications,proto3,enum=payment.v1.NotificationType" json:"notifications,omitempty"` // Notification methods
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentLinkRequest) Reset() {
	*x = CreatePaymentLinkRequest{}
	mi := &file_payment_v1_payment_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentLinkRequest) ProtoMessage() {}

func (x *CreatePaymentLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentLinkRequest.ProtoReflect.Descriptor instead.
func (*CreatePaymentLinkRequest) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{15}
}

func (x *CreatePaymentLinkRequest) GetCustomers() []*Customer {
	if x != nil {
		return x.Customers
	}
	return nil
}

func (x *CreatePaymentLinkRequest) GetPaymentLink() *PaymentLink {
	if x != nil {
		return x.PaymentLink
	}
	return nil
}

func (x *CreatePaymentLinkRequest) GetNotifications() []NotificationType {
	if x != nil {
		return x.Notifications
	}
	return nil
}

// CreatePaymentLinkResponse returns the created payment link.
type CreatePaymentLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *v1.StatusResponse     `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // Status response with link
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePaymentLinkResponse) Reset() {
	*x = CreatePaymentLinkResponse{}
	mi := &file_payment_v1_payment_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePaymentLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePaymentLinkResponse) ProtoMessage() {}

func (x *CreatePaymentLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payment_v1_payment_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePaymentLinkResponse.ProtoReflect.Descriptor instead.
func (*CreatePaymentLinkResponse) Descriptor() ([]byte, []int) {
	return file_payment_v1_payment_proto_rawDescGZIP(), []int{16}
}

func (x *CreatePaymentLinkResponse) GetData() *v1.StatusResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_payment_v1_payment_proto protoreflect.FileDescriptor

const file_payment_v1_payment_proto_rawDesc = "" +
	"\n" +
	"\x18payment/v1/payment.proto\x12\n" +
	"payment.v1\x1a\x1bbuf/validate/validate.proto\x1a\x16common/v1/common.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x17google/type/money.proto\x1a$gnostic/openapi/v3/annotations.proto\"\xee\x04\n" +
	"\aPayment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12!\n" +
	"\freference_id\x18\x03 \x01(\tR\vreferenceId\x12\x19\n" +
	"\bbatch_id\x18\x04 \x01(\tR\abatchId\x126\n" +
	"\x17external_transaction_id\x18\x05 \x01(\tR\x15externalTransactionId\x12\x14\n" +
	"\x05route\x18\x06 \x01(\tR\x05route\x12.\n" +
	"\x06source\x18\a \x01(\v2\x16.common.v1.ContactLinkR\x06source\x124\n" +
	"\trecipient\x18\b \x01(\v2\x16.common.v1.ContactLinkR\trecipient\x12*\n" +
	"\x06amount\x18\t \x01(\v2\x12.google.type.MoneyR\x06amount\x12&\n" +
	"\x04cost\x18\n" +
	" \x01(\v2\x12.google.type.MoneyR\x04cost\x12&\n" +
	"\x05state\x18\v \x01(\x0e2\x10.common.v1.STATER\x05state\x12)\n" +
	"\x06status\x18\f \x01(\x0e2\x11.common.v1.STATUSR\x06status\x12!\n" +
	"\fdate_created\x18\r \x01(\tR\vdateCreated\x12%\n" +
	"\x0edate_processed\x18\x0e \x01(\tR\rdateProcessed\x12\x1a\n" +
	"\boutbound\x18\x0f \x01(\bR\boutbound\x12-\n" +
	"\x05extra\x18\x10 \x01(\v2\x17.google.protobuf.StructR\x05extra\"g\n" +
	"\aAccount\x12%\n" +
	"\x0eaccount_number\x18\x01 \x01(\tR\raccountNumber\x12!\n" +
	"\fcountry_code\x18\x02 \x01(\tR\vcountryCode\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\"\xe3\x01\n" +
	"\bCustomer\x12.\n" +
	"\x06source\x18\x01 \x01(\v2\x16.common.v1.ContactLinkR\x06source\x12#\n" +
	"\rfirst_address\x18\x02 \x01(\tR\ffirstAddress\x12!\n" +
	"\fcountry_code\x18\x03 \x01(\tR\vcountryCode\x12+\n" +
	"\x12postal_or_zip_code\x18\x04 \x01(\tR\x0fpostalOrZipCode\x122\n" +
	"\x15customer_external_ref\x18\x05 \x01(\tR\x13customerExternalRef\"\xd4\x03\n" +
	"\vPaymentLink\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\x02id\x12\x1f\n" +
	"\vexpiry_date\x18\x02 \x01(\tR\n" +
	"expiryDate\x12\x1b\n" +
	"\tsale_date\x18\x03 \x01(\tR\bsaleDate\x12*\n" +
	"\x11payment_link_type\x18\x04 \x01(\tR\x0fpaymentLinkType\x12\x1b\n" +
	"\tsale_type\x18\x05 \x01(\tR\bsaleType\x12\x12\n" +
	"\x04name\x18\x06 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12!\n" +
	"\fexternal_ref\x18\b \x01(\tR\vexternalRef\x12(\n" +
	"\x10payment_link_ref\x18\t \x01(\tR\x0epaymentLinkRef\x12!\n" +
	"\fredirect_url\x18\n" +
	" \x01(\tR\vredirectUrl\x12#\n" +
	"\ramount_option\x18\v \x01(\tR\famountOption\x12*\n" +
	"\x06amount\x18\f \x01(\v2\x12.google.type.MoneyR\x06amount\x12\x1a\n" +
	"\bcurrency\x18\r \x01(\tR\bcurrency\"6\n" +
	"\vSendRequest\x12'\n" +
	"\x04data\x18\x01 \x01(\v2\x13.payment.v1.PaymentR\x04data\"=\n" +
	"\fSendResponse\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.common.v1.StatusResponseR\x04data\"9\n" +
	"\x0eReceiveRequest\x12'\n" +
	"\x04data\x18\x01 \x01(\v2\x13.payment.v1.PaymentR\x04data\"@\n" +
	"\x0fReceiveResponse\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.common.v1.StatusResponseR\x04data\"\xd3\x03\n" +
	"\x15InitiatePromptRequest\x12.\n" +
	"\x06source\x18\x01 \x01(\v2\x16.common.v1.ContactLinkR\x06source\x124\n" +
	"\trecipient\x18\x02 \x01(\v2\x16.common.v1.ContactLinkR\trecipient\x12*\n" +
	"\x06amount\x18\x03 \x01(\v2\x12.google.type.MoneyR\x06amount\x12!\n" +
	"\fdate_created\x18\x04 \x01(\tR\vdateCreated\x12\x1b\n" +
	"\tdevice_id\x18\x05 \x01(\tR\bdeviceId\x12\x0e\n" +
	"\x02id\x18\x06 \x01(\tR\x02id\x12&\n" +
	"\x05state\x18\a \x01(\x0e2\x10.common.v1.STATER\x05state\x12)\n" +
	"\x06status\x18\b \x01(\x0e2\x11.common.v1.STATUSR\x06status\x12\x14\n" +
	"\x05route\x18\t \x01(\tR\x05route\x12@\n" +
	"\x11recipient_account\x18\n" +
	" \x01(\v2\x13.payment.v1.AccountR\x10recipientAccount\x12-\n" +
	"\x05extra\x18\v \x01(\v2\x17.google.protobuf.StructR\x05extra\"G\n" +
	"\x16InitiatePromptResponse\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.common.v1.StatusResponseR\x04data\"W\n" +
	"\x0eReleaseRequest\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\x02id\x12\x18\n" +
	"\acomment\x18\x02 \x01(\tR\acomment\"@\n" +
	"\x0fReleaseResponse\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.common.v1.StatusResponseR\x04data\"\xe1\x01\n" +
	"\x10ReconcileRequest\x126\n" +
	"\x17external_transaction_id\x18\x01 \x01(\tR\x15externalTransactionId\x12\x14\n" +
	"\x05route\x18\x02 \x01(\tR\x05route\x12\x1a\n" +
	"\boutbound\x18\x03 \x01(\bR\boutbound\x12*\n" +
	"\x06amount\x18\x04 \x01(\v2\x12.google.type.MoneyR\x06amount\x12\x14\n" +
	"\x05owner\x18\x05 \x01(\tR\x05owner\x12!\n" +
	"\fcountry_code\x18\x06 \x01(\tR\vcountryCode\"\xba\x01\n" +
	"\x11ReconcileResponse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12%\n" +
	"\x0etransaction_id\x18\x02 \x01(\tR\rtransactionId\x12!\n" +
	"\freference_id\x18\x03 \x01(\tR\vreferenceId\x12)\n" +
	"\x06status\x18\x04 \x01(\x0e2\x11.common.v1.STATUSR\x06status\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\"9\n" +
	"\x0eSearchResponse\x12'\n" +
	"\x04data\x18\x01 \x03(\v2\x13.payment.v1.PaymentR\x04data\"\xce\x01\n" +
	"\x18CreatePaymentLinkRequest\x122\n" +
	"\tcustomers\x18\x01 \x03(\v2\x14.payment.v1.CustomerR\tcustomers\x12:\n" +
	"\fpayment_link\x18\x02 \x01(\v2\x17.payment.v1.PaymentLinkR\vpaymentLink\x12B\n" +
	"\rnotifications\x18\x03 \x03(\x0e2\x1c.payment.v1.NotificationTypeR\rnotifications\"J\n" +
	"\x19CreatePaymentLinkResponse\x12-\n" +
	"\x04data\x18\x01 \x01(\v2\x19.common.v1.StatusResponseR\x04data*m\n" +
	"\x10NotificationType\x12!\n" +
	"\x1dNOTIFICATION_TYPE_UNSPECIFIED\x10\x00\x12\x1b\n" +
	"\x17NOTIFICATION_TYPE_EMAIL\x10\x01\x12\x19\n" +
	"\x15NOTIFICATION_TYPE_SMS\x10\x022\xa5\x16\n" +
	"\x0ePaymentService\x12\xd5\x02\n" +
	"\x04Send\x12\x17.payment.v1.SendRequest\x1a\x18.payment.v1.SendResponse\"\x99\x02\xbaG\x95\x02\n" +
	"\bPayments\x12\x16Queue outbound payment\x1a\xe3\x01Queues an outbound payment for processing. The payment is validated and queued but not processed until explicitly released via the Release RPC. Supports multiple payment routes including mobile money, bank transfers, and cards.*\vsendPayment\x12\x8b\x02\n" +
	"\aReceive\x12\x1a.payment.v1.ReceiveRequest\x1a\x1b.payment.v1.ReceiveResponse\"\xc6\x01\xbaG\xc2\x01\n" +
	"\bPayments\x12\x15Queue inbound payment\x1a\x8e\x01Queues an inbound payment for processing. Used to record expected incoming payments and match them with actual receipts during reconciliation.*\x0ereceivePayment\x12\xd1\x02\n" +
	"\x0eInitiatePrompt\x12!.payment.v1.InitiatePromptRequest\x1a\".payment.v1.InitiatePromptResponse\"\xf7\x01\xbaG\xf3\x01\n" +
	"\bPayments\x12\x17Initiate payment prompt\x1a\xb6\x01Initiates a payment prompt to the customer's device. For mobile money (e.g., M-PESA), this triggers an STK push prompt. For other methods, it may send a payment request notification.*\x15initiatePaymentPrompt\x12\xfb\x02\n" +
	"\x11CreatePaymentLink\x12$.payment.v1.CreatePaymentLinkRequest\x1a%.payment.v1.CreatePaymentLinkResponse\"\x98\x02\xbaG\x94\x02\n" +
	"\rPayment Links\x12\x13Create payment link\x1a\xda\x01Creates a shareable payment link for customer-initiated payments. Supports fixed or variable amounts, expiration dates, and multiple notification methods (email, SMS). Useful for invoices, donations, and subscriptions.*\x11createPaymentLink\x12\x84\x02\n" +
	"\x06Status\x12\x18.common.v1.StatusRequest\x1a\x19.common.v1.StatusResponse\"\xc4\x01\xbaG\xc0\x01\n" +
	"\bPayments\x12\x12Get payment status\x1a\x8d\x01Retrieves the current status of a payment including processing state (queued, processing, completed, failed) and detailed status information.*\x10getPaymentStatus\x12\xa9\x02\n" +
	"\fStatusUpdate\x12\x1e.common.v1.StatusUpdateRequest\x1a\x1f.common.v1.StatusUpdateResponse\"\xd7\x01\xbaG\xd3\x01\n" +
	"\bPayments\x12\x15Update payment status\x1a\x9a\x01Updates the status of a payment. Used for manual status corrections, workflow progression, or handling exceptional cases that require manual intervention.*\x13updatePaymentStatus\x12\xb1\x02\n" +
	"\aRelease\x12\x1a.payment.v1.ReleaseRequest\x1a\x1b.payment.v1.ReleaseResponse\"\xec\x01\xbaG\xe8\x01\n" +
	"\bPayments\x12\x16Release queued payment\x1a\xb3\x01Releases a queued payment for processing. This triggers the actual payment transfer through the specified route. Supports batch processing by releasing multiple payments together.*\x0ereleasePayment\x12\xb1\x02\n" +
	"\x06Search\x12\x18.common.v1.SearchRequest\x1a\x1a.payment.v1.SearchResponse\"\xee\x01\xbaG\xea\x01\n" +
	"\bPayments\x12\x0fSearch payments\x1a\xbc\x01Searches for payments matching specified criteria. Supports filtering by date range, amount, status, route, source, recipient, and custom properties. Returns a stream of matching payments.*\x0esearchPayments0\x01\x12\xbf\x02\n" +
	"\tReconcile\x12\x1c.payment.v1.ReconcileRequest\x1a\x1d.payment.v1.ReconcileResponse\"\xf4\x01\xbaG\xf0\x01\n" +
	"\x0eReconciliation\x12\x1eReconcile external transaction\x1a\xab\x01Reconciles an external transaction (from mobile money provider, bank statement) with internal payment records. Matches based on external transaction ID, amount, and route.*\x10reconcilePaymentB\xd1\x06\xbaG\xa0\x05\x12\xf4\x04\n" +
	"\x0fPayment Service\x12\xb3\x03The Payment Service provides comprehensive payment processing capabilities including inbound and outbound payments, payment link generation, reconciliation, and multi-channel payment routing. It supports various payment methods (mobile money, bank transfers, cards) and follows a queue-and-release pattern for batch processing. The service handles payment lifecycle management from initiation through completion with full audit trails.\"X\n" +
	"\x10Ant Investor Ltd\x12.https://github.com/antinvestor/service-payment\x1a\x14info@antinvestor.com*I\n" +
	"\x0eApache License\x127https://github.com/antinvestor/apis/blob/master/LICENSE2\x06v1.0.0*':%\n" +
	"#\n" +
	"\n" +
	"BearerAuth\x12\x15\n" +
	"\x13\n" +
	"\x04http*\x06bearer2\x03JWT\n" +
	"\x1fcom.antinvestor.apis.payment.v1B\fPaymentProtoP\x01Z3github.com/antinvestor/apis/go/payment/v1;paymentv1\xa2\x02\x03PXX\xaa\x02\n" +
	"Payment.V1\xca\x02\n" +
	"Payment\\V1\xe2\x02\x16Payment\\V1\\GPBMetadata\xea\x02\vPayment::V1b\x06proto3"

var (
	file_payment_v1_payment_proto_rawDescOnce sync.Once
	file_payment_v1_payment_proto_rawDescData []byte
)

func file_payment_v1_payment_proto_rawDescGZIP() []byte {
	file_payment_v1_payment_proto_rawDescOnce.Do(func() {
		file_payment_v1_payment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_payment_v1_payment_proto_rawDesc), len(file_payment_v1_payment_proto_rawDesc)))
	})
	return file_payment_v1_payment_proto_rawDescData
}

var file_payment_v1_payment_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_payment_v1_payment_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_payment_v1_payment_proto_goTypes = []any{
	(NotificationType)(0),             // 0: payment.v1.NotificationType
	(*Payment)(nil),                   // 1: payment.v1.Payment
	(*Account)(nil),                   // 2: payment.v1.Account
	(*Customer)(nil),                  // 3: payment.v1.Customer
	(*PaymentLink)(nil),               // 4: payment.v1.PaymentLink
	(*SendRequest)(nil),               // 5: payment.v1.SendRequest
	(*SendResponse)(nil),              // 6: payment.v1.SendResponse
	(*ReceiveRequest)(nil),            // 7: payment.v1.ReceiveRequest
	(*ReceiveResponse)(nil),           // 8: payment.v1.ReceiveResponse
	(*InitiatePromptRequest)(nil),     // 9: payment.v1.InitiatePromptRequest
	(*InitiatePromptResponse)(nil),    // 10: payment.v1.InitiatePromptResponse
	(*ReleaseRequest)(nil),            // 11: payment.v1.ReleaseRequest
	(*ReleaseResponse)(nil),           // 12: payment.v1.ReleaseResponse
	(*ReconcileRequest)(nil),          // 13: payment.v1.ReconcileRequest
	(*ReconcileResponse)(nil),         // 14: payment.v1.ReconcileResponse
	(*SearchResponse)(nil),            // 15: payment.v1.SearchResponse
	(*CreatePaymentLinkRequest)(nil),  // 16: payment.v1.CreatePaymentLinkRequest
	(*CreatePaymentLinkResponse)(nil), // 17: payment.v1.CreatePaymentLinkResponse
	(*v1.ContactLink)(nil),            // 18: common.v1.ContactLink
	(*money.Money)(nil),               // 19: google.type.Money
	(v1.STATE)(0),                     // 20: common.v1.STATE
	(v1.STATUS)(0),                    // 21: common.v1.STATUS
	(*structpb.Struct)(nil),           // 22: google.protobuf.Struct
	(*v1.StatusResponse)(nil),         // 23: common.v1.StatusResponse
	(*v1.StatusRequest)(nil),          // 24: common.v1.StatusRequest
	(*v1.StatusUpdateRequest)(nil),    // 25: common.v1.StatusUpdateRequest
	(*v1.SearchRequest)(nil),          // 26: common.v1.SearchRequest
	(*v1.StatusUpdateResponse)(nil),   // 27: common.v1.StatusUpdateResponse
}
var file_payment_v1_payment_proto_depIdxs = []int32{
	18, // 0: payment.v1.Payment.source:type_name -> common.v1.ContactLink
	18, // 1: payment.v1.Payment.recipient:type_name -> common.v1.ContactLink
	19, // 2: payment.v1.Payment.amount:type_name -> google.type.Money
	19, // 3: payment.v1.Payment.cost:type_name -> google.type.Money
	20, // 4: payment.v1.Payment.state:type_name -> common.v1.STATE
	21, // 5: payment.v1.Payment.status:type_name -> common.v1.STATUS
	22, // 6: payment.v1.Payment.extra:type_name -> google.protobuf.Struct
	18, // 7: payment.v1.Customer.source:type_name -> common.v1.ContactLink
	19, // 8: payment.v1.PaymentLink.amount:type_name -> google.type.Money
	1,  // 9: payment.v1.SendRequest.data:type_name -> payment.v1.Payment
	23, // 10: payment.v1.SendResponse.data:type_name -> common.v1.StatusResponse
	1,  // 11: payment.v1.ReceiveRequest.data:type_name -> payment.v1.Payment
	23, // 12: payment.v1.ReceiveResponse.data:type_name -> common.v1.StatusResponse
	18, // 13: payment.v1.InitiatePromptRequest.source:type_name -> common.v1.ContactLink
	18, // 14: payment.v1.InitiatePromptRequest.recipient:type_name -> common.v1.ContactLink
	19, // 15: payment.v1.InitiatePromptRequest.amount:type_name -> google.type.Money
	20, // 16: payment.v1.InitiatePromptRequest.state:type_name -> common.v1.STATE
	21, // 17: payment.v1.InitiatePromptRequest.status:type_name -> common.v1.STATUS
	2,  // 18: payment.v1.InitiatePromptRequest.recipient_account:type_name -> payment.v1.Account
	22, // 19: payment.v1.InitiatePromptRequest.extra:type_name -> google.protobuf.Struct
	23, // 20: payment.v1.InitiatePromptResponse.data:type_name -> common.v1.StatusResponse
	23, // 21: payment.v1.ReleaseResponse.data:type_name -> common.v1.StatusResponse
	19, // 22: payment.v1.ReconcileRequest.amount:type_name -> google.type.Money
	21, // 23: payment.v1.ReconcileResponse.status:type_name -> common.v1.STATUS
	1,  // 24: payment.v1.SearchResponse.data:type_name -> payment.v1.Payment
	3,  // 25: payment.v1.CreatePaymentLinkRequest.customers:type_name -> payment.v1.Customer
	4,  // 26: payment.v1.CreatePaymentLinkRequest.payment_link:type_name -> payment.v1.PaymentLink
	0,  // 27: payment.v1.CreatePaymentLinkRequest.notifications:type_name -> payment.v1.NotificationType
	23, // 28: payment.v1.CreatePaymentLinkResponse.data:type_name -> common.v1.StatusResponse
	5,  // 29: payment.v1.PaymentService.Send:input_type -> payment.v1.SendRequest
	7,  // 30: payment.v1.PaymentService.Receive:input_type -> payment.v1.ReceiveRequest
	9,  // 31: payment.v1.PaymentService.InitiatePrompt:input_type -> payment.v1.InitiatePromptRequest
	16, // 32: payment.v1.PaymentService.CreatePaymentLink:input_type -> payment.v1.CreatePaymentLinkRequest
	24, // 33: payment.v1.PaymentService.Status:input_type -> common.v1.StatusRequest
	25, // 34: payment.v1.PaymentService.StatusUpdate:input_type -> common.v1.StatusUpdateRequest
	11, // 35: payment.v1.PaymentService.Release:input_type -> payment.v1.ReleaseRequest
	26, // 36: payment.v1.PaymentService.Search:input_type -> common.v1.SearchRequest
	13, // 37: payment.v1.PaymentService.Reconcile:input_type -> payment.v1.ReconcileRequest
	6,  // 38: payment.v1.PaymentService.Send:output_type -> payment.v1.SendResponse
	8,  // 39: payment.v1.PaymentService.Receive:output_type -> payment.v1.ReceiveResponse
	10, // 40: payment.v1.PaymentService.InitiatePrompt:output_type -> payment.v1.InitiatePromptResponse
	17, // 41: payment.v1.PaymentService.CreatePaymentLink:output_type -> payment.v1.CreatePaymentLinkResponse
	23, // 42: payment.v1.PaymentService.Status:output_type -> common.v1.StatusResponse
	27, // 43: payment.v1.PaymentService.StatusUpdate:output_type -> common.v1.StatusUpdateResponse
	12, // 44: payment.v1.PaymentService.Release:output_type -> payment.v1.ReleaseResponse
	15, // 45: payment.v1.PaymentService.Search:output_type -> payment.v1.SearchResponse
	14, // 46: payment.v1.PaymentService.Reconcile:output_type -> payment.v1.ReconcileResponse
	38, // [38:47] is the sub-list for method output_type
	29, // [29:38] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_payment_v1_payment_proto_init() }
func file_payment_v1_payment_proto_init() {
	if File_payment_v1_payment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_payment_v1_payment_proto_rawDesc), len(file_payment_v1_payment_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payment_v1_payment_proto_goTypes,
		DependencyIndexes: file_payment_v1_payment_proto_depIdxs,
		EnumInfos:         file_payment_v1_payment_proto_enumTypes,
		MessageInfos:      file_payment_v1_payment_proto_msgTypes,
	}.Build()
	File_payment_v1_payment_proto = out.File
	file_payment_v1_payment_proto_goTypes = nil
	file_payment_v1_payment_proto_depIdxs = nil
}
