// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: ledger/v1/ledger.proto

package ledgerv1

import (
	v1 "github.com/antinvestor/apis/go/common/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	money "google.golang.org/genproto/googleapis/type/money"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// buf:lint:ignore ENUM_VALUE_PREFIX
type LedgerType int32

const (
	// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
	LedgerType_ASSET     LedgerType = 0
	LedgerType_LIABILITY LedgerType = 1
	LedgerType_INCOME    LedgerType = 2
	LedgerType_EXPENSE   LedgerType = 3
	LedgerType_CAPITAL   LedgerType = 4
)

// Enum value maps for LedgerType.
var (
	LedgerType_name = map[int32]string{
		0: "ASSET",
		1: "LIABILITY",
		2: "INCOME",
		3: "EXPENSE",
		4: "CAPITAL",
	}
	LedgerType_value = map[string]int32{
		"ASSET":     0,
		"LIABILITY": 1,
		"INCOME":    2,
		"EXPENSE":   3,
		"CAPITAL":   4,
	}
)

func (x LedgerType) Enum() *LedgerType {
	p := new(LedgerType)
	*p = x
	return p
}

func (x LedgerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LedgerType) Descriptor() protoreflect.EnumDescriptor {
	return file_ledger_v1_ledger_proto_enumTypes[0].Descriptor()
}

func (LedgerType) Type() protoreflect.EnumType {
	return &file_ledger_v1_ledger_proto_enumTypes[0]
}

func (x LedgerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LedgerType.Descriptor instead.
func (LedgerType) EnumDescriptor() ([]byte, []int) {
	return file_ledger_v1_ledger_proto_rawDescGZIP(), []int{0}
}

// buf:lint:ignore ENUM_VALUE_PREFIX
type TransactionType int32

const (
	// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
	TransactionType_NORMAL      TransactionType = 0
	TransactionType_REVERSAL    TransactionType = 1
	TransactionType_RESERVATION TransactionType = 2
)

// Enum value maps for TransactionType.
var (
	TransactionType_name = map[int32]string{
		0: "NORMAL",
		1: "REVERSAL",
		2: "RESERVATION",
	}
	TransactionType_value = map[string]int32{
		"NORMAL":      0,
		"REVERSAL":    1,
		"RESERVATION": 2,
	}
)

func (x TransactionType) Enum() *TransactionType {
	p := new(TransactionType)
	*p = x
	return p
}

func (x TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_ledger_v1_ledger_proto_enumTypes[1].Descriptor()
}

func (TransactionType) Type() protoreflect.EnumType {
	return &file_ledger_v1_ledger_proto_enumTypes[1]
}

func (x TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType.Descriptor instead.
func (TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_ledger_v1_ledger_proto_rawDescGZIP(), []int{1}
}

type SearchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_ledger_v1_ledger_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ledger_v1_ledger_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_ledger_v1_ledger_proto_rawDescGZIP(), []int{0}
}

func (x *SearchRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type Ledger struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reference     string                 `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	Type          LedgerType             `protobuf:"varint,2,opt,name=type,proto3,enum=ledger.v1.LedgerType" json:"type,omitempty"`
	Parent        string                 `protobuf:"bytes,3,opt,name=parent,proto3" json:"parent,omitempty"`
	Data          map[string]string      `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ledger) Reset() {
	*x = Ledger{}
	mi := &file_ledger_v1_ledger_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ledger) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ledger) ProtoMessage() {}

func (x *Ledger) ProtoReflect() protoreflect.Message {
	mi := &file_ledger_v1_ledger_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ledger.ProtoReflect.Descriptor instead.
func (*Ledger) Descriptor() ([]byte, []int) {
	return file_ledger_v1_ledger_proto_rawDescGZIP(), []int{1}
}

func (x *Ledger) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Ledger) GetType() LedgerType {
	if x != nil {
		return x.Type
	}
	return LedgerType_ASSET
}

func (x *Ledger) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *Ledger) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

type Account struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Reference        string                 `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	Ledger           string                 `protobuf:"bytes,3,opt,name=ledger,proto3" json:"ledger,omitempty"`
	Balance          *money.Money           `protobuf:"bytes,4,opt,name=balance,proto3" json:"balance,omitempty"`
	Data             map[string]string      `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	UnclearedBalance *money.Money           `protobuf:"bytes,6,opt,name=uncleared_balance,json=unclearedBalance,proto3" json:"uncleared_balance,omitempty"`
	ReservedBalance  *money.Money           `protobuf:"bytes,7,opt,name=reserved_balance,json=reservedBalance,proto3" json:"reserved_balance,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Account) Reset() {
	*x = Account{}
	mi := &file_ledger_v1_ledger_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Account) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Account) ProtoMessage() {}

func (x *Account) ProtoReflect() protoreflect.Message {
	mi := &file_ledger_v1_ledger_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Account.ProtoReflect.Descriptor instead.
func (*Account) Descriptor() ([]byte, []int) {
	return file_ledger_v1_ledger_proto_rawDescGZIP(), []int{2}
}

func (x *Account) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Account) GetLedger() string {
	if x != nil {
		return x.Ledger
	}
	return ""
}

func (x *Account) GetBalance() *money.Money {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *Account) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Account) GetUnclearedBalance() *money.Money {
	if x != nil {
		return x.UnclearedBalance
	}
	return nil
}

func (x *Account) GetReservedBalance() *money.Money {
	if x != nil {
		return x.ReservedBalance
	}
	return nil
}

type TransactionEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Account       string                 `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Transaction   string                 `protobuf:"bytes,2,opt,name=transaction,proto3" json:"transaction,omitempty"`
	TransactedAt  string                 `protobuf:"bytes,3,opt,name=transacted_at,json=transactedAt,proto3" json:"transacted_at,omitempty"`
	Amount        *money.Money           `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Credit        bool                   `protobuf:"varint,5,opt,name=credit,proto3" json:"credit,omitempty"`
	AccBalance    *money.Money           `protobuf:"bytes,6,opt,name=acc_balance,json=accBalance,proto3" json:"acc_balance,omitempty"`
	ClearedAt     string                 `protobuf:"bytes,7,opt,name=cleared_at,json=clearedAt,proto3" json:"cleared_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionEntry) Reset() {
	*x = TransactionEntry{}
	mi := &file_ledger_v1_ledger_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionEntry) ProtoMessage() {}

func (x *TransactionEntry) ProtoReflect() protoreflect.Message {
	mi := &file_ledger_v1_ledger_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionEntry.ProtoReflect.Descriptor instead.
func (*TransactionEntry) Descriptor() ([]byte, []int) {
	return file_ledger_v1_ledger_proto_rawDescGZIP(), []int{3}
}

func (x *TransactionEntry) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *TransactionEntry) GetTransaction() string {
	if x != nil {
		return x.Transaction
	}
	return ""
}

func (x *TransactionEntry) GetTransactedAt() string {
	if x != nil {
		return x.TransactedAt
	}
	return ""
}

func (x *TransactionEntry) GetAmount() *money.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TransactionEntry) GetCredit() bool {
	if x != nil {
		return x.Credit
	}
	return false
}

func (x *TransactionEntry) GetAccBalance() *money.Money {
	if x != nil {
		return x.AccBalance
	}
	return nil
}

func (x *TransactionEntry) GetClearedAt() string {
	if x != nil {
		return x.ClearedAt
	}
	return ""
}

type Transaction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Reference     string                 `protobuf:"bytes,1,opt,name=reference,proto3" json:"reference,omitempty"`
	Currency      string                 `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency,omitempty"`
	TransactedAt  string                 `protobuf:"bytes,3,opt,name=transacted_at,json=transactedAt,proto3" json:"transacted_at,omitempty"`
	Data          map[string]string      `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Entries       []*TransactionEntry    `protobuf:"bytes,5,rep,name=entries,proto3" json:"entries,omitempty"`
	Cleared       bool                   `protobuf:"varint,6,opt,name=cleared,proto3" json:"cleared,omitempty"`
	Type          TransactionType        `protobuf:"varint,7,opt,name=type,proto3,enum=ledger.v1.TransactionType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Transaction) Reset() {
	*x = Transaction{}
	mi := &file_ledger_v1_ledger_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Transaction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Transaction) ProtoMessage() {}

func (x *Transaction) ProtoReflect() protoreflect.Message {
	mi := &file_ledger_v1_ledger_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Transaction.ProtoReflect.Descriptor instead.
func (*Transaction) Descriptor() ([]byte, []int) {
	return file_ledger_v1_ledger_proto_rawDescGZIP(), []int{4}
}

func (x *Transaction) GetReference() string {
	if x != nil {
		return x.Reference
	}
	return ""
}

func (x *Transaction) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Transaction) GetTransactedAt() string {
	if x != nil {
		return x.TransactedAt
	}
	return ""
}

func (x *Transaction) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *Transaction) GetEntries() []*TransactionEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

func (x *Transaction) GetCleared() bool {
	if x != nil {
		return x.Cleared
	}
	return false
}

func (x *Transaction) GetType() TransactionType {
	if x != nil {
		return x.Type
	}
	return TransactionType_NORMAL
}

var File_ledger_v1_ledger_proto protoreflect.FileDescriptor

const file_ledger_v1_ledger_proto_rawDesc = "" +
	"\n" +
	"\x16ledger/v1/ledger.proto\x12\tledger.v1\x1a\x16common/v1/common.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x17google/type/money.proto\x1a.protoc-gen-openapiv2/options/annotations.proto\"%\n" +
	"\rSearchRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\"\xd3\x01\n" +
	"\x06Ledger\x12\x1c\n" +
	"\treference\x18\x01 \x01(\tR\treference\x12)\n" +
	"\x04type\x18\x02 \x01(\x0e2\x15.ledger.v1.LedgerTypeR\x04type\x12\x16\n" +
	"\x06parent\x18\x03 \x01(\tR\x06parent\x12/\n" +
	"\x04data\x18\x04 \x03(\v2\x1b.ledger.v1.Ledger.DataEntryR\x04data\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd8\x02\n" +
	"\aAccount\x12\x1c\n" +
	"\treference\x18\x01 \x01(\tR\treference\x12\x16\n" +
	"\x06ledger\x18\x03 \x01(\tR\x06ledger\x12,\n" +
	"\abalance\x18\x04 \x01(\v2\x12.google.type.MoneyR\abalance\x120\n" +
	"\x04data\x18\x05 \x03(\v2\x1c.ledger.v1.Account.DataEntryR\x04data\x12?\n" +
	"\x11uncleared_balance\x18\x06 \x01(\v2\x12.google.type.MoneyR\x10unclearedBalance\x12=\n" +
	"\x10reserved_balance\x18\a \x01(\v2\x12.google.type.MoneyR\x0freservedBalance\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8b\x02\n" +
	"\x10TransactionEntry\x12\x18\n" +
	"\aaccount\x18\x01 \x01(\tR\aaccount\x12 \n" +
	"\vtransaction\x18\x02 \x01(\tR\vtransaction\x12#\n" +
	"\rtransacted_at\x18\x03 \x01(\tR\ftransactedAt\x12*\n" +
	"\x06amount\x18\x04 \x01(\v2\x12.google.type.MoneyR\x06amount\x12\x16\n" +
	"\x06credit\x18\x05 \x01(\bR\x06credit\x123\n" +
	"\vacc_balance\x18\x06 \x01(\v2\x12.google.type.MoneyR\n" +
	"accBalance\x12\x1d\n" +
	"\n" +
	"cleared_at\x18\a \x01(\tR\tclearedAt\"\xdc\x02\n" +
	"\vTransaction\x12\x1c\n" +
	"\treference\x18\x01 \x01(\tR\treference\x12\x1a\n" +
	"\bcurrency\x18\x02 \x01(\tR\bcurrency\x12#\n" +
	"\rtransacted_at\x18\x03 \x01(\tR\ftransactedAt\x124\n" +
	"\x04data\x18\x04 \x03(\v2 .ledger.v1.Transaction.DataEntryR\x04data\x125\n" +
	"\aentries\x18\x05 \x03(\v2\x1b.ledger.v1.TransactionEntryR\aentries\x12\x18\n" +
	"\acleared\x18\x06 \x01(\bR\acleared\x12.\n" +
	"\x04type\x18\a \x01(\x0e2\x1a.ledger.v1.TransactionTypeR\x04type\x1a7\n" +
	"\tDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*L\n" +
	"\n" +
	"LedgerType\x12\t\n" +
	"\x05ASSET\x10\x00\x12\r\n" +
	"\tLIABILITY\x10\x01\x12\n" +
	"\n" +
	"\x06INCOME\x10\x02\x12\v\n" +
	"\aEXPENSE\x10\x03\x12\v\n" +
	"\aCAPITAL\x10\x04*<\n" +
	"\x0fTransactionType\x12\n" +
	"\n" +
	"\x06NORMAL\x10\x00\x12\f\n" +
	"\bREVERSAL\x10\x01\x12\x0f\n" +
	"\vRESERVATION\x10\x022\x88\b\n" +
	"\rLedgerService\x12O\n" +
	"\rSearchLedgers\x12\x18.common.v1.SearchRequest\x1a\x11.ledger.v1.Ledger\"\x0f\x82\xd3\xe4\x93\x02\t\x12\a/ledger0\x01\x12H\n" +
	"\fCreateLedger\x12\x11.ledger.v1.Ledger\x1a\x11.ledger.v1.Ledger\"\x12\x82\xd3\xe4\x93\x02\f:\x01*\"\a/ledger\x12T\n" +
	"\fUpdateLedger\x12\x11.ledger.v1.Ledger\x1a\x11.ledger.v1.Ledger\"\x1e\x82\xd3\xe4\x93\x02\x18:\x01*2\x13/ledger/{reference}\x12R\n" +
	"\x0eSearchAccounts\x12\x18.common.v1.SearchRequest\x1a\x12.ledger.v1.Account\"\x10\x82\xd3\xe4\x93\x02\n" +
	"\x12\b/account0\x01\x12L\n" +
	"\rCreateAccount\x12\x12.ledger.v1.Account\x1a\x12.ledger.v1.Account\"\x13\x82\xd3\xe4\x93\x02\r:\x01*\"\b/account\x12X\n" +
	"\rUpdateAccount\x12\x12.ledger.v1.Account\x1a\x12.ledger.v1.Account\"\x1f\x82\xd3\xe4\x93\x02\x19:\x01*2\x14/account/{reference}\x12^\n" +
	"\x12SearchTransactions\x12\x18.common.v1.SearchRequest\x1a\x16.ledger.v1.Transaction\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\f/transaction0\x01\x12\\\n" +
	"\x11CreateTransaction\x12\x16.ledger.v1.Transaction\x1a\x16.ledger.v1.Transaction\"\x17\x82\xd3\xe4\x93\x02\x11:\x01*\"\f/transaction\x12q\n" +
	"\x12ReverseTransaction\x12\x16.ledger.v1.Transaction\x1a\x16.ledger.v1.Transaction\"+\x82\xd3\xe4\x93\x02%:\x01*\" /transaction/{reference}/reverse\x12h\n" +
	"\x11UpdateTransaction\x12\x16.ledger.v1.Transaction\x1a\x16.ledger.v1.Transaction\"#\x82\xd3\xe4\x93\x02\x1d:\x01*2\x18/transaction/{reference}\x12o\n" +
	"\x18SearchTransactionEntries\x12\x18.common.v1.SearchRequest\x1a\x1b.ledger.v1.TransactionEntry\"\x1a\x82\xd3\xe4\x93\x02\x14\x12\x12/transaction/entry0\x01B\xb1\x03\x92A\x81\x02\x12n\n" +
	"\x0eLedger Service\"W\n" +
	"\x10Ant Investor Ltd\x12-https://github.com/antinvestor/service-ledger\x1a\x14info@antinvestor.com2\x031.0*\x02\x01\x022\x10application/json:\x10application/jsonZY\n" +
	"W\n" +
	"\x06bearer\x12M\b\x02\x128Authentication token, prefixed by Bearer: Bearer <token>\x1a\rAuthorization \x02b\f\n" +
	"\n" +
	"\n" +
	"\x06bearer\x12\x00\n" +
	"\x1ecom.antinvestor.apis.ledger.v1B\vLedgerProtoP\x01Z8github.com/antinvestor/apis/go/ledger/ledger/v1;ledgerv1\xa2\x02\x03LXX\xaa\x02\tLedger.V1\xca\x02\tLedger\\V1\xe2\x02\x15Ledger\\V1\\GPBMetadata\xea\x02\n" +
	"Ledger::V1b\x06proto3"

var (
	file_ledger_v1_ledger_proto_rawDescOnce sync.Once
	file_ledger_v1_ledger_proto_rawDescData []byte
)

func file_ledger_v1_ledger_proto_rawDescGZIP() []byte {
	file_ledger_v1_ledger_proto_rawDescOnce.Do(func() {
		file_ledger_v1_ledger_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ledger_v1_ledger_proto_rawDesc), len(file_ledger_v1_ledger_proto_rawDesc)))
	})
	return file_ledger_v1_ledger_proto_rawDescData
}

var file_ledger_v1_ledger_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ledger_v1_ledger_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_ledger_v1_ledger_proto_goTypes = []any{
	(LedgerType)(0),          // 0: ledger.v1.LedgerType
	(TransactionType)(0),     // 1: ledger.v1.TransactionType
	(*SearchRequest)(nil),    // 2: ledger.v1.SearchRequest
	(*Ledger)(nil),           // 3: ledger.v1.Ledger
	(*Account)(nil),          // 4: ledger.v1.Account
	(*TransactionEntry)(nil), // 5: ledger.v1.TransactionEntry
	(*Transaction)(nil),      // 6: ledger.v1.Transaction
	nil,                      // 7: ledger.v1.Ledger.DataEntry
	nil,                      // 8: ledger.v1.Account.DataEntry
	nil,                      // 9: ledger.v1.Transaction.DataEntry
	(*money.Money)(nil),      // 10: google.type.Money
	(*v1.SearchRequest)(nil), // 11: common.v1.SearchRequest
}
var file_ledger_v1_ledger_proto_depIdxs = []int32{
	0,  // 0: ledger.v1.Ledger.type:type_name -> ledger.v1.LedgerType
	7,  // 1: ledger.v1.Ledger.data:type_name -> ledger.v1.Ledger.DataEntry
	10, // 2: ledger.v1.Account.balance:type_name -> google.type.Money
	8,  // 3: ledger.v1.Account.data:type_name -> ledger.v1.Account.DataEntry
	10, // 4: ledger.v1.Account.uncleared_balance:type_name -> google.type.Money
	10, // 5: ledger.v1.Account.reserved_balance:type_name -> google.type.Money
	10, // 6: ledger.v1.TransactionEntry.amount:type_name -> google.type.Money
	10, // 7: ledger.v1.TransactionEntry.acc_balance:type_name -> google.type.Money
	9,  // 8: ledger.v1.Transaction.data:type_name -> ledger.v1.Transaction.DataEntry
	5,  // 9: ledger.v1.Transaction.entries:type_name -> ledger.v1.TransactionEntry
	1,  // 10: ledger.v1.Transaction.type:type_name -> ledger.v1.TransactionType
	11, // 11: ledger.v1.LedgerService.SearchLedgers:input_type -> common.v1.SearchRequest
	3,  // 12: ledger.v1.LedgerService.CreateLedger:input_type -> ledger.v1.Ledger
	3,  // 13: ledger.v1.LedgerService.UpdateLedger:input_type -> ledger.v1.Ledger
	11, // 14: ledger.v1.LedgerService.SearchAccounts:input_type -> common.v1.SearchRequest
	4,  // 15: ledger.v1.LedgerService.CreateAccount:input_type -> ledger.v1.Account
	4,  // 16: ledger.v1.LedgerService.UpdateAccount:input_type -> ledger.v1.Account
	11, // 17: ledger.v1.LedgerService.SearchTransactions:input_type -> common.v1.SearchRequest
	6,  // 18: ledger.v1.LedgerService.CreateTransaction:input_type -> ledger.v1.Transaction
	6,  // 19: ledger.v1.LedgerService.ReverseTransaction:input_type -> ledger.v1.Transaction
	6,  // 20: ledger.v1.LedgerService.UpdateTransaction:input_type -> ledger.v1.Transaction
	11, // 21: ledger.v1.LedgerService.SearchTransactionEntries:input_type -> common.v1.SearchRequest
	3,  // 22: ledger.v1.LedgerService.SearchLedgers:output_type -> ledger.v1.Ledger
	3,  // 23: ledger.v1.LedgerService.CreateLedger:output_type -> ledger.v1.Ledger
	3,  // 24: ledger.v1.LedgerService.UpdateLedger:output_type -> ledger.v1.Ledger
	4,  // 25: ledger.v1.LedgerService.SearchAccounts:output_type -> ledger.v1.Account
	4,  // 26: ledger.v1.LedgerService.CreateAccount:output_type -> ledger.v1.Account
	4,  // 27: ledger.v1.LedgerService.UpdateAccount:output_type -> ledger.v1.Account
	6,  // 28: ledger.v1.LedgerService.SearchTransactions:output_type -> ledger.v1.Transaction
	6,  // 29: ledger.v1.LedgerService.CreateTransaction:output_type -> ledger.v1.Transaction
	6,  // 30: ledger.v1.LedgerService.ReverseTransaction:output_type -> ledger.v1.Transaction
	6,  // 31: ledger.v1.LedgerService.UpdateTransaction:output_type -> ledger.v1.Transaction
	5,  // 32: ledger.v1.LedgerService.SearchTransactionEntries:output_type -> ledger.v1.TransactionEntry
	22, // [22:33] is the sub-list for method output_type
	11, // [11:22] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_ledger_v1_ledger_proto_init() }
func file_ledger_v1_ledger_proto_init() {
	if File_ledger_v1_ledger_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ledger_v1_ledger_proto_rawDesc), len(file_ledger_v1_ledger_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ledger_v1_ledger_proto_goTypes,
		DependencyIndexes: file_ledger_v1_ledger_proto_depIdxs,
		EnumInfos:         file_ledger_v1_ledger_proto_enumTypes,
		MessageInfos:      file_ledger_v1_ledger_proto_msgTypes,
	}.Build()
	File_ledger_v1_ledger_proto = out.File
	file_ledger_v1_ledger_proto_goTypes = nil
	file_ledger_v1_ledger_proto_depIdxs = nil
}
