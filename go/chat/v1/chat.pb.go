// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        (unknown)
// source: chat/v1/chat.proto

package chatv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/antinvestor/apis/go/common/v1"
	_ "github.com/google/gnostic/openapiv3"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Allowed message types. Extendable via new enum values; clients must ignore unknown values.
type RoomEventType int32

const (
	RoomEventType_MESSAGE_TYPE_UNSPECIFIED RoomEventType = 0
	RoomEventType_MESSAGE_TYPE_EVENT       RoomEventType = 1
	RoomEventType_MESSAGE_TYPE_TEXT        RoomEventType = 2
	RoomEventType_MESSAGE_TYPE_ATTACHMENT  RoomEventType = 3
	RoomEventType_MESSAGE_TYPE_REACTION    RoomEventType = 7
	RoomEventType_MESSAGE_TYPE_ENCRYPTED   RoomEventType = 6 // opaque ciphertext
	RoomEventType_MESSAGE_TYPE_SYSTEM      RoomEventType = 10
	RoomEventType_MESSAGE_TYPE_CALL_OFFER  RoomEventType = 21
	RoomEventType_MESSAGE_TYPE_CALL_ANSWER RoomEventType = 22
	RoomEventType_MESSAGE_TYPE_CALL_ICE    RoomEventType = 23
	RoomEventType_MESSAGE_TYPE_CALL_END    RoomEventType = 24
	RoomEventType_MESSAGE_TYPE_CUSTOM      RoomEventType = 100 // vendor/app specific; metadata must indicate schema
)

// Enum value maps for RoomEventType.
var (
	RoomEventType_name = map[int32]string{
		0:   "MESSAGE_TYPE_UNSPECIFIED",
		1:   "MESSAGE_TYPE_EVENT",
		2:   "MESSAGE_TYPE_TEXT",
		3:   "MESSAGE_TYPE_ATTACHMENT",
		7:   "MESSAGE_TYPE_REACTION",
		6:   "MESSAGE_TYPE_ENCRYPTED",
		10:  "MESSAGE_TYPE_SYSTEM",
		21:  "MESSAGE_TYPE_CALL_OFFER",
		22:  "MESSAGE_TYPE_CALL_ANSWER",
		23:  "MESSAGE_TYPE_CALL_ICE",
		24:  "MESSAGE_TYPE_CALL_END",
		100: "MESSAGE_TYPE_CUSTOM",
	}
	RoomEventType_value = map[string]int32{
		"MESSAGE_TYPE_UNSPECIFIED": 0,
		"MESSAGE_TYPE_EVENT":       1,
		"MESSAGE_TYPE_TEXT":        2,
		"MESSAGE_TYPE_ATTACHMENT":  3,
		"MESSAGE_TYPE_REACTION":    7,
		"MESSAGE_TYPE_ENCRYPTED":   6,
		"MESSAGE_TYPE_SYSTEM":      10,
		"MESSAGE_TYPE_CALL_OFFER":  21,
		"MESSAGE_TYPE_CALL_ANSWER": 22,
		"MESSAGE_TYPE_CALL_ICE":    23,
		"MESSAGE_TYPE_CALL_END":    24,
		"MESSAGE_TYPE_CUSTOM":      100,
	}
)

func (x RoomEventType) Enum() *RoomEventType {
	p := new(RoomEventType)
	*p = x
	return p
}

func (x RoomEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RoomEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_v1_chat_proto_enumTypes[0].Descriptor()
}

func (RoomEventType) Type() protoreflect.EnumType {
	return &file_chat_v1_chat_proto_enumTypes[0]
}

func (x RoomEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RoomEventType.Descriptor instead.
func (RoomEventType) EnumDescriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{0}
}

type PresenceStatus int32

const (
	PresenceStatus_PRESENCE_UNKNOWN PresenceStatus = 0
	PresenceStatus_PRESENCE_OFFLINE PresenceStatus = 1
	PresenceStatus_PRESENCE_ONLINE  PresenceStatus = 2
	PresenceStatus_PRESENCE_AWAY    PresenceStatus = 3
	PresenceStatus_PRESENCE_BUSY    PresenceStatus = 4
)

// Enum value maps for PresenceStatus.
var (
	PresenceStatus_name = map[int32]string{
		0: "PRESENCE_UNKNOWN",
		1: "PRESENCE_OFFLINE",
		2: "PRESENCE_ONLINE",
		3: "PRESENCE_AWAY",
		4: "PRESENCE_BUSY",
	}
	PresenceStatus_value = map[string]int32{
		"PRESENCE_UNKNOWN": 0,
		"PRESENCE_OFFLINE": 1,
		"PRESENCE_ONLINE":  2,
		"PRESENCE_AWAY":    3,
		"PRESENCE_BUSY":    4,
	}
)

func (x PresenceStatus) Enum() *PresenceStatus {
	p := new(PresenceStatus)
	*p = x
	return p
}

func (x PresenceStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PresenceStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_chat_v1_chat_proto_enumTypes[1].Descriptor()
}

func (PresenceStatus) Type() protoreflect.EnumType {
	return &file_chat_v1_chat_proto_enumTypes[1]
}

func (x PresenceStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PresenceStatus.Descriptor instead.
func (PresenceStatus) EnumDescriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{1}
}

// Server -> Client event payload. All events in a room are delivered over Connect stream.
// event_id: globally unique id (opaque string) assigned by server, strictly monotonically increasing per room.
// sequence: strictly increasing 64-bit integer per-room sequence number (useful for resume & ordering).
type ServerEvent struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Timestamp *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Types that are valid to be assigned to Payload:
	//
	//	*ServerEvent_Message
	//	*ServerEvent_PresenceEvent
	//	*ServerEvent_ReceiptEvent
	//	*ServerEvent_TypingEvent
	Payload       isServerEvent_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerEvent) Reset() {
	*x = ServerEvent{}
	mi := &file_chat_v1_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerEvent) ProtoMessage() {}

func (x *ServerEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerEvent.ProtoReflect.Descriptor instead.
func (*ServerEvent) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{0}
}

func (x *ServerEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServerEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *ServerEvent) GetPayload() isServerEvent_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ServerEvent) GetMessage() *RoomEvent {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_Message); ok {
			return x.Message
		}
	}
	return nil
}

func (x *ServerEvent) GetPresenceEvent() *PresenceEvent {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_PresenceEvent); ok {
			return x.PresenceEvent
		}
	}
	return nil
}

func (x *ServerEvent) GetReceiptEvent() *ReceiptEvent {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_ReceiptEvent); ok {
			return x.ReceiptEvent
		}
	}
	return nil
}

func (x *ServerEvent) GetTypingEvent() *TypingEvent {
	if x != nil {
		if x, ok := x.Payload.(*ServerEvent_TypingEvent); ok {
			return x.TypingEvent
		}
	}
	return nil
}

type isServerEvent_Payload interface {
	isServerEvent_Payload()
}

type ServerEvent_Message struct {
	Message *RoomEvent `protobuf:"bytes,10,opt,name=message,proto3,oneof"`
}

type ServerEvent_PresenceEvent struct {
	PresenceEvent *PresenceEvent `protobuf:"bytes,12,opt,name=presence_event,json=presenceEvent,proto3,oneof"` // user presence change affecting the room
}

type ServerEvent_ReceiptEvent struct {
	ReceiptEvent *ReceiptEvent `protobuf:"bytes,13,opt,name=receipt_event,json=receiptEvent,proto3,oneof"`
}

type ServerEvent_TypingEvent struct {
	TypingEvent *TypingEvent `protobuf:"bytes,14,opt,name=typing_event,json=typingEvent,proto3,oneof"`
}

func (*ServerEvent_Message) isServerEvent_Payload() {}

func (*ServerEvent_PresenceEvent) isServerEvent_Payload() {}

func (*ServerEvent_ReceiptEvent) isServerEvent_Payload() {}

func (*ServerEvent_TypingEvent) isServerEvent_Payload() {}

// Unified message (user / bot / system / signalling)
type RoomEvent struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                                 // client-supplied or server-generated UUID
	RoomId           string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`           // room_id
	SenderId         string                 `protobuf:"bytes,3,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`     // profile_id or service/bot id
	Type             RoomEventType          `protobuf:"varint,4,opt,name=type,proto3,enum=chat.v1.RoomEventType" json:"type,omitempty"` // text, attachment, call_offer, etc.
	Payload          *structpb.Struct       `protobuf:"bytes,6,opt,name=payload,proto3" json:"payload,omitempty"`                       // e.g. {"format":"markdown","mime":"image/png","attachment_id":"..."}
	SentAt           *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=sent_at,json=sentAt,proto3" json:"sent_at,omitempty"`
	Edited           bool                   `protobuf:"varint,8,opt,name=edited,proto3" json:"edited,omitempty"`
	Redacted         bool                   `protobuf:"varint,9,opt,name=redacted,proto3" json:"redacted,omitempty"`
	ReplacesEventId  string                 `protobuf:"bytes,10,opt,name=replaces_event_id,json=replacesEventId,proto3" json:"replaces_event_id,omitempty"`      // if this message replaces another (edit)
	RelatesToEventId string                 `protobuf:"bytes,11,opt,name=relates_to_event_id,json=relatesToEventId,proto3" json:"relates_to_event_id,omitempty"` // for reactions / replies
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *RoomEvent) Reset() {
	*x = RoomEvent{}
	mi := &file_chat_v1_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomEvent) ProtoMessage() {}

func (x *RoomEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomEvent.ProtoReflect.Descriptor instead.
func (*RoomEvent) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{1}
}

func (x *RoomEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RoomEvent) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomEvent) GetSenderId() string {
	if x != nil {
		return x.SenderId
	}
	return ""
}

func (x *RoomEvent) GetType() RoomEventType {
	if x != nil {
		return x.Type
	}
	return RoomEventType_MESSAGE_TYPE_UNSPECIFIED
}

func (x *RoomEvent) GetPayload() *structpb.Struct {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RoomEvent) GetSentAt() *timestamppb.Timestamp {
	if x != nil {
		return x.SentAt
	}
	return nil
}

func (x *RoomEvent) GetEdited() bool {
	if x != nil {
		return x.Edited
	}
	return false
}

func (x *RoomEvent) GetRedacted() bool {
	if x != nil {
		return x.Redacted
	}
	return false
}

func (x *RoomEvent) GetReplacesEventId() string {
	if x != nil {
		return x.ReplacesEventId
	}
	return ""
}

func (x *RoomEvent) GetRelatesToEventId() string {
	if x != nil {
		return x.RelatesToEventId
	}
	return ""
}

// Presence event affecting a user (and visible to rooms the user is a member of)
type PresenceEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProfileId     string                 `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Status        PresenceStatus         `protobuf:"varint,2,opt,name=status,proto3,enum=chat.v1.PresenceStatus" json:"status,omitempty"`
	StatusMsg     string                 `protobuf:"bytes,3,opt,name=status_msg,json=statusMsg,proto3" json:"status_msg,omitempty"`
	LastActive    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_active,json=lastActive,proto3" json:"last_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PresenceEvent) Reset() {
	*x = PresenceEvent{}
	mi := &file_chat_v1_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PresenceEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PresenceEvent) ProtoMessage() {}

func (x *PresenceEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PresenceEvent.ProtoReflect.Descriptor instead.
func (*PresenceEvent) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{2}
}

func (x *PresenceEvent) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *PresenceEvent) GetStatus() PresenceStatus {
	if x != nil {
		return x.Status
	}
	return PresenceStatus_PRESENCE_UNKNOWN
}

func (x *PresenceEvent) GetStatusMsg() string {
	if x != nil {
		return x.StatusMsg
	}
	return ""
}

func (x *PresenceEvent) GetLastActive() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActive
	}
	return nil
}

// Read receipts
type ReceiptEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProfileId     string                 `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	MessageId     string                 `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	ReadAt        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReceiptEvent) Reset() {
	*x = ReceiptEvent{}
	mi := &file_chat_v1_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReceiptEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReceiptEvent) ProtoMessage() {}

func (x *ReceiptEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReceiptEvent.ProtoReflect.Descriptor instead.
func (*ReceiptEvent) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{3}
}

func (x *ReceiptEvent) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *ReceiptEvent) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ReceiptEvent) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ReceiptEvent) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

// Typing indicator
type TypingEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProfileId     string                 `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Typing        bool                   `protobuf:"varint,3,opt,name=typing,proto3" json:"typing,omitempty"`
	Since         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=since,proto3" json:"since,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypingEvent) Reset() {
	*x = TypingEvent{}
	mi := &file_chat_v1_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypingEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingEvent) ProtoMessage() {}

func (x *TypingEvent) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingEvent.ProtoReflect.Descriptor instead.
func (*TypingEvent) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{4}
}

func (x *TypingEvent) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *TypingEvent) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *TypingEvent) GetTyping() bool {
	if x != nil {
		return x.Typing
	}
	return false
}

func (x *TypingEvent) GetSince() *timestamppb.Timestamp {
	if x != nil {
		return x.Since
	}
	return nil
}

// Client message over Connect stream. After initial connect frame, client sends acks/commands.
type ConnectRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Servers should validate auth token before accepting further payload.
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	DeviceId  string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	AuthToken string `protobuf:"bytes,4,opt,name=auth_token,json=authToken,proto3" json:"auth_token,omitempty"` // JWT or short-lived token; also accepted via metadata at the transport layer
	// Optional resume token: server-supplied resume_token from previous session.
	// Server will validate and accept resume only if resume window allows it.
	ResumeToken string `protobuf:"bytes,5,opt,name=resume_token,json=resumeToken,proto3" json:"resume_token,omitempty"`
	// The client can send various payloads inside the stream after initial auth:
	//
	// Types that are valid to be assigned to Payload:
	//
	//	*ConnectRequest_Ack
	//	*ConnectRequest_Command
	Payload       isConnectRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectRequest) Reset() {
	*x = ConnectRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectRequest) ProtoMessage() {}

func (x *ConnectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectRequest.ProtoReflect.Descriptor instead.
func (*ConnectRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{5}
}

func (x *ConnectRequest) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ConnectRequest) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ConnectRequest) GetAuthToken() string {
	if x != nil {
		return x.AuthToken
	}
	return ""
}

func (x *ConnectRequest) GetResumeToken() string {
	if x != nil {
		return x.ResumeToken
	}
	return ""
}

func (x *ConnectRequest) GetPayload() isConnectRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *ConnectRequest) GetAck() *StreamAck {
	if x != nil {
		if x, ok := x.Payload.(*ConnectRequest_Ack); ok {
			return x.Ack
		}
	}
	return nil
}

func (x *ConnectRequest) GetCommand() *ClientCommand {
	if x != nil {
		if x, ok := x.Payload.(*ConnectRequest_Command); ok {
			return x.Command
		}
	}
	return nil
}

type isConnectRequest_Payload interface {
	isConnectRequest_Payload()
}

type ConnectRequest_Ack struct {
	Ack *StreamAck `protobuf:"bytes,10,opt,name=ack,proto3,oneof"`
}

type ConnectRequest_Command struct {
	Command *ClientCommand `protobuf:"bytes,12,opt,name=command,proto3,oneof"`
}

func (*ConnectRequest_Ack) isConnectRequest_Payload() {}

func (*ConnectRequest_Command) isConnectRequest_Payload() {}

// Acknowledgement for event(s) received; server uses it to free ephemeral delivery buffers.
// ack_event_id: last event_id client processed (inclusive).
// If error is set, indicates the event failed to send/process correctly.
type StreamAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`
	AckAt         *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=ack_at,json=ackAt,proto3" json:"ack_at,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Error         *v1.ErrorDetail        `protobuf:"bytes,7,opt,name=error,proto3,oneof" json:"error,omitempty"` // if set, indicates failure reason for this event
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAck) Reset() {
	*x = StreamAck{}
	mi := &file_chat_v1_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAck) ProtoMessage() {}

func (x *StreamAck) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAck.ProtoReflect.Descriptor instead.
func (*StreamAck) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{6}
}

func (x *StreamAck) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *StreamAck) GetAckAt() *timestamppb.Timestamp {
	if x != nil {
		return x.AckAt
	}
	return nil
}

func (x *StreamAck) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StreamAck) GetError() *v1.ErrorDetail {
	if x != nil {
		return x.Error
	}
	return nil
}

// Generic client commands (typing, read markers that aren't receipts, and room events)
type ClientCommand struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Cmd:
	//
	//	*ClientCommand_Typing
	//	*ClientCommand_ReadMarker
	//	*ClientCommand_RoomEvent
	Cmd           isClientCommand_Cmd `protobuf_oneof:"cmd"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientCommand) Reset() {
	*x = ClientCommand{}
	mi := &file_chat_v1_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCommand) ProtoMessage() {}

func (x *ClientCommand) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCommand.ProtoReflect.Descriptor instead.
func (*ClientCommand) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{7}
}

func (x *ClientCommand) GetCmd() isClientCommand_Cmd {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *ClientCommand) GetTyping() *TypingUpdate {
	if x != nil {
		if x, ok := x.Cmd.(*ClientCommand_Typing); ok {
			return x.Typing
		}
	}
	return nil
}

func (x *ClientCommand) GetReadMarker() *ReadMarker {
	if x != nil {
		if x, ok := x.Cmd.(*ClientCommand_ReadMarker); ok {
			return x.ReadMarker
		}
	}
	return nil
}

func (x *ClientCommand) GetRoomEvent() *RoomEvent {
	if x != nil {
		if x, ok := x.Cmd.(*ClientCommand_RoomEvent); ok {
			return x.RoomEvent
		}
	}
	return nil
}

type isClientCommand_Cmd interface {
	isClientCommand_Cmd()
}

type ClientCommand_Typing struct {
	Typing *TypingUpdate `protobuf:"bytes,1,opt,name=typing,proto3,oneof"`
}

type ClientCommand_ReadMarker struct {
	ReadMarker *ReadMarker `protobuf:"bytes,2,opt,name=read_marker,json=readMarker,proto3,oneof"` // marker for "read up to X"
}

type ClientCommand_RoomEvent struct {
	RoomEvent *RoomEvent `protobuf:"bytes,3,opt,name=room_event,json=roomEvent,proto3,oneof"` // send a room event (message) via the stream
}

func (*ClientCommand_Typing) isClientCommand_Cmd() {}

func (*ClientCommand_ReadMarker) isClientCommand_Cmd() {}

func (*ClientCommand_RoomEvent) isClientCommand_Cmd() {}

type TypingUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Typing        bool                   `protobuf:"varint,2,opt,name=typing,proto3" json:"typing,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TypingUpdate) Reset() {
	*x = TypingUpdate{}
	mi := &file_chat_v1_chat_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TypingUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TypingUpdate) ProtoMessage() {}

func (x *TypingUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TypingUpdate.ProtoReflect.Descriptor instead.
func (*TypingUpdate) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{8}
}

func (x *TypingUpdate) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *TypingUpdate) GetTyping() bool {
	if x != nil {
		return x.Typing
	}
	return false
}

type ReadMarker struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UpToEventId   string                 `protobuf:"bytes,2,opt,name=up_to_event_id,json=upToEventId,proto3" json:"up_to_event_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadMarker) Reset() {
	*x = ReadMarker{}
	mi := &file_chat_v1_chat_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadMarker) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMarker) ProtoMessage() {}

func (x *ReadMarker) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMarker.ProtoReflect.Descriptor instead.
func (*ReadMarker) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{9}
}

func (x *ReadMarker) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ReadMarker) GetUpToEventId() string {
	if x != nil {
		return x.UpToEventId
	}
	return ""
}

type SendEventRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       []*RoomEvent           `protobuf:"bytes,4,rep,name=message,proto3" json:"message,omitempty"` // message payload (server will assign final message_id if empty)
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEventRequest) Reset() {
	*x = SendEventRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventRequest) ProtoMessage() {}

func (x *SendEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventRequest.ProtoReflect.Descriptor instead.
func (*SendEventRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{10}
}

func (x *SendEventRequest) GetMessage() []*RoomEvent {
	if x != nil {
		return x.Message
	}
	return nil
}

type SendEventResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ack           []*StreamAck           `protobuf:"bytes,1,rep,name=ack,proto3" json:"ack,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SendEventResponse) Reset() {
	*x = SendEventResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SendEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendEventResponse) ProtoMessage() {}

func (x *SendEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendEventResponse.ProtoReflect.Descriptor instead.
func (*SendEventResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{11}
}

func (x *SendEventResponse) GetAck() []*StreamAck {
	if x != nil {
		return x.Ack
	}
	return nil
}

// History request: paging via opaque cursor. 'limit' is capped by server (e.g. 100).
type GetHistoryRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	RoomId string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Cursor string                 `protobuf:"bytes,3,opt,name=cursor,proto3" json:"cursor,omitempty"` // opaque token from prior GetHistoryResponse
	Limit  int32                  `protobuf:"varint,4,opt,name=limit,proto3" json:"limit,omitempty"`
	// direction: FORWARD means older -> newer; BACKWARD newer -> older (default BACKWARD).
	Forward       bool `protobuf:"varint,5,opt,name=forward,proto3" json:"forward,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHistoryRequest) Reset() {
	*x = GetHistoryRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryRequest) ProtoMessage() {}

func (x *GetHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{12}
}

func (x *GetHistoryRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GetHistoryRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *GetHistoryRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetHistoryRequest) GetForward() bool {
	if x != nil {
		return x.Forward
	}
	return false
}

type GetHistoryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Events        []*ServerEvent         `protobuf:"bytes,1,rep,name=events,proto3" json:"events,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"` // opaque; empty when no more pages
	PrevCursor    string                 `protobuf:"bytes,3,opt,name=prev_cursor,json=prevCursor,proto3" json:"prev_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetHistoryResponse) Reset() {
	*x = GetHistoryResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHistoryResponse) ProtoMessage() {}

func (x *GetHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHistoryResponse.ProtoReflect.Descriptor instead.
func (*GetHistoryResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{13}
}

func (x *GetHistoryResponse) GetEvents() []*ServerEvent {
	if x != nil {
		return x.Events
	}
	return nil
}

func (x *GetHistoryResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *GetHistoryResponse) GetPrevCursor() string {
	if x != nil {
		return x.PrevCursor
	}
	return ""
}

type Room struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,5,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	CreatorId     string                 `protobuf:"bytes,9,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Room) Reset() {
	*x = Room{}
	mi := &file_chat_v1_chat_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Room) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Room) ProtoMessage() {}

func (x *Room) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Room.ProtoReflect.Descriptor instead.
func (*Room) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{14}
}

func (x *Room) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Room) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Room) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Room) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *Room) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Room) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Room) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Room) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

type CreateRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"` // optional client-provided idempotency key
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	IsPrivate     bool                   `protobuf:"varint,6,opt,name=is_private,json=isPrivate,proto3" json:"is_private,omitempty"`
	Members       []string               `protobuf:"bytes,7,rep,name=members,proto3" json:"members,omitempty"` // optional
	Metadata      *structpb.Struct       `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomRequest) Reset() {
	*x = CreateRoomRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomRequest) ProtoMessage() {}

func (x *CreateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomRequest.ProtoReflect.Descriptor instead.
func (*CreateRoomRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{15}
}

func (x *CreateRoomRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CreateRoomRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRoomRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRoomRequest) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *CreateRoomRequest) GetMembers() []string {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *CreateRoomRequest) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Room          *Room                  `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	Error         *v1.ErrorDetail        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRoomResponse) Reset() {
	*x = CreateRoomResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRoomResponse) ProtoMessage() {}

func (x *CreateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRoomResponse.ProtoReflect.Descriptor instead.
func (*CreateRoomResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{16}
}

func (x *CreateRoomResponse) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *CreateRoomResponse) GetError() *v1.ErrorDetail {
	if x != nil {
		return x.Error
	}
	return nil
}

type SearchRoomsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	Count         int32                  `protobuf:"varint,3,opt,name=count,proto3" json:"count,omitempty"`
	StartDate     string                 `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       string                 `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Properties    []string               `protobuf:"bytes,6,rep,name=properties,proto3" json:"properties,omitempty"`
	Extras        *structpb.Struct       `protobuf:"bytes,7,opt,name=extras,proto3" json:"extras,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRoomsRequest) Reset() {
	*x = SearchRoomsRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsRequest) ProtoMessage() {}

func (x *SearchRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsRequest.ProtoReflect.Descriptor instead.
func (*SearchRoomsRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{17}
}

func (x *SearchRoomsRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchRoomsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *SearchRoomsRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *SearchRoomsRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *SearchRoomsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *SearchRoomsRequest) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SearchRoomsRequest) GetExtras() *structpb.Struct {
	if x != nil {
		return x.Extras
	}
	return nil
}

type SearchRoomsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*Room                `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRoomsResponse) Reset() {
	*x = SearchRoomsResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRoomsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomsResponse) ProtoMessage() {}

func (x *SearchRoomsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomsResponse.ProtoReflect.Descriptor instead.
func (*SearchRoomsResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{18}
}

func (x *SearchRoomsResponse) GetData() []*Room {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Topic         string                 `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	Metadata      *structpb.Struct       `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRoomRequest) Reset() {
	*x = UpdateRoomRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoomRequest) ProtoMessage() {}

func (x *UpdateRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoomRequest.ProtoReflect.Descriptor instead.
func (*UpdateRoomRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateRoomRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRoomRequest) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *UpdateRoomRequest) GetMetadata() *structpb.Struct {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Room          *Room                  `protobuf:"bytes,1,opt,name=room,proto3" json:"room,omitempty"`
	Error         *v1.ErrorDetail        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateRoomResponse) Reset() {
	*x = UpdateRoomResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRoomResponse) ProtoMessage() {}

func (x *UpdateRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRoomResponse.ProtoReflect.Descriptor instead.
func (*UpdateRoomResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateRoomResponse) GetRoom() *Room {
	if x != nil {
		return x.Room
	}
	return nil
}

func (x *UpdateRoomResponse) GetError() *v1.ErrorDetail {
	if x != nil {
		return x.Error
	}
	return nil
}

type DeleteRoomRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoomRequest) Reset() {
	*x = DeleteRoomRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoomRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoomRequest) ProtoMessage() {}

func (x *DeleteRoomRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoomRequest.ProtoReflect.Descriptor instead.
func (*DeleteRoomRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteRoomRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type DeleteRoomResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Error         *v1.ErrorDetail        `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteRoomResponse) Reset() {
	*x = DeleteRoomResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteRoomResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteRoomResponse) ProtoMessage() {}

func (x *DeleteRoomResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteRoomResponse.ProtoReflect.Descriptor instead.
func (*DeleteRoomResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{22}
}

func (x *DeleteRoomResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *DeleteRoomResponse) GetError() *v1.ErrorDetail {
	if x != nil {
		return x.Error
	}
	return nil
}

type RoomSubscription struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ProfileId     string                 `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Roles         []string               `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"` // e.g. ["owner","moderator","member","guest"]
	JoinedAt      *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=joined_at,json=joinedAt,proto3" json:"joined_at,omitempty"`
	LastActive    *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=last_active,json=lastActive,proto3" json:"last_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomSubscription) Reset() {
	*x = RoomSubscription{}
	mi := &file_chat_v1_chat_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomSubscription) ProtoMessage() {}

func (x *RoomSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomSubscription.ProtoReflect.Descriptor instead.
func (*RoomSubscription) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{23}
}

func (x *RoomSubscription) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RoomSubscription) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *RoomSubscription) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *RoomSubscription) GetJoinedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.JoinedAt
	}
	return nil
}

func (x *RoomSubscription) GetLastActive() *timestamppb.Timestamp {
	if x != nil {
		return x.LastActive
	}
	return nil
}

type AddRoomSubscriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Members       []*RoomSubscription    `protobuf:"bytes,3,rep,name=members,proto3" json:"members,omitempty"` // include roles if desired
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRoomSubscriptionsRequest) Reset() {
	*x = AddRoomSubscriptionsRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRoomSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoomSubscriptionsRequest) ProtoMessage() {}

func (x *AddRoomSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoomSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*AddRoomSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{24}
}

func (x *AddRoomSubscriptionsRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *AddRoomSubscriptionsRequest) GetMembers() []*RoomSubscription {
	if x != nil {
		return x.Members
	}
	return nil
}

type AddRoomSubscriptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Error         *v1.ErrorDetail        `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AddRoomSubscriptionsResponse) Reset() {
	*x = AddRoomSubscriptionsResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AddRoomSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddRoomSubscriptionsResponse) ProtoMessage() {}

func (x *AddRoomSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddRoomSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*AddRoomSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{25}
}

func (x *AddRoomSubscriptionsResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *AddRoomSubscriptionsResponse) GetError() *v1.ErrorDetail {
	if x != nil {
		return x.Error
	}
	return nil
}

type RemoveRoomSubscriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ProfileIds    []string               `protobuf:"bytes,3,rep,name=profile_ids,json=profileIds,proto3" json:"profile_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRoomSubscriptionsRequest) Reset() {
	*x = RemoveRoomSubscriptionsRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRoomSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoomSubscriptionsRequest) ProtoMessage() {}

func (x *RemoveRoomSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoomSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*RemoveRoomSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{26}
}

func (x *RemoveRoomSubscriptionsRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RemoveRoomSubscriptionsRequest) GetProfileIds() []string {
	if x != nil {
		return x.ProfileIds
	}
	return nil
}

type RemoveRoomSubscriptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Error         *v1.ErrorDetail        `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveRoomSubscriptionsResponse) Reset() {
	*x = RemoveRoomSubscriptionsResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveRoomSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveRoomSubscriptionsResponse) ProtoMessage() {}

func (x *RemoveRoomSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveRoomSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*RemoveRoomSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{27}
}

func (x *RemoveRoomSubscriptionsResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *RemoveRoomSubscriptionsResponse) GetError() *v1.ErrorDetail {
	if x != nil {
		return x.Error
	}
	return nil
}

type UpdateSubscriptionRoleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ProfileId     string                 `protobuf:"bytes,3,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Roles         []string               `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSubscriptionRoleRequest) Reset() {
	*x = UpdateSubscriptionRoleRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubscriptionRoleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionRoleRequest) ProtoMessage() {}

func (x *UpdateSubscriptionRoleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionRoleRequest.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionRoleRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{28}
}

func (x *UpdateSubscriptionRoleRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateSubscriptionRoleRequest) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *UpdateSubscriptionRoleRequest) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type UpdateSubscriptionRoleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Error         *v1.ErrorDetail        `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateSubscriptionRoleResponse) Reset() {
	*x = UpdateSubscriptionRoleResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateSubscriptionRoleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSubscriptionRoleResponse) ProtoMessage() {}

func (x *UpdateSubscriptionRoleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSubscriptionRoleResponse.ProtoReflect.Descriptor instead.
func (*UpdateSubscriptionRoleResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{29}
}

func (x *UpdateSubscriptionRoleResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateSubscriptionRoleResponse) GetError() *v1.ErrorDetail {
	if x != nil {
		return x.Error
	}
	return nil
}

type SearchRoomSubscriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	Cursor        string                 `protobuf:"bytes,4,opt,name=cursor,proto3" json:"cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRoomSubscriptionsRequest) Reset() {
	*x = SearchRoomSubscriptionsRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRoomSubscriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomSubscriptionsRequest) ProtoMessage() {}

func (x *SearchRoomSubscriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomSubscriptionsRequest.ProtoReflect.Descriptor instead.
func (*SearchRoomSubscriptionsRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{30}
}

func (x *SearchRoomSubscriptionsRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SearchRoomSubscriptionsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *SearchRoomSubscriptionsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

type SearchRoomSubscriptionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Members       []*RoomSubscription    `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	NextCursor    string                 `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchRoomSubscriptionsResponse) Reset() {
	*x = SearchRoomSubscriptionsResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRoomSubscriptionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRoomSubscriptionsResponse) ProtoMessage() {}

func (x *SearchRoomSubscriptionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRoomSubscriptionsResponse.ProtoReflect.Descriptor instead.
func (*SearchRoomSubscriptionsResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{31}
}

func (x *SearchRoomSubscriptionsResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *SearchRoomSubscriptionsResponse) GetMembers() []*RoomSubscription {
	if x != nil {
		return x.Members
	}
	return nil
}

func (x *SearchRoomSubscriptionsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

// UpdateTyping
type UpdateTypingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ProfileId     string                 `protobuf:"bytes,2,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	Typing        bool                   `protobuf:"varint,3,opt,name=typing,proto3" json:"typing,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTypingRequest) Reset() {
	*x = UpdateTypingRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTypingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTypingRequest) ProtoMessage() {}

func (x *UpdateTypingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTypingRequest.ProtoReflect.Descriptor instead.
func (*UpdateTypingRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{32}
}

func (x *UpdateTypingRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateTypingRequest) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *UpdateTypingRequest) GetTyping() bool {
	if x != nil {
		return x.Typing
	}
	return false
}

func (x *UpdateTypingRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type UpdateTypingResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Success          bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ParticipantCount int32                  `protobuf:"varint,2,opt,name=participant_count,json=participantCount,proto3" json:"participant_count,omitempty"`
	BroadcastAt      *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=broadcast_at,json=broadcastAt,proto3" json:"broadcast_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdateTypingResponse) Reset() {
	*x = UpdateTypingResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTypingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTypingResponse) ProtoMessage() {}

func (x *UpdateTypingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTypingResponse.ProtoReflect.Descriptor instead.
func (*UpdateTypingResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateTypingResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateTypingResponse) GetParticipantCount() int32 {
	if x != nil {
		return x.ParticipantCount
	}
	return 0
}

func (x *UpdateTypingResponse) GetBroadcastAt() *timestamppb.Timestamp {
	if x != nil {
		return x.BroadcastAt
	}
	return nil
}

// UpdateReadMarker
type UpdateReadMarkerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ProfileId     string                 `protobuf:"bytes,2,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	UpToEventId   string                 `protobuf:"bytes,3,opt,name=up_to_event_id,json=upToEventId,proto3" json:"up_to_event_id,omitempty"`
	ReadAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReadMarkerRequest) Reset() {
	*x = UpdateReadMarkerRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReadMarkerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReadMarkerRequest) ProtoMessage() {}

func (x *UpdateReadMarkerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReadMarkerRequest.ProtoReflect.Descriptor instead.
func (*UpdateReadMarkerRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{34}
}

func (x *UpdateReadMarkerRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateReadMarkerRequest) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *UpdateReadMarkerRequest) GetUpToEventId() string {
	if x != nil {
		return x.UpToEventId
	}
	return ""
}

func (x *UpdateReadMarkerRequest) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

type UpdateReadMarkerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	RoomId        string                 `protobuf:"bytes,2,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	UpToEventId   string                 `protobuf:"bytes,3,opt,name=up_to_event_id,json=upToEventId,proto3" json:"up_to_event_id,omitempty"`
	ReadAt        *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	UnreadCount   int32                  `protobuf:"varint,5,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateReadMarkerResponse) Reset() {
	*x = UpdateReadMarkerResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateReadMarkerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateReadMarkerResponse) ProtoMessage() {}

func (x *UpdateReadMarkerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateReadMarkerResponse.ProtoReflect.Descriptor instead.
func (*UpdateReadMarkerResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{35}
}

func (x *UpdateReadMarkerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateReadMarkerResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *UpdateReadMarkerResponse) GetUpToEventId() string {
	if x != nil {
		return x.UpToEventId
	}
	return ""
}

func (x *UpdateReadMarkerResponse) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

func (x *UpdateReadMarkerResponse) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

// GetReadMarkers
type GetReadMarkersRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	ProfileIds    []string               `protobuf:"bytes,2,rep,name=profile_ids,json=profileIds,proto3" json:"profile_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReadMarkersRequest) Reset() {
	*x = GetReadMarkersRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadMarkersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadMarkersRequest) ProtoMessage() {}

func (x *GetReadMarkersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadMarkersRequest.ProtoReflect.Descriptor instead.
func (*GetReadMarkersRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{36}
}

func (x *GetReadMarkersRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GetReadMarkersRequest) GetProfileIds() []string {
	if x != nil {
		return x.ProfileIds
	}
	return nil
}

type GetReadMarkersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoomId        string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	Markers       []*ReadMarkerInfo      `protobuf:"bytes,2,rep,name=markers,proto3" json:"markers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReadMarkersResponse) Reset() {
	*x = GetReadMarkersResponse{}
	mi := &file_chat_v1_chat_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadMarkersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadMarkersResponse) ProtoMessage() {}

func (x *GetReadMarkersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadMarkersResponse.ProtoReflect.Descriptor instead.
func (*GetReadMarkersResponse) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{37}
}

func (x *GetReadMarkersResponse) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *GetReadMarkersResponse) GetMarkers() []*ReadMarkerInfo {
	if x != nil {
		return x.Markers
	}
	return nil
}

type ReadMarkerInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProfileId     string                 `protobuf:"bytes,1,opt,name=profile_id,json=profileId,proto3" json:"profile_id,omitempty"`
	UpToEventId   string                 `protobuf:"bytes,2,opt,name=up_to_event_id,json=upToEventId,proto3" json:"up_to_event_id,omitempty"`
	ReadAt        *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=read_at,json=readAt,proto3" json:"read_at,omitempty"`
	UnreadCount   int32                  `protobuf:"varint,4,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadMarkerInfo) Reset() {
	*x = ReadMarkerInfo{}
	mi := &file_chat_v1_chat_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadMarkerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadMarkerInfo) ProtoMessage() {}

func (x *ReadMarkerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadMarkerInfo.ProtoReflect.Descriptor instead.
func (*ReadMarkerInfo) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{38}
}

func (x *ReadMarkerInfo) GetProfileId() string {
	if x != nil {
		return x.ProfileId
	}
	return ""
}

func (x *ReadMarkerInfo) GetUpToEventId() string {
	if x != nil {
		return x.UpToEventId
	}
	return ""
}

func (x *ReadMarkerInfo) GetReadAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReadAt
	}
	return nil
}

func (x *ReadMarkerInfo) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

var File_chat_v1_chat_proto protoreflect.FileDescriptor

const file_chat_v1_chat_proto_rawDesc = "" +
	"\n" +
	"\x12chat/v1/chat.proto\x12\achat.v1\x1a\x16common/v1/common.proto\x1a\x1bbuf/validate/validate.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a$gnostic/openapi/v3/annotations.proto\"\xe9\x02\n" +
	"\vServerEvent\x12+\n" +
	"\x02id\x18\x03 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\x02id\x128\n" +
	"\ttimestamp\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12.\n" +
	"\amessage\x18\n" +
	" \x01(\v2\x12.chat.v1.RoomEventH\x00R\amessage\x12?\n" +
	"\x0epresence_event\x18\f \x01(\v2\x16.chat.v1.PresenceEventH\x00R\rpresenceEvent\x12<\n" +
	"\rreceipt_event\x18\r \x01(\v2\x15.chat.v1.ReceiptEventH\x00R\freceiptEvent\x129\n" +
	"\ftyping_event\x18\x0e \x01(\v2\x14.chat.v1.TypingEventH\x00R\vtypingEventB\t\n" +
	"\apayload\"\xae\x03\n" +
	"\tRoomEvent\x12+\n" +
	"\x02id\x18\x01 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\x02id\x124\n" +
	"\aroom_id\x18\x02 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\x06roomId\x12\x1b\n" +
	"\tsender_id\x18\x03 \x01(\tR\bsenderId\x12*\n" +
	"\x04type\x18\x04 \x01(\x0e2\x16.chat.v1.RoomEventTypeR\x04type\x121\n" +
	"\apayload\x18\x06 \x01(\v2\x17.google.protobuf.StructR\apayload\x123\n" +
	"\asent_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\x06sentAt\x12\x16\n" +
	"\x06edited\x18\b \x01(\bR\x06edited\x12\x1a\n" +
	"\bredacted\x18\t \x01(\bR\bredacted\x12*\n" +
	"\x11replaces_event_id\x18\n" +
	" \x01(\tR\x0freplacesEventId\x12-\n" +
	"\x13relates_to_event_id\x18\v \x01(\tR\x10relatesToEventId\"\xbb\x01\n" +
	"\rPresenceEvent\x12\x1d\n" +
	"\n" +
	"profile_id\x18\x01 \x01(\tR\tprofileId\x12/\n" +
	"\x06status\x18\x02 \x01(\x0e2\x17.chat.v1.PresenceStatusR\x06status\x12\x1d\n" +
	"\n" +
	"status_msg\x18\x03 \x01(\tR\tstatusMsg\x12;\n" +
	"\vlast_active\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastActive\"\x9a\x01\n" +
	"\fReceiptEvent\x12\x1d\n" +
	"\n" +
	"profile_id\x18\x01 \x01(\tR\tprofileId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x1d\n" +
	"\n" +
	"message_id\x18\x03 \x01(\tR\tmessageId\x123\n" +
	"\aread_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x06readAt\"\x8f\x01\n" +
	"\vTypingEvent\x12\x1d\n" +
	"\n" +
	"profile_id\x18\x01 \x01(\tR\tprofileId\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x16\n" +
	"\x06typing\x18\x03 \x01(\bR\x06typing\x120\n" +
	"\x05since\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x05since\"\xf5\x01\n" +
	"\x0eConnectRequest\x12\x1d\n" +
	"\n" +
	"session_id\x18\x02 \x01(\tR\tsessionId\x12\x1b\n" +
	"\tdevice_id\x18\x03 \x01(\tR\bdeviceId\x12\x1d\n" +
	"\n" +
	"auth_token\x18\x04 \x01(\tR\tauthToken\x12!\n" +
	"\fresume_token\x18\x05 \x01(\tR\vresumeToken\x12&\n" +
	"\x03ack\x18\n" +
	" \x01(\v2\x12.chat.v1.StreamAckH\x00R\x03ack\x122\n" +
	"\acommand\x18\f \x01(\v2\x16.chat.v1.ClientCommandH\x00R\acommandB\t\n" +
	"\apayload\"\xcb\x01\n" +
	"\tStreamAck\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x121\n" +
	"\x06ack_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x05ackAt\x123\n" +
	"\bmetadata\x18\x06 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x121\n" +
	"\x05error\x18\a \x01(\v2\x16.common.v1.ErrorDetailH\x00R\x05error\x88\x01\x01B\b\n" +
	"\x06_error\"\xb4\x01\n" +
	"\rClientCommand\x12/\n" +
	"\x06typing\x18\x01 \x01(\v2\x15.chat.v1.TypingUpdateH\x00R\x06typing\x126\n" +
	"\vread_marker\x18\x02 \x01(\v2\x13.chat.v1.ReadMarkerH\x00R\n" +
	"readMarker\x123\n" +
	"\n" +
	"room_event\x18\x03 \x01(\v2\x12.chat.v1.RoomEventH\x00R\troomEventB\x05\n" +
	"\x03cmd\"?\n" +
	"\fTypingUpdate\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x16\n" +
	"\x06typing\x18\x02 \x01(\bR\x06typing\"J\n" +
	"\n" +
	"ReadMarker\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12#\n" +
	"\x0eup_to_event_id\x18\x02 \x01(\tR\vupToEventId\"@\n" +
	"\x10SendEventRequest\x12,\n" +
	"\amessage\x18\x04 \x03(\v2\x12.chat.v1.RoomEventR\amessage\"9\n" +
	"\x11SendEventResponse\x12$\n" +
	"\x03ack\x18\x01 \x03(\v2\x12.chat.v1.StreamAckR\x03ack\"t\n" +
	"\x11GetHistoryRequest\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x16\n" +
	"\x06cursor\x18\x03 \x01(\tR\x06cursor\x12\x14\n" +
	"\x05limit\x18\x04 \x01(\x05R\x05limit\x12\x18\n" +
	"\aforward\x18\x05 \x01(\bR\aforward\"\x84\x01\n" +
	"\x12GetHistoryResponse\x12,\n" +
	"\x06events\x18\x01 \x03(\v2\x14.chat.v1.ServerEventR\x06events\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x1f\n" +
	"\vprev_cursor\x18\x03 \x01(\tR\n" +
	"prevCursor\"\xd2\x02\n" +
	"\x04Room\x12+\n" +
	"\x02id\x18\x02 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\x02id\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x04 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"is_private\x18\x05 \x01(\bR\tisPrivate\x123\n" +
	"\bmetadata\x18\x06 \x01(\v2\x17.google.protobuf.StructR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x1d\n" +
	"\n" +
	"creator_id\x18\t \x01(\tR\tcreatorId\"\xe4\x01\n" +
	"\x11CreateRoomRequest\x12+\n" +
	"\x02id\x18\x03 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\x02id\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1d\n" +
	"\n" +
	"is_private\x18\x06 \x01(\bR\tisPrivate\x12\x18\n" +
	"\amembers\x18\a \x03(\tR\amembers\x123\n" +
	"\bmetadata\x18\b \x01(\v2\x17.google.protobuf.StructR\bmetadata\"e\n" +
	"\x12CreateRoomResponse\x12!\n" +
	"\x04room\x18\x01 \x01(\v2\r.chat.v1.RoomR\x04room\x12,\n" +
	"\x05error\x18\x02 \x01(\v2\x16.common.v1.ErrorDetailR\x05error\"\xdf\x01\n" +
	"\x12SearchRoomsRequest\x12\x14\n" +
	"\x05query\x18\x01 \x01(\tR\x05query\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x14\n" +
	"\x05count\x18\x03 \x01(\x05R\x05count\x12\x1d\n" +
	"\n" +
	"start_date\x18\x04 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x05 \x01(\tR\aendDate\x12\x1e\n" +
	"\n" +
	"properties\x18\x06 \x03(\tR\n" +
	"properties\x12/\n" +
	"\x06extras\x18\a \x01(\v2\x17.google.protobuf.StructR\x06extras\"8\n" +
	"\x13SearchRoomsResponse\x12!\n" +
	"\x04data\x18\x01 \x03(\v2\r.chat.v1.RoomR\x04data\"\x8b\x01\n" +
	"\x11UpdateRoomRequest\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x14\n" +
	"\x05topic\x18\x04 \x01(\tR\x05topic\x123\n" +
	"\bmetadata\x18\x05 \x01(\v2\x17.google.protobuf.StructR\bmetadata\"e\n" +
	"\x12UpdateRoomResponse\x12!\n" +
	"\x04room\x18\x01 \x01(\v2\r.chat.v1.RoomR\x04room\x12,\n" +
	"\x05error\x18\x02 \x01(\v2\x16.common.v1.ErrorDetailR\x05error\",\n" +
	"\x11DeleteRoomRequest\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\"[\n" +
	"\x12DeleteRoomResponse\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12,\n" +
	"\x05error\x18\x02 \x01(\v2\x16.common.v1.ErrorDetailR\x05error\"\xd6\x01\n" +
	"\x10RoomSubscription\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x1d\n" +
	"\n" +
	"profile_id\x18\x03 \x01(\tR\tprofileId\x12\x14\n" +
	"\x05roles\x18\x04 \x03(\tR\x05roles\x127\n" +
	"\tjoined_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\bjoinedAt\x12;\n" +
	"\vlast_active\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"lastActive\"k\n" +
	"\x1bAddRoomSubscriptionsRequest\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x123\n" +
	"\amembers\x18\x03 \x03(\v2\x19.chat.v1.RoomSubscriptionR\amembers\"e\n" +
	"\x1cAddRoomSubscriptionsResponse\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12,\n" +
	"\x05error\x18\x03 \x01(\v2\x16.common.v1.ErrorDetailR\x05error\"Z\n" +
	"\x1eRemoveRoomSubscriptionsRequest\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x1f\n" +
	"\vprofile_ids\x18\x03 \x03(\tR\n" +
	"profileIds\"h\n" +
	"\x1fRemoveRoomSubscriptionsResponse\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12,\n" +
	"\x05error\x18\x03 \x01(\v2\x16.common.v1.ErrorDetailR\x05error\"m\n" +
	"\x1dUpdateSubscriptionRoleRequest\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x1d\n" +
	"\n" +
	"profile_id\x18\x03 \x01(\tR\tprofileId\x12\x14\n" +
	"\x05roles\x18\x04 \x03(\tR\x05roles\"g\n" +
	"\x1eUpdateSubscriptionRoleResponse\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12,\n" +
	"\x05error\x18\x03 \x01(\v2\x16.common.v1.ErrorDetailR\x05error\"g\n" +
	"\x1eSearchRoomSubscriptionsRequest\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06cursor\x18\x04 \x01(\tR\x06cursor\"\x90\x01\n" +
	"\x1fSearchRoomSubscriptionsResponse\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x123\n" +
	"\amembers\x18\x02 \x03(\v2\x19.chat.v1.RoomSubscriptionR\amembers\x12\x1f\n" +
	"\vnext_cursor\x18\x03 \x01(\tR\n" +
	"nextCursor\"\xd9\x01\n" +
	"\x13UpdateTypingRequest\x124\n" +
	"\aroom_id\x18\x01 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\x06roomId\x12:\n" +
	"\n" +
	"profile_id\x18\x02 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\tprofileId\x12\x16\n" +
	"\x06typing\x18\x03 \x01(\bR\x06typing\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x9c\x01\n" +
	"\x14UpdateTypingResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12+\n" +
	"\x11participant_count\x18\x02 \x01(\x05R\x10participantCount\x12=\n" +
	"\fbroadcast_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\vbroadcastAt\"\x82\x02\n" +
	"\x17UpdateReadMarkerRequest\x124\n" +
	"\aroom_id\x18\x01 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\x06roomId\x12:\n" +
	"\n" +
	"profile_id\x18\x02 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\tprofileId\x12@\n" +
	"\x0eup_to_event_id\x18\x03 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\vupToEventId\x123\n" +
	"\aread_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06readAt\"\xca\x01\n" +
	"\x18UpdateReadMarkerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x17\n" +
	"\aroom_id\x18\x02 \x01(\tR\x06roomId\x12#\n" +
	"\x0eup_to_event_id\x18\x03 \x01(\tR\vupToEventId\x123\n" +
	"\aread_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\x06readAt\x12!\n" +
	"\funread_count\x18\x05 \x01(\x05R\vunreadCount\"n\n" +
	"\x15GetReadMarkersRequest\x124\n" +
	"\aroom_id\x18\x01 \x01(\tB\x1b\xbaH\x18r\x16\x10\x03\x18(2\x10[0-9a-z_-]{3,20}R\x06roomId\x12\x1f\n" +
	"\vprofile_ids\x18\x02 \x03(\tR\n" +
	"profileIds\"d\n" +
	"\x16GetReadMarkersResponse\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x121\n" +
	"\amarkers\x18\x02 \x03(\v2\x17.chat.v1.ReadMarkerInfoR\amarkers\"\xac\x01\n" +
	"\x0eReadMarkerInfo\x12\x1d\n" +
	"\n" +
	"profile_id\x18\x01 \x01(\tR\tprofileId\x12#\n" +
	"\x0eup_to_event_id\x18\x02 \x01(\tR\vupToEventId\x123\n" +
	"\aread_at\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x06readAt\x12!\n" +
	"\funread_count\x18\x04 \x01(\x05R\vunreadCount*\xd3\x02\n" +
	"\rRoomEventType\x12\x1c\n" +
	"\x18MESSAGE_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12MESSAGE_TYPE_EVENT\x10\x01\x12\x15\n" +
	"\x11MESSAGE_TYPE_TEXT\x10\x02\x12\x1b\n" +
	"\x17MESSAGE_TYPE_ATTACHMENT\x10\x03\x12\x19\n" +
	"\x15MESSAGE_TYPE_REACTION\x10\a\x12\x1a\n" +
	"\x16MESSAGE_TYPE_ENCRYPTED\x10\x06\x12\x17\n" +
	"\x13MESSAGE_TYPE_SYSTEM\x10\n" +
	"\x12\x1b\n" +
	"\x17MESSAGE_TYPE_CALL_OFFER\x10\x15\x12\x1c\n" +
	"\x18MESSAGE_TYPE_CALL_ANSWER\x10\x16\x12\x19\n" +
	"\x15MESSAGE_TYPE_CALL_ICE\x10\x17\x12\x19\n" +
	"\x15MESSAGE_TYPE_CALL_END\x10\x18\x12\x17\n" +
	"\x13MESSAGE_TYPE_CUSTOM\x10d*w\n" +
	"\x0ePresenceStatus\x12\x14\n" +
	"\x10PRESENCE_UNKNOWN\x10\x00\x12\x14\n" +
	"\x10PRESENCE_OFFLINE\x10\x01\x12\x13\n" +
	"\x0fPRESENCE_ONLINE\x10\x02\x12\x11\n" +
	"\rPRESENCE_AWAY\x10\x03\x12\x11\n" +
	"\rPRESENCE_BUSY\x10\x042\x82\x03\n" +
	"\x0eGatewayService\x12\xef\x02\n" +
	"\aConnect\x12\x17.chat.v1.ConnectRequest\x1a\x14.chat.v1.ServerEvent\"\xb0\x02\xbaG\xac\x02\n" +
	"\tReal-time\x12-Establish bi-directional streaming connection\x1a\xe6\x01Opens a persistent bi-directional stream for real-time chat events. Clients send ConnectRequest messages (auth, acks, commands) and receive ServerEvent messages in chronological order. Supports session resumption via resume_token.*\aconnect(\x010\x012\xf7\x1b\n" +
	"\vChatService\x12\x91\x02\n" +
	"\tSendEvent\x12\x19.chat.v1.SendEventRequest\x1a\x1a.chat.v1.SendEventResponse\"\xcc\x01\xbaG\xc8\x01\n" +
	"\bMessages\x12\x17Send an event to a room\x1a\x97\x01Sends one or more events to chat rooms. Supports text, attachments, reactions, and system messages. Idempotent when idempotency_key header is provided.*\tsendEvent\x12\x88\x02\n" +
	"\n" +
	"GetHistory\x12\x1a.chat.v1.GetHistoryRequest\x1a\x1b.chat.v1.GetHistoryResponse\"\xc0\x01\xbaG\xbc\x01\n" +
	"\bMessages\x12#Retrieve message history for a room\x1a\x7fFetches paginated message history for a specified room using cursor-based navigation. Supports forward and backward pagination.*\n" +
	"getHistory\x12\x9d\x02\n" +
	"\n" +
	"CreateRoom\x12\x1a.chat.v1.CreateRoomRequest\x1a\x1b.chat.v1.CreateRoomResponse\"\xd5\x01\xbaG\xd1\x01\n" +
	"\x05Rooms\x12\x16Create a new chat room\x1a\xa3\x01Creates a new chat room with specified configuration. The creator is automatically added as a member with owner privileges. Supports both public and private rooms.*\n" +
	"createRoom\x12\x9b\x02\n" +
	"\vSearchRooms\x12\x1b.chat.v1.SearchRoomsRequest\x1a\x1c.chat.v1.SearchRoomsResponse\"\xce\x01\xbaG\xca\x01\n" +
	"\x05Rooms\x12\x15Search for chat rooms\x1a\x9c\x01Searches for chat rooms matching the specified criteria. Returns a stream of matching rooms. Supports filtering by query, date range, and custom properties.*\vsearchRooms0\x01\x12\x87\x02\n" +
	"\n" +
	"UpdateRoom\x12\x1a.chat.v1.UpdateRoomRequest\x1a\x1b.chat.v1.UpdateRoomResponse\"\xbf\x01\xbaG\xbb\x01\n" +
	"\x05Rooms\x12\x12Update a chat room\x1a\x91\x01Updates the configuration of an existing chat room including name, topic, and metadata. Only room owners and moderators can update room settings.*\n" +
	"updateRoom\x12\xeb\x01\n" +
	"\n" +
	"DeleteRoom\x12\x1a.chat.v1.DeleteRoomRequest\x1a\x1b.chat.v1.DeleteRoomResponse\"\xa3\x01\xbaG\x9f\x01\n" +
	"\x05Rooms\x12\x12Delete a chat room\x1avPermanently deletes a chat room and all its messages. This action cannot be undone. Only room owners can delete rooms.*\n" +
	"deleteRoom\x12\xad\x02\n" +
	"\x14AddRoomSubscriptions\x12$.chat.v1.AddRoomSubscriptionsRequest\x1a%.chat.v1.AddRoomSubscriptionsResponse\"\xc7\x01\xbaG\xc3\x01\n" +
	"\rSubscriptions\x12\x15Add members to a room\x1a\x84\x01Adds one or more users to a chat room with specified roles. The requesting user must have owner or moderator privileges in the room.*\x14addRoomSubscriptions\x12\xca\x02\n" +
	"\x17RemoveRoomSubscriptions\x12'.chat.v1.RemoveRoomSubscriptionsRequest\x1a(.chat.v1.RemoveRoomSubscriptionsResponse\"\xdb\x01\xbaG\xd7\x01\n" +
	"\rSubscriptions\x12\x1aRemove members from a room\x1a\x90\x01Removes one or more users from a chat room. The requesting user must have owner or moderator privileges in the room, unless removing themselves.*\x17removeRoomSubscriptions\x12\xb1\x02\n" +
	"\x16UpdateSubscriptionRole\x12&.chat.v1.UpdateSubscriptionRoleRequest\x1a'.chat.v1.UpdateSubscriptionRoleResponse\"\xc5\x01\xbaG\xc1\x01\n" +
	"\rSubscriptions\x12 Update a member's role in a room\x1avUpdates the role(s) of a user in a chat room. The requesting user must have owner or moderator privileges in the room.*\x16updateSubscriptionRole\x12\x9a\x02\n" +
	"\x17SearchRoomSubscriptions\x12'.chat.v1.SearchRoomSubscriptionsRequest\x1a(.chat.v1.SearchRoomSubscriptionsResponse\"\xab\x01\xbaG\xa7\x01\n" +
	"\rSubscriptions\x12\x11List room members\x1ajRetrieves a paginated list of users subscribed to a room, along with their roles and activity information.*\x17searchRoomSubscriptions\x12\xf4\x01\n" +
	"\fUpdateTyping\x12\x1c.chat.v1.UpdateTypingRequest\x1a\x1d.chat.v1.UpdateTypingResponse\"\xa6\x01\xbaG\xa2\x01\n" +
	"\tReal-time\x12\x17Update typing indicator\x1anUpdates the typing status of the authenticated user in a specific room. Broadcasts to all active participants.*\fupdateTyping\x12\xfc\x01\n" +
	"\x10UpdateReadMarker\x12 .chat.v1.UpdateReadMarkerRequest\x1a!.chat.v1.UpdateReadMarkerResponse\"\xa2\x01\xbaG\x9e\x01\n" +
	"\tReal-time\x12\x12Update read marker\x1akUpdates the read marker indicating which messages a user has read. Enables read receipts and unread counts.*\x10updateReadMarker\x12\xce\x01\n" +
	"\x0eGetReadMarkers\x12\x1e.chat.v1.GetReadMarkersRequest\x1a\x1f.chat.v1.GetReadMarkersResponse\"{\xbaGx\n" +
	"\tReal-time\x12\x1bGet read markers for a room\x1a>Retrieves read markers showing which messages users have read.*\x0egetReadMarkersB\xe8\x06\xbaG\xcf\x05\x12\xa3\x05\n" +
	"\fChat Service\x12\xe8\x03The Chat Service provides endpoints for real-time, secure messaging between users and devices. It supports sending, receiving, and synchronizing messages across rooms, direct chats, and group conversations, with optional end-to-end encryption. The service is designed for mobile, desktop, and web clients, supporting both streaming and standard request-response operations. APIs are consistent, well-structured, and optimized for low-latency delivery, even on limited network connections.\"U\n" +
	"\x10Ant Investor Ltd\x12+https://github.com/antinvestor/service-chat\x1a\x14info@antinvestor.com*I\n" +
	"\x0eApache License\x127https://github.com/antinvestor/apis/blob/master/LICENSE2\x06v1.0.0*':%\n" +
	"#\n" +
	"\n" +
	"BearerAuth\x12\x15\n" +
	"\x13\n" +
	"\x04http*\x06bearer2\x03JWT\n" +
	"\x1ccom.antinvestor.apis.chat.v1B\tChatProtoP\x01Z-github.com/antinvestor/apis/go/chat/v1;chatv1\xa2\x02\x03CXX\xaa\x02\aChat.V1\xca\x02\aChat\\V1\xe2\x02\x13Chat\\V1\\GPBMetadata\xea\x02\bChat::V1b\x06proto3"

var (
	file_chat_v1_chat_proto_rawDescOnce sync.Once
	file_chat_v1_chat_proto_rawDescData []byte
)

func file_chat_v1_chat_proto_rawDescGZIP() []byte {
	file_chat_v1_chat_proto_rawDescOnce.Do(func() {
		file_chat_v1_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_v1_chat_proto_rawDesc), len(file_chat_v1_chat_proto_rawDesc)))
	})
	return file_chat_v1_chat_proto_rawDescData
}

var file_chat_v1_chat_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_chat_v1_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 39)
var file_chat_v1_chat_proto_goTypes = []any{
	(RoomEventType)(0),                      // 0: chat.v1.RoomEventType
	(PresenceStatus)(0),                     // 1: chat.v1.PresenceStatus
	(*ServerEvent)(nil),                     // 2: chat.v1.ServerEvent
	(*RoomEvent)(nil),                       // 3: chat.v1.RoomEvent
	(*PresenceEvent)(nil),                   // 4: chat.v1.PresenceEvent
	(*ReceiptEvent)(nil),                    // 5: chat.v1.ReceiptEvent
	(*TypingEvent)(nil),                     // 6: chat.v1.TypingEvent
	(*ConnectRequest)(nil),                  // 7: chat.v1.ConnectRequest
	(*StreamAck)(nil),                       // 8: chat.v1.StreamAck
	(*ClientCommand)(nil),                   // 9: chat.v1.ClientCommand
	(*TypingUpdate)(nil),                    // 10: chat.v1.TypingUpdate
	(*ReadMarker)(nil),                      // 11: chat.v1.ReadMarker
	(*SendEventRequest)(nil),                // 12: chat.v1.SendEventRequest
	(*SendEventResponse)(nil),               // 13: chat.v1.SendEventResponse
	(*GetHistoryRequest)(nil),               // 14: chat.v1.GetHistoryRequest
	(*GetHistoryResponse)(nil),              // 15: chat.v1.GetHistoryResponse
	(*Room)(nil),                            // 16: chat.v1.Room
	(*CreateRoomRequest)(nil),               // 17: chat.v1.CreateRoomRequest
	(*CreateRoomResponse)(nil),              // 18: chat.v1.CreateRoomResponse
	(*SearchRoomsRequest)(nil),              // 19: chat.v1.SearchRoomsRequest
	(*SearchRoomsResponse)(nil),             // 20: chat.v1.SearchRoomsResponse
	(*UpdateRoomRequest)(nil),               // 21: chat.v1.UpdateRoomRequest
	(*UpdateRoomResponse)(nil),              // 22: chat.v1.UpdateRoomResponse
	(*DeleteRoomRequest)(nil),               // 23: chat.v1.DeleteRoomRequest
	(*DeleteRoomResponse)(nil),              // 24: chat.v1.DeleteRoomResponse
	(*RoomSubscription)(nil),                // 25: chat.v1.RoomSubscription
	(*AddRoomSubscriptionsRequest)(nil),     // 26: chat.v1.AddRoomSubscriptionsRequest
	(*AddRoomSubscriptionsResponse)(nil),    // 27: chat.v1.AddRoomSubscriptionsResponse
	(*RemoveRoomSubscriptionsRequest)(nil),  // 28: chat.v1.RemoveRoomSubscriptionsRequest
	(*RemoveRoomSubscriptionsResponse)(nil), // 29: chat.v1.RemoveRoomSubscriptionsResponse
	(*UpdateSubscriptionRoleRequest)(nil),   // 30: chat.v1.UpdateSubscriptionRoleRequest
	(*UpdateSubscriptionRoleResponse)(nil),  // 31: chat.v1.UpdateSubscriptionRoleResponse
	(*SearchRoomSubscriptionsRequest)(nil),  // 32: chat.v1.SearchRoomSubscriptionsRequest
	(*SearchRoomSubscriptionsResponse)(nil), // 33: chat.v1.SearchRoomSubscriptionsResponse
	(*UpdateTypingRequest)(nil),             // 34: chat.v1.UpdateTypingRequest
	(*UpdateTypingResponse)(nil),            // 35: chat.v1.UpdateTypingResponse
	(*UpdateReadMarkerRequest)(nil),         // 36: chat.v1.UpdateReadMarkerRequest
	(*UpdateReadMarkerResponse)(nil),        // 37: chat.v1.UpdateReadMarkerResponse
	(*GetReadMarkersRequest)(nil),           // 38: chat.v1.GetReadMarkersRequest
	(*GetReadMarkersResponse)(nil),          // 39: chat.v1.GetReadMarkersResponse
	(*ReadMarkerInfo)(nil),                  // 40: chat.v1.ReadMarkerInfo
	(*timestamppb.Timestamp)(nil),           // 41: google.protobuf.Timestamp
	(*structpb.Struct)(nil),                 // 42: google.protobuf.Struct
	(*v1.ErrorDetail)(nil),                  // 43: common.v1.ErrorDetail
}
var file_chat_v1_chat_proto_depIdxs = []int32{
	41, // 0: chat.v1.ServerEvent.timestamp:type_name -> google.protobuf.Timestamp
	3,  // 1: chat.v1.ServerEvent.message:type_name -> chat.v1.RoomEvent
	4,  // 2: chat.v1.ServerEvent.presence_event:type_name -> chat.v1.PresenceEvent
	5,  // 3: chat.v1.ServerEvent.receipt_event:type_name -> chat.v1.ReceiptEvent
	6,  // 4: chat.v1.ServerEvent.typing_event:type_name -> chat.v1.TypingEvent
	0,  // 5: chat.v1.RoomEvent.type:type_name -> chat.v1.RoomEventType
	42, // 6: chat.v1.RoomEvent.payload:type_name -> google.protobuf.Struct
	41, // 7: chat.v1.RoomEvent.sent_at:type_name -> google.protobuf.Timestamp
	1,  // 8: chat.v1.PresenceEvent.status:type_name -> chat.v1.PresenceStatus
	41, // 9: chat.v1.PresenceEvent.last_active:type_name -> google.protobuf.Timestamp
	41, // 10: chat.v1.ReceiptEvent.read_at:type_name -> google.protobuf.Timestamp
	41, // 11: chat.v1.TypingEvent.since:type_name -> google.protobuf.Timestamp
	8,  // 12: chat.v1.ConnectRequest.ack:type_name -> chat.v1.StreamAck
	9,  // 13: chat.v1.ConnectRequest.command:type_name -> chat.v1.ClientCommand
	41, // 14: chat.v1.StreamAck.ack_at:type_name -> google.protobuf.Timestamp
	42, // 15: chat.v1.StreamAck.metadata:type_name -> google.protobuf.Struct
	43, // 16: chat.v1.StreamAck.error:type_name -> common.v1.ErrorDetail
	10, // 17: chat.v1.ClientCommand.typing:type_name -> chat.v1.TypingUpdate
	11, // 18: chat.v1.ClientCommand.read_marker:type_name -> chat.v1.ReadMarker
	3,  // 19: chat.v1.ClientCommand.room_event:type_name -> chat.v1.RoomEvent
	3,  // 20: chat.v1.SendEventRequest.message:type_name -> chat.v1.RoomEvent
	8,  // 21: chat.v1.SendEventResponse.ack:type_name -> chat.v1.StreamAck
	2,  // 22: chat.v1.GetHistoryResponse.events:type_name -> chat.v1.ServerEvent
	42, // 23: chat.v1.Room.metadata:type_name -> google.protobuf.Struct
	41, // 24: chat.v1.Room.created_at:type_name -> google.protobuf.Timestamp
	41, // 25: chat.v1.Room.updated_at:type_name -> google.protobuf.Timestamp
	42, // 26: chat.v1.CreateRoomRequest.metadata:type_name -> google.protobuf.Struct
	16, // 27: chat.v1.CreateRoomResponse.room:type_name -> chat.v1.Room
	43, // 28: chat.v1.CreateRoomResponse.error:type_name -> common.v1.ErrorDetail
	42, // 29: chat.v1.SearchRoomsRequest.extras:type_name -> google.protobuf.Struct
	16, // 30: chat.v1.SearchRoomsResponse.data:type_name -> chat.v1.Room
	42, // 31: chat.v1.UpdateRoomRequest.metadata:type_name -> google.protobuf.Struct
	16, // 32: chat.v1.UpdateRoomResponse.room:type_name -> chat.v1.Room
	43, // 33: chat.v1.UpdateRoomResponse.error:type_name -> common.v1.ErrorDetail
	43, // 34: chat.v1.DeleteRoomResponse.error:type_name -> common.v1.ErrorDetail
	41, // 35: chat.v1.RoomSubscription.joined_at:type_name -> google.protobuf.Timestamp
	41, // 36: chat.v1.RoomSubscription.last_active:type_name -> google.protobuf.Timestamp
	25, // 37: chat.v1.AddRoomSubscriptionsRequest.members:type_name -> chat.v1.RoomSubscription
	43, // 38: chat.v1.AddRoomSubscriptionsResponse.error:type_name -> common.v1.ErrorDetail
	43, // 39: chat.v1.RemoveRoomSubscriptionsResponse.error:type_name -> common.v1.ErrorDetail
	43, // 40: chat.v1.UpdateSubscriptionRoleResponse.error:type_name -> common.v1.ErrorDetail
	25, // 41: chat.v1.SearchRoomSubscriptionsResponse.members:type_name -> chat.v1.RoomSubscription
	41, // 42: chat.v1.UpdateTypingRequest.timestamp:type_name -> google.protobuf.Timestamp
	41, // 43: chat.v1.UpdateTypingResponse.broadcast_at:type_name -> google.protobuf.Timestamp
	41, // 44: chat.v1.UpdateReadMarkerRequest.read_at:type_name -> google.protobuf.Timestamp
	41, // 45: chat.v1.UpdateReadMarkerResponse.read_at:type_name -> google.protobuf.Timestamp
	40, // 46: chat.v1.GetReadMarkersResponse.markers:type_name -> chat.v1.ReadMarkerInfo
	41, // 47: chat.v1.ReadMarkerInfo.read_at:type_name -> google.protobuf.Timestamp
	7,  // 48: chat.v1.GatewayService.Connect:input_type -> chat.v1.ConnectRequest
	12, // 49: chat.v1.ChatService.SendEvent:input_type -> chat.v1.SendEventRequest
	14, // 50: chat.v1.ChatService.GetHistory:input_type -> chat.v1.GetHistoryRequest
	17, // 51: chat.v1.ChatService.CreateRoom:input_type -> chat.v1.CreateRoomRequest
	19, // 52: chat.v1.ChatService.SearchRooms:input_type -> chat.v1.SearchRoomsRequest
	21, // 53: chat.v1.ChatService.UpdateRoom:input_type -> chat.v1.UpdateRoomRequest
	23, // 54: chat.v1.ChatService.DeleteRoom:input_type -> chat.v1.DeleteRoomRequest
	26, // 55: chat.v1.ChatService.AddRoomSubscriptions:input_type -> chat.v1.AddRoomSubscriptionsRequest
	28, // 56: chat.v1.ChatService.RemoveRoomSubscriptions:input_type -> chat.v1.RemoveRoomSubscriptionsRequest
	30, // 57: chat.v1.ChatService.UpdateSubscriptionRole:input_type -> chat.v1.UpdateSubscriptionRoleRequest
	32, // 58: chat.v1.ChatService.SearchRoomSubscriptions:input_type -> chat.v1.SearchRoomSubscriptionsRequest
	34, // 59: chat.v1.ChatService.UpdateTyping:input_type -> chat.v1.UpdateTypingRequest
	36, // 60: chat.v1.ChatService.UpdateReadMarker:input_type -> chat.v1.UpdateReadMarkerRequest
	38, // 61: chat.v1.ChatService.GetReadMarkers:input_type -> chat.v1.GetReadMarkersRequest
	2,  // 62: chat.v1.GatewayService.Connect:output_type -> chat.v1.ServerEvent
	13, // 63: chat.v1.ChatService.SendEvent:output_type -> chat.v1.SendEventResponse
	15, // 64: chat.v1.ChatService.GetHistory:output_type -> chat.v1.GetHistoryResponse
	18, // 65: chat.v1.ChatService.CreateRoom:output_type -> chat.v1.CreateRoomResponse
	20, // 66: chat.v1.ChatService.SearchRooms:output_type -> chat.v1.SearchRoomsResponse
	22, // 67: chat.v1.ChatService.UpdateRoom:output_type -> chat.v1.UpdateRoomResponse
	24, // 68: chat.v1.ChatService.DeleteRoom:output_type -> chat.v1.DeleteRoomResponse
	27, // 69: chat.v1.ChatService.AddRoomSubscriptions:output_type -> chat.v1.AddRoomSubscriptionsResponse
	29, // 70: chat.v1.ChatService.RemoveRoomSubscriptions:output_type -> chat.v1.RemoveRoomSubscriptionsResponse
	31, // 71: chat.v1.ChatService.UpdateSubscriptionRole:output_type -> chat.v1.UpdateSubscriptionRoleResponse
	33, // 72: chat.v1.ChatService.SearchRoomSubscriptions:output_type -> chat.v1.SearchRoomSubscriptionsResponse
	35, // 73: chat.v1.ChatService.UpdateTyping:output_type -> chat.v1.UpdateTypingResponse
	37, // 74: chat.v1.ChatService.UpdateReadMarker:output_type -> chat.v1.UpdateReadMarkerResponse
	39, // 75: chat.v1.ChatService.GetReadMarkers:output_type -> chat.v1.GetReadMarkersResponse
	62, // [62:76] is the sub-list for method output_type
	48, // [48:62] is the sub-list for method input_type
	48, // [48:48] is the sub-list for extension type_name
	48, // [48:48] is the sub-list for extension extendee
	0,  // [0:48] is the sub-list for field type_name
}

func init() { file_chat_v1_chat_proto_init() }
func file_chat_v1_chat_proto_init() {
	if File_chat_v1_chat_proto != nil {
		return
	}
	file_chat_v1_chat_proto_msgTypes[0].OneofWrappers = []any{
		(*ServerEvent_Message)(nil),
		(*ServerEvent_PresenceEvent)(nil),
		(*ServerEvent_ReceiptEvent)(nil),
		(*ServerEvent_TypingEvent)(nil),
	}
	file_chat_v1_chat_proto_msgTypes[5].OneofWrappers = []any{
		(*ConnectRequest_Ack)(nil),
		(*ConnectRequest_Command)(nil),
	}
	file_chat_v1_chat_proto_msgTypes[6].OneofWrappers = []any{}
	file_chat_v1_chat_proto_msgTypes[7].OneofWrappers = []any{
		(*ClientCommand_Typing)(nil),
		(*ClientCommand_ReadMarker)(nil),
		(*ClientCommand_RoomEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_v1_chat_proto_rawDesc), len(file_chat_v1_chat_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   39,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_chat_v1_chat_proto_goTypes,
		DependencyIndexes: file_chat_v1_chat_proto_depIdxs,
		EnumInfos:         file_chat_v1_chat_proto_enumTypes,
		MessageInfos:      file_chat_v1_chat_proto_msgTypes,
	}.Build()
	File_chat_v1_chat_proto = out.File
	file_chat_v1_chat_proto_goTypes = nil
	file_chat_v1_chat_proto_depIdxs = nil
}
