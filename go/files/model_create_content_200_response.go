/*
Ant Investor Files

An openAPI 3.0 specification that defines how files are stored and accessed on ant investor products

API version: 1.0.0
Contact: info@antinvestor.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package file_v1

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateContent200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateContent200Response{}

// CreateContent200Response struct for CreateContent200Response
type CreateContent200Response struct {
	// The [`mxc://` URI](/client-server-api/#matrix-content-mxc-uris) at which the content will be available, once it is uploaded.
	ContentUri interface{} `json:"content_uri"`
	// The timestamp (in milliseconds since the unix epoch) when the generated media id will expire, if media is not uploaded.
	UnusedExpiresAt interface{} `json:"unused_expires_at,omitempty"`
}

type _CreateContent200Response CreateContent200Response

// NewCreateContent200Response instantiates a new CreateContent200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateContent200Response(contentUri interface{}) *CreateContent200Response {
	this := CreateContent200Response{}
	this.ContentUri = contentUri
	return &this
}

// NewCreateContent200ResponseWithDefaults instantiates a new CreateContent200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateContent200ResponseWithDefaults() *CreateContent200Response {
	this := CreateContent200Response{}
	return &this
}

// GetContentUri returns the ContentUri field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *CreateContent200Response) GetContentUri() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.ContentUri
}

// GetContentUriOk returns a tuple with the ContentUri field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateContent200Response) GetContentUriOk() (*interface{}, bool) {
	if o == nil || IsNil(o.ContentUri) {
		return nil, false
	}
	return &o.ContentUri, true
}

// SetContentUri sets field value
func (o *CreateContent200Response) SetContentUri(v interface{}) {
	o.ContentUri = v
}

// GetUnusedExpiresAt returns the UnusedExpiresAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateContent200Response) GetUnusedExpiresAt() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.UnusedExpiresAt
}

// GetUnusedExpiresAtOk returns a tuple with the UnusedExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateContent200Response) GetUnusedExpiresAtOk() (*interface{}, bool) {
	if o == nil || IsNil(o.UnusedExpiresAt) {
		return nil, false
	}
	return &o.UnusedExpiresAt, true
}

// HasUnusedExpiresAt returns a boolean if a field has been set.
func (o *CreateContent200Response) HasUnusedExpiresAt() bool {
	if o != nil && IsNil(o.UnusedExpiresAt) {
		return true
	}

	return false
}

// SetUnusedExpiresAt gets a reference to the given interface{} and assigns it to the UnusedExpiresAt field.
func (o *CreateContent200Response) SetUnusedExpiresAt(v interface{}) {
	o.UnusedExpiresAt = v
}

func (o CreateContent200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateContent200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ContentUri != nil {
		toSerialize["content_uri"] = o.ContentUri
	}
	if o.UnusedExpiresAt != nil {
		toSerialize["unused_expires_at"] = o.UnusedExpiresAt
	}
	return toSerialize, nil
}

func (o *CreateContent200Response) UnmarshalJSON(bytes []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"content_uri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(bytes, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateContent200Response := _CreateContent200Response{}

	err = json.Unmarshal(bytes, &varCreateContent200Response)

	if err != nil {
		return err
	}

	*o = CreateContent200Response(varCreateContent200Response)

	return err
}

type NullableCreateContent200Response struct {
	value *CreateContent200Response
	isSet bool
}

func (v NullableCreateContent200Response) Get() *CreateContent200Response {
	return v.value
}

func (v *NullableCreateContent200Response) Set(val *CreateContent200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateContent200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateContent200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateContent200Response(val *CreateContent200Response) *NullableCreateContent200Response {
	return &NullableCreateContent200Response{value: val, isSet: true}
}

func (v NullableCreateContent200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateContent200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
