/*
Ant Investor Files

An openAPI 3.0 specification that defines how files are stored and accessed on ant investor products

API version: 1.0.0
Contact: info@antinvestor.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package file_v1

import (
	"encoding/json"
)

// checks if the GetConfig200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetConfig200Response{}

// GetConfig200Response struct for GetConfig200Response
type GetConfig200Response struct {
	// The maximum size an upload can be in bytes. Clients SHOULD use this as a guide when uploading content. If not listed or null, the size limit should be treated as unknown.
	MUploadSize interface{} `json:"m.upload.size,omitempty"`
}

// NewGetConfig200Response instantiates a new GetConfig200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConfig200Response() *GetConfig200Response {
	this := GetConfig200Response{}
	return &this
}

// NewGetConfig200ResponseWithDefaults instantiates a new GetConfig200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConfig200ResponseWithDefaults() *GetConfig200Response {
	this := GetConfig200Response{}
	return &this
}

// GetMUploadSize returns the MUploadSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetConfig200Response) GetMUploadSize() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.MUploadSize
}

// GetMUploadSizeOk returns a tuple with the MUploadSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetConfig200Response) GetMUploadSizeOk() (*interface{}, bool) {
	if o == nil || IsNil(o.MUploadSize) {
		return nil, false
	}
	return &o.MUploadSize, true
}

// HasMUploadSize returns a boolean if a field has been set.
func (o *GetConfig200Response) HasMUploadSize() bool {
	if o != nil && IsNil(o.MUploadSize) {
		return true
	}

	return false
}

// SetMUploadSize gets a reference to the given interface{} and assigns it to the MUploadSize field.
func (o *GetConfig200Response) SetMUploadSize(v interface{}) {
	o.MUploadSize = v
}

func (o GetConfig200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetConfig200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MUploadSize != nil {
		toSerialize["m.upload.size"] = o.MUploadSize
	}
	return toSerialize, nil
}

type NullableGetConfig200Response struct {
	value *GetConfig200Response
	isSet bool
}

func (v NullableGetConfig200Response) Get() *GetConfig200Response {
	return v.value
}

func (v *NullableGetConfig200Response) Set(val *GetConfig200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConfig200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConfig200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConfig200Response(val *GetConfig200Response) *NullableGetConfig200Response {
	return &NullableGetConfig200Response{value: val, isSet: true}
}

func (v NullableGetConfig200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConfig200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
