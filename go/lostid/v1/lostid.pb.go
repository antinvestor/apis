// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.4
// 	protoc        (unknown)
// source: lostid/v1/lostid.proto

package lostidv1

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/antinvestor/apis/go/common/v1"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	interval "google.golang.org/genproto/googleapis/type/interval"
	money "google.golang.org/genproto/googleapis/type/money"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// buf:lint:ignore ENUM_VALUE_PREFIX
type ItemType int32

const (
	// buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
	ItemType_COLLECTIBLE ItemType = 0
	ItemType_SEARCH      ItemType = 1
	ItemType_TRANSACTION ItemType = 2
)

// Enum value maps for ItemType.
var (
	ItemType_name = map[int32]string{
		0: "COLLECTIBLE",
		1: "SEARCH",
		2: "TRANSACTION",
	}
	ItemType_value = map[string]int32{
		"COLLECTIBLE": 0,
		"SEARCH":      1,
		"TRANSACTION": 2,
	}
)

func (x ItemType) Enum() *ItemType {
	p := new(ItemType)
	*p = x
	return p
}

func (x ItemType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ItemType) Descriptor() protoreflect.EnumDescriptor {
	return file_lostid_v1_lostid_proto_enumTypes[0].Descriptor()
}

func (ItemType) Type() protoreflect.EnumType {
	return &file_lostid_v1_lostid_proto_enumTypes[0]
}

func (x ItemType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ItemType.Descriptor instead.
func (ItemType) EnumDescriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{0}
}

// Request to log a Collectible card
type CollectibleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        []string               `protobuf:"bytes,1,rep,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectibleRequest) Reset() {
	*x = CollectibleRequest{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectibleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectibleRequest) ProtoMessage() {}

func (x *CollectibleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectibleRequest.ProtoReflect.Descriptor instead.
func (*CollectibleRequest) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{0}
}

func (x *CollectibleRequest) GetFileId() []string {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *CollectibleRequest) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

type CollectibleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	FileId        []string               `protobuf:"bytes,2,rep,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	State         string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectibleResponse) Reset() {
	*x = CollectibleResponse{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectibleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectibleResponse) ProtoMessage() {}

func (x *CollectibleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectibleResponse.ProtoReflect.Descriptor instead.
func (*CollectibleResponse) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{1}
}

func (x *CollectibleResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CollectibleResponse) GetFileId() []string {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *CollectibleResponse) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *CollectibleResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ListCollectibleRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Range:
	//
	//	*ListCollectibleRequest_Pagination
	//	*ListCollectibleRequest_Interval
	Range         isListCollectibleRequest_Range `protobuf_oneof:"range"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectibleRequest) Reset() {
	*x = ListCollectibleRequest{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectibleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectibleRequest) ProtoMessage() {}

func (x *ListCollectibleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectibleRequest.ProtoReflect.Descriptor instead.
func (*ListCollectibleRequest) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{2}
}

func (x *ListCollectibleRequest) GetRange() isListCollectibleRequest_Range {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *ListCollectibleRequest) GetPagination() *v1.Pagination {
	if x != nil {
		if x, ok := x.Range.(*ListCollectibleRequest_Pagination); ok {
			return x.Pagination
		}
	}
	return nil
}

func (x *ListCollectibleRequest) GetInterval() *interval.Interval {
	if x != nil {
		if x, ok := x.Range.(*ListCollectibleRequest_Interval); ok {
			return x.Interval
		}
	}
	return nil
}

type isListCollectibleRequest_Range interface {
	isListCollectibleRequest_Range()
}

type ListCollectibleRequest_Pagination struct {
	Pagination *v1.Pagination `protobuf:"bytes,1,opt,name=pagination,proto3,oneof"`
}

type ListCollectibleRequest_Interval struct {
	Interval *interval.Interval `protobuf:"bytes,2,opt,name=interval,proto3,oneof"`
}

func (*ListCollectibleRequest_Pagination) isListCollectibleRequest_Range() {}

func (*ListCollectibleRequest_Interval) isListCollectibleRequest_Range() {}

type ListCollectibleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*CollectibleResponse `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectibleResponse) Reset() {
	*x = ListCollectibleResponse{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectibleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectibleResponse) ProtoMessage() {}

func (x *ListCollectibleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectibleResponse.ProtoReflect.Descriptor instead.
func (*ListCollectibleResponse) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{3}
}

func (x *ListCollectibleResponse) GetData() []*CollectibleResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Query         string                 `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	State         string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{4}
}

func (x *SearchResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchResponse) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

func (x *SearchResponse) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *SearchResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

type ProgressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          ItemType               `protobuf:"varint,2,opt,name=type,proto3,enum=lostid.v1.ItemType" json:"type,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgressRequest) Reset() {
	*x = ProgressRequest{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressRequest) ProtoMessage() {}

func (x *ProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressRequest.ProtoReflect.Descriptor instead.
func (*ProgressRequest) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{5}
}

func (x *ProgressRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProgressRequest) GetType() ItemType {
	if x != nil {
		return x.Type
	}
	return ItemType_COLLECTIBLE
}

type TransactionItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Datetime      string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	Credit        bool                   `protobuf:"varint,3,opt,name=credit,proto3" json:"credit,omitempty"`
	Amount        *money.Money           `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TransactionItem) Reset() {
	*x = TransactionItem{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TransactionItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionItem) ProtoMessage() {}

func (x *TransactionItem) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionItem.ProtoReflect.Descriptor instead.
func (*TransactionItem) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{6}
}

func (x *TransactionItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TransactionItem) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *TransactionItem) GetCredit() bool {
	if x != nil {
		return x.Credit
	}
	return false
}

func (x *TransactionItem) GetAmount() *money.Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

func (x *TransactionItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProgressItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Datetime      string                 `protobuf:"bytes,2,opt,name=datetime,proto3" json:"datetime,omitempty"`
	State         string                 `protobuf:"bytes,3,opt,name=state,proto3" json:"state,omitempty"`
	Description   string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgressItem) Reset() {
	*x = ProgressItem{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressItem) ProtoMessage() {}

func (x *ProgressItem) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressItem.ProtoReflect.Descriptor instead.
func (*ProgressItem) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{7}
}

func (x *ProgressItem) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProgressItem) GetDatetime() string {
	if x != nil {
		return x.Datetime
	}
	return ""
}

func (x *ProgressItem) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ProgressItem) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type ProgressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          ItemType               `protobuf:"varint,2,opt,name=type,proto3,enum=lostid.v1.ItemType" json:"type,omitempty"`
	Properties    map[string]string      `protobuf:"bytes,3,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	State         string                 `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	Items         []*ProgressItem        `protobuf:"bytes,5,rep,name=items,proto3" json:"items,omitempty"`
	Transactions  []*TransactionItem     `protobuf:"bytes,6,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProgressResponse) Reset() {
	*x = ProgressResponse{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgressResponse) ProtoMessage() {}

func (x *ProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgressResponse.ProtoReflect.Descriptor instead.
func (*ProgressResponse) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{8}
}

func (x *ProgressResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProgressResponse) GetType() ItemType {
	if x != nil {
		return x.Type
	}
	return ItemType_COLLECTIBLE
}

func (x *ProgressResponse) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ProgressResponse) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ProgressResponse) GetItems() []*ProgressItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ProgressResponse) GetTransactions() []*TransactionItem {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type ListSearchRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Range:
	//
	//	*ListSearchRequest_Pagination
	//	*ListSearchRequest_Interval
	Range         isListSearchRequest_Range `protobuf_oneof:"range"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSearchRequest) Reset() {
	*x = ListSearchRequest{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSearchRequest) ProtoMessage() {}

func (x *ListSearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSearchRequest.ProtoReflect.Descriptor instead.
func (*ListSearchRequest) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{9}
}

func (x *ListSearchRequest) GetRange() isListSearchRequest_Range {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *ListSearchRequest) GetPagination() *v1.Pagination {
	if x != nil {
		if x, ok := x.Range.(*ListSearchRequest_Pagination); ok {
			return x.Pagination
		}
	}
	return nil
}

func (x *ListSearchRequest) GetInterval() *interval.Interval {
	if x != nil {
		if x, ok := x.Range.(*ListSearchRequest_Interval); ok {
			return x.Interval
		}
	}
	return nil
}

type isListSearchRequest_Range interface {
	isListSearchRequest_Range()
}

type ListSearchRequest_Pagination struct {
	Pagination *v1.Pagination `protobuf:"bytes,1,opt,name=pagination,proto3,oneof"`
}

type ListSearchRequest_Interval struct {
	Interval *interval.Interval `protobuf:"bytes,2,opt,name=interval,proto3,oneof"`
}

func (*ListSearchRequest_Pagination) isListSearchRequest_Range() {}

func (*ListSearchRequest_Interval) isListSearchRequest_Range() {}

type ListSearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*SearchResponse      `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSearchResponse) Reset() {
	*x = ListSearchResponse{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSearchResponse) ProtoMessage() {}

func (x *ListSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSearchResponse.ProtoReflect.Descriptor instead.
func (*ListSearchResponse) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{10}
}

func (x *ListSearchResponse) GetData() []*SearchResponse {
	if x != nil {
		return x.Data
	}
	return nil
}

type ListTransactionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Range:
	//
	//	*ListTransactionRequest_Pagination
	//	*ListTransactionRequest_Interval
	Range         isListTransactionRequest_Range `protobuf_oneof:"range"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTransactionRequest) Reset() {
	*x = ListTransactionRequest{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionRequest) ProtoMessage() {}

func (x *ListTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionRequest.ProtoReflect.Descriptor instead.
func (*ListTransactionRequest) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{11}
}

func (x *ListTransactionRequest) GetRange() isListTransactionRequest_Range {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *ListTransactionRequest) GetPagination() *v1.Pagination {
	if x != nil {
		if x, ok := x.Range.(*ListTransactionRequest_Pagination); ok {
			return x.Pagination
		}
	}
	return nil
}

func (x *ListTransactionRequest) GetInterval() *interval.Interval {
	if x != nil {
		if x, ok := x.Range.(*ListTransactionRequest_Interval); ok {
			return x.Interval
		}
	}
	return nil
}

type isListTransactionRequest_Range interface {
	isListTransactionRequest_Range()
}

type ListTransactionRequest_Pagination struct {
	Pagination *v1.Pagination `protobuf:"bytes,1,opt,name=pagination,proto3,oneof"`
}

type ListTransactionRequest_Interval struct {
	Interval *interval.Interval `protobuf:"bytes,2,opt,name=interval,proto3,oneof"`
}

func (*ListTransactionRequest_Pagination) isListTransactionRequest_Range() {}

func (*ListTransactionRequest_Interval) isListTransactionRequest_Range() {}

type ListTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []*TransactionItem     `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTransactionResponse) Reset() {
	*x = ListTransactionResponse{}
	mi := &file_lostid_v1_lostid_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTransactionResponse) ProtoMessage() {}

func (x *ListTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_lostid_v1_lostid_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTransactionResponse.ProtoReflect.Descriptor instead.
func (*ListTransactionResponse) Descriptor() ([]byte, []int) {
	return file_lostid_v1_lostid_proto_rawDescGZIP(), []int{12}
}

func (x *ListTransactionResponse) GetData() []*TransactionItem {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_lostid_v1_lostid_proto protoreflect.FileDescriptor

var file_lostid_v1_lostid_proto_rawDesc = string([]byte{
	0x0a, 0x16, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2f, 0x76, 0x31, 0x2f, 0x6c, 0x6f, 0x73, 0x74,
	0x69, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64,
	0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74,
	0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74,
	0x79, 0x70, 0x65, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x2f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76,
	0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x01, 0x0a, 0x12,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x42, 0x24, 0xba, 0x48, 0x21, 0x92, 0x01, 0x1e, 0x08, 0x01, 0x10, 0x05, 0x22,
	0x18, 0x72, 0x16, 0x10, 0x03, 0x18, 0x28, 0x32, 0x10, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x7a,
	0x5f, 0x2d, 0x5d, 0x7b, 0x33, 0x2c, 0x32, 0x30, 0x7d, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x12, 0x4d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xe3, 0x01, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x4e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x96, 0x01, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x33, 0x0a, 0x08, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76,
	0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x42, 0x0e,
	0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x4d,
	0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xd6, 0x01,
	0x0a, 0x0e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x49, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x6c, 0x6f, 0x73,
	0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x71, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x1b, 0xba, 0x48, 0x18, 0x72, 0x16, 0x10, 0x03, 0x18, 0x28,
	0x32, 0x10, 0x5b, 0x30, 0x2d, 0x39, 0x61, 0x2d, 0x7a, 0x5f, 0x2d, 0x5d, 0x7b, 0x33, 0x2c, 0x32,
	0x30, 0x7d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xba, 0x48, 0x05, 0x82, 0x01,
	0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x0f, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x65,
	0x64, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x63, 0x72, 0x65, 0x64, 0x69,
	0x74, 0x12, 0x2a, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x72, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0xdc, 0x02, 0x0a, 0x10, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e,
	0x76, 0x31, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x3e, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6c, 0x6f, 0x73, 0x74,
	0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x91, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69,
	0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70,
	0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x42, 0x0e, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12,
	0x05, 0xba, 0x48, 0x02, 0x08, 0x01, 0x22, 0x43, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6c, 0x6f, 0x73,
	0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x96, 0x01, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x33, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x74, 0x79, 0x70, 0x65, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x76, 0x61, 0x6c, 0x42, 0x0e, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x05, 0xba,
	0x48, 0x02, 0x08, 0x01, 0x22, 0x49, 0x0a, 0x17, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a,
	0x38, 0x0a, 0x08, 0x49, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x43,
	0x4f, 0x4c, 0x4c, 0x45, 0x43, 0x54, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x52, 0x41, 0x4e,
	0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x32, 0xe2, 0x04, 0x0a, 0x0d, 0x4c, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x65, 0x0a, 0x0b, 0x43,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x2e, 0x6c, 0x6f, 0x73,
	0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x6c, 0x6f, 0x73, 0x74,
	0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x11, 0x3a, 0x01, 0x2a, 0x22, 0x0c, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62,
	0x6c, 0x65, 0x12, 0x70, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x21, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x62,
	0x6c, 0x65, 0x30, 0x01, 0x12, 0x4e, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69,
	0x64, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x0f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x09, 0x12, 0x07, 0x2f, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x5e, 0x0a, 0x0a, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x1c, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0b, 0x12, 0x09, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x65, 0x73, 0x30, 0x01, 0x12, 0x56, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1a, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x6c,
	0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x11, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x0b, 0x12, 0x09, 0x2f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x70, 0x0a, 0x0f,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x21, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x14, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c,
	0x2f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x30, 0x01, 0x42, 0xb2,
	0x03, 0x92, 0x41, 0x82, 0x02, 0x12, 0x6f, 0x0a, 0x0f, 0x4c, 0x6f, 0x73, 0x74, 0x20, 0x49, 0x44,
	0x20, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x22, 0x57, 0x0a, 0x10, 0x41, 0x6e, 0x74, 0x20,
	0x49, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x20, 0x4c, 0x74, 0x64, 0x12, 0x2d, 0x68, 0x74,
	0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2d, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x1a, 0x14, 0x69, 0x6e, 0x66,
	0x6f, 0x40, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f,
	0x6d, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x59,
	0x0a, 0x57, 0x0a, 0x06, 0x62, 0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x4d, 0x08, 0x02, 0x12, 0x38,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x2c, 0x20, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x65, 0x64, 0x20, 0x62,
	0x79, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x3a, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72,
	0x20, 0x3c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x3e, 0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02, 0x62, 0x0c, 0x0a, 0x0a, 0x0a, 0x06, 0x62,
	0x65, 0x61, 0x72, 0x65, 0x72, 0x12, 0x00, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x2e, 0x61, 0x6e, 0x74,
	0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x6c, 0x6f,
	0x73, 0x74, 0x69, 0x64, 0x2e, 0x76, 0x31, 0x42, 0x0b, 0x4c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x74, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x2f, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2f, 0x6c, 0x6f,
	0x73, 0x74, 0x69, 0x64, 0x2f, 0x76, 0x31, 0x3b, 0x6c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x76, 0x31,
	0xa2, 0x02, 0x03, 0x4c, 0x58, 0x58, 0xaa, 0x02, 0x09, 0x4c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x2e,
	0x56, 0x31, 0xca, 0x02, 0x09, 0x4c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x5c, 0x56, 0x31, 0xe2, 0x02,
	0x15, 0x4c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x5c, 0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x0a, 0x4c, 0x6f, 0x73, 0x74, 0x69, 0x64, 0x3a,
	0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_lostid_v1_lostid_proto_rawDescOnce sync.Once
	file_lostid_v1_lostid_proto_rawDescData []byte
)

func file_lostid_v1_lostid_proto_rawDescGZIP() []byte {
	file_lostid_v1_lostid_proto_rawDescOnce.Do(func() {
		file_lostid_v1_lostid_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_lostid_v1_lostid_proto_rawDesc), len(file_lostid_v1_lostid_proto_rawDesc)))
	})
	return file_lostid_v1_lostid_proto_rawDescData
}

var file_lostid_v1_lostid_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_lostid_v1_lostid_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_lostid_v1_lostid_proto_goTypes = []any{
	(ItemType)(0),                   // 0: lostid.v1.ItemType
	(*CollectibleRequest)(nil),      // 1: lostid.v1.CollectibleRequest
	(*CollectibleResponse)(nil),     // 2: lostid.v1.CollectibleResponse
	(*ListCollectibleRequest)(nil),  // 3: lostid.v1.ListCollectibleRequest
	(*ListCollectibleResponse)(nil), // 4: lostid.v1.ListCollectibleResponse
	(*SearchResponse)(nil),          // 5: lostid.v1.SearchResponse
	(*ProgressRequest)(nil),         // 6: lostid.v1.ProgressRequest
	(*TransactionItem)(nil),         // 7: lostid.v1.TransactionItem
	(*ProgressItem)(nil),            // 8: lostid.v1.ProgressItem
	(*ProgressResponse)(nil),        // 9: lostid.v1.ProgressResponse
	(*ListSearchRequest)(nil),       // 10: lostid.v1.ListSearchRequest
	(*ListSearchResponse)(nil),      // 11: lostid.v1.ListSearchResponse
	(*ListTransactionRequest)(nil),  // 12: lostid.v1.ListTransactionRequest
	(*ListTransactionResponse)(nil), // 13: lostid.v1.ListTransactionResponse
	nil,                             // 14: lostid.v1.CollectibleRequest.PropertiesEntry
	nil,                             // 15: lostid.v1.CollectibleResponse.PropertiesEntry
	nil,                             // 16: lostid.v1.SearchResponse.PropertiesEntry
	nil,                             // 17: lostid.v1.ProgressResponse.PropertiesEntry
	(*v1.Pagination)(nil),           // 18: common.v1.Pagination
	(*interval.Interval)(nil),       // 19: google.type.Interval
	(*money.Money)(nil),             // 20: google.type.Money
	(*v1.SearchRequest)(nil),        // 21: common.v1.SearchRequest
}
var file_lostid_v1_lostid_proto_depIdxs = []int32{
	14, // 0: lostid.v1.CollectibleRequest.properties:type_name -> lostid.v1.CollectibleRequest.PropertiesEntry
	15, // 1: lostid.v1.CollectibleResponse.properties:type_name -> lostid.v1.CollectibleResponse.PropertiesEntry
	18, // 2: lostid.v1.ListCollectibleRequest.pagination:type_name -> common.v1.Pagination
	19, // 3: lostid.v1.ListCollectibleRequest.interval:type_name -> google.type.Interval
	2,  // 4: lostid.v1.ListCollectibleResponse.data:type_name -> lostid.v1.CollectibleResponse
	16, // 5: lostid.v1.SearchResponse.properties:type_name -> lostid.v1.SearchResponse.PropertiesEntry
	0,  // 6: lostid.v1.ProgressRequest.type:type_name -> lostid.v1.ItemType
	20, // 7: lostid.v1.TransactionItem.amount:type_name -> google.type.Money
	0,  // 8: lostid.v1.ProgressResponse.type:type_name -> lostid.v1.ItemType
	17, // 9: lostid.v1.ProgressResponse.properties:type_name -> lostid.v1.ProgressResponse.PropertiesEntry
	8,  // 10: lostid.v1.ProgressResponse.items:type_name -> lostid.v1.ProgressItem
	7,  // 11: lostid.v1.ProgressResponse.transactions:type_name -> lostid.v1.TransactionItem
	18, // 12: lostid.v1.ListSearchRequest.pagination:type_name -> common.v1.Pagination
	19, // 13: lostid.v1.ListSearchRequest.interval:type_name -> google.type.Interval
	5,  // 14: lostid.v1.ListSearchResponse.data:type_name -> lostid.v1.SearchResponse
	18, // 15: lostid.v1.ListTransactionRequest.pagination:type_name -> common.v1.Pagination
	19, // 16: lostid.v1.ListTransactionRequest.interval:type_name -> google.type.Interval
	7,  // 17: lostid.v1.ListTransactionResponse.data:type_name -> lostid.v1.TransactionItem
	1,  // 18: lostid.v1.LostIdService.Collectible:input_type -> lostid.v1.CollectibleRequest
	3,  // 19: lostid.v1.LostIdService.ListCollectible:input_type -> lostid.v1.ListCollectibleRequest
	21, // 20: lostid.v1.LostIdService.Search:input_type -> common.v1.SearchRequest
	10, // 21: lostid.v1.LostIdService.ListSearch:input_type -> lostid.v1.ListSearchRequest
	6,  // 22: lostid.v1.LostIdService.Progress:input_type -> lostid.v1.ProgressRequest
	12, // 23: lostid.v1.LostIdService.ListTransaction:input_type -> lostid.v1.ListTransactionRequest
	2,  // 24: lostid.v1.LostIdService.Collectible:output_type -> lostid.v1.CollectibleResponse
	4,  // 25: lostid.v1.LostIdService.ListCollectible:output_type -> lostid.v1.ListCollectibleResponse
	5,  // 26: lostid.v1.LostIdService.Search:output_type -> lostid.v1.SearchResponse
	11, // 27: lostid.v1.LostIdService.ListSearch:output_type -> lostid.v1.ListSearchResponse
	9,  // 28: lostid.v1.LostIdService.Progress:output_type -> lostid.v1.ProgressResponse
	13, // 29: lostid.v1.LostIdService.ListTransaction:output_type -> lostid.v1.ListTransactionResponse
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_lostid_v1_lostid_proto_init() }
func file_lostid_v1_lostid_proto_init() {
	if File_lostid_v1_lostid_proto != nil {
		return
	}
	file_lostid_v1_lostid_proto_msgTypes[2].OneofWrappers = []any{
		(*ListCollectibleRequest_Pagination)(nil),
		(*ListCollectibleRequest_Interval)(nil),
	}
	file_lostid_v1_lostid_proto_msgTypes[9].OneofWrappers = []any{
		(*ListSearchRequest_Pagination)(nil),
		(*ListSearchRequest_Interval)(nil),
	}
	file_lostid_v1_lostid_proto_msgTypes[11].OneofWrappers = []any{
		(*ListTransactionRequest_Pagination)(nil),
		(*ListTransactionRequest_Interval)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_lostid_v1_lostid_proto_rawDesc), len(file_lostid_v1_lostid_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_lostid_v1_lostid_proto_goTypes,
		DependencyIndexes: file_lostid_v1_lostid_proto_depIdxs,
		EnumInfos:         file_lostid_v1_lostid_proto_enumTypes,
		MessageInfos:      file_lostid_v1_lostid_proto_msgTypes,
	}.Build()
	File_lostid_v1_lostid_proto = out.File
	file_lostid_v1_lostid_proto_goTypes = nil
	file_lostid_v1_lostid_proto_depIdxs = nil
}
