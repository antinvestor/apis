{
  "swagger": "2.0",
  "info": {
    "title": "Lost ID Service",
    "version": "1.0",
    "contact": {
      "name": "Ant Investor Ltd",
      "url": "https://github.com/antinvestor/service-lostid",
      "email": "info@antinvestor.com"
    }
  },
  "tags": [
    {
      "name": "lostid.v1.LostIdService"
    }
  ],
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/collectible": {
      "get": {
        "operationId": "LostIdService_ListCollectible",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/lostid.v1.ListCollectibleResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of lostid.v1.ListCollectibleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval.startTime",
            "description": "Optional. Inclusive start of the interval.\n\nIf specified, a Timestamp matching this interval will have to be the same\nor after the start.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "interval.endTime",
            "description": "Optional. Exclusive end of the interval.\n\nIf specified, a Timestamp matching this interval will have to be before the\nend.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "lostid.v1.LostIdService"
        ]
      },
      "post": {
        "summary": "Log a new Collectible request",
        "operationId": "LostIdService_Collectible",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/lostid.v1.CollectibleResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/lostid.v1.CollectibleRequest"
            }
          }
        ],
        "tags": [
          "lostid.v1.LostIdService"
        ]
      }
    },
    "/progress": {
      "get": {
        "operationId": "LostIdService_Progress",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/lostid.v1.ProgressResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "description": " - COLLECTIBLE: buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "COLLECTIBLE",
              "SEARCH",
              "TRANSACTION"
            ],
            "default": "COLLECTIBLE"
          }
        ],
        "tags": [
          "lostid.v1.LostIdService"
        ]
      }
    },
    "/search": {
      "get": {
        "summary": "Log a new search request",
        "operationId": "LostIdService_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/lostid.v1.SearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "idQuery",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limits.count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limits.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "limits.startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "limits.endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "properties",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "extras",
            "description": "This is a request variable of the map type. The query format is \"map_name[key]=value\", e.g. If the map name is Age, the key type is string, and the value type is integer, the query parameter is expressed as Age[\"bob\"]=18",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "lostid.v1.LostIdService"
        ]
      }
    },
    "/searches": {
      "get": {
        "operationId": "LostIdService_ListSearch",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/lostid.v1.ListSearchResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of lostid.v1.ListSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval.startTime",
            "description": "Optional. Inclusive start of the interval.\n\nIf specified, a Timestamp matching this interval will have to be the same\nor after the start.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "interval.endTime",
            "description": "Optional. Exclusive end of the interval.\n\nIf specified, a Timestamp matching this interval will have to be before the\nend.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "lostid.v1.LostIdService"
        ]
      }
    },
    "/transaction": {
      "get": {
        "operationId": "LostIdService_ListTransaction",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/lostid.v1.ListTransactionResponse"
                },
                "error": {
                  "$ref": "#/definitions/google.rpc.Status"
                }
              },
              "title": "Stream result of lostid.v1.ListTransactionResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "pagination.count",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.page",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pagination.startDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "pagination.endDate",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "interval.startTime",
            "description": "Optional. Inclusive start of the interval.\n\nIf specified, a Timestamp matching this interval will have to be the same\nor after the start.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "interval.endTime",
            "description": "Optional. Exclusive end of the interval.\n\nIf specified, a Timestamp matching this interval will have to be before the\nend.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          }
        ],
        "tags": [
          "lostid.v1.LostIdService"
        ]
      }
    }
  },
  "definitions": {
    "common.v1.Pagination": {
      "type": "object",
      "properties": {
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "page": {
          "type": "integer",
          "format": "int32"
        },
        "startDate": {
          "type": "string"
        },
        "endDate": {
          "type": "string"
        }
      }
    },
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "google.type.Interval": {
      "type": "object",
      "properties": {
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "Optional. Inclusive start of the interval.\n\nIf specified, a Timestamp matching this interval will have to be the same\nor after the start."
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "Optional. Exclusive end of the interval.\n\nIf specified, a Timestamp matching this interval will have to be before the\nend."
        }
      },
      "description": "Represents a time interval, encoded as a Timestamp start (inclusive) and a\nTimestamp end (exclusive).\n\nThe start must be less than or equal to the end.\nWhen the start equals the end, the interval is empty (matches no time).\nWhen both start and end are unspecified, the interval matches any time."
    },
    "google.type.Money": {
      "type": "object",
      "properties": {
        "currencyCode": {
          "type": "string",
          "description": "The three-letter currency code defined in ISO 4217."
        },
        "units": {
          "type": "string",
          "format": "int64",
          "description": "The whole units of the amount.\nFor example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar."
        },
        "nanos": {
          "type": "integer",
          "format": "int32",
          "description": "Number of nano (10^-9) units of the amount.\nThe value must be between -999,999,999 and +999,999,999 inclusive.\nIf `units` is positive, `nanos` must be positive or zero.\nIf `units` is zero, `nanos` can be positive, zero, or negative.\nIf `units` is negative, `nanos` must be negative or zero.\nFor example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000."
        }
      },
      "description": "Represents an amount of money with its currency type."
    },
    "lostid.v1.CollectibleRequest": {
      "type": "object",
      "properties": {
        "fileId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "Request to log a Collectible card"
    },
    "lostid.v1.CollectibleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "fileId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        }
      }
    },
    "lostid.v1.ItemType": {
      "type": "string",
      "enum": [
        "COLLECTIBLE",
        "SEARCH",
        "TRANSACTION"
      ],
      "default": "COLLECTIBLE",
      "description": "- COLLECTIBLE: buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX",
      "title": "buf:lint:ignore ENUM_VALUE_PREFIX"
    },
    "lostid.v1.ListCollectibleResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lostid.v1.CollectibleResponse"
          }
        }
      }
    },
    "lostid.v1.ListSearchResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lostid.v1.SearchResponse"
          }
        }
      }
    },
    "lostid.v1.ListTransactionResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lostid.v1.TransactionItem"
          }
        }
      }
    },
    "lostid.v1.ProgressItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "datetime": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "lostid.v1.ProgressResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/lostid.v1.ItemType"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lostid.v1.ProgressItem"
          }
        },
        "transactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/lostid.v1.TransactionItem"
          }
        }
      }
    },
    "lostid.v1.SearchResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "query": {
          "type": "string"
        },
        "properties": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "state": {
          "type": "string"
        }
      }
    },
    "lostid.v1.TransactionItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "datetime": {
          "type": "string"
        },
        "credit": {
          "type": "boolean"
        },
        "amount": {
          "$ref": "#/definitions/google.type.Money"
        },
        "description": {
          "type": "string"
        }
      }
    }
  },
  "securityDefinitions": {
    "bearer": {
      "type": "apiKey",
      "description": "Authentication token, prefixed by Bearer: Bearer \u003ctoken\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "bearer": []
    }
  ]
}
