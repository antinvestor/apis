name: Dependabot Auto-Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: github.actor == 'dependabot[bot]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          cache: false

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run Go tests
        run: |
          # Test all Go modules
          for dir in go/*/; do
            if [ -f "$dir/go.mod" ]; then
              echo "Testing $dir"
              cd "$dir"
              go mod download
              go test -v ./...
              cd - > /dev/null
            fi
          done

      - name: Run Java tests
        run: |
          cd java
          ./gradlew test --no-daemon
          cd ..

      - name: Check if PR is for minor/patch updates
        id: check-update-type
        run: |
          # Get PR title and check if it's a minor or patch update
          PR_TITLE="${{ github.event.pull_request.title }}"
          echo "PR Title: $PR_TITLE"
          
          # Check for patch/minor updates (common patterns)
          if echo "$PR_TITLE" | grep -E "(bump|update).*from.*to.*" | grep -E "\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$" || \
             echo "$PR_TITLE" | grep -E "patch|minor" || \
             echo "$PR_TITLE" | grep -vE "major|breaking"; then
            echo "auto_merge=true" >> $GITHUB_OUTPUT
            echo "This appears to be a patch/minor update - eligible for auto-merge"
          else
            echo "auto_merge=false" >> $GITHUB_OUTPUT
            echo "This appears to be a major update - requires manual review"
          fi

      - name: Wait for status checks
        if: steps.check-update-type.outputs.auto_merge == 'true'
        run: |
          # Wait a bit for checks to start
          sleep 30
          
          # Check if all required status checks pass
          gh pr checks ${{ github.event.pull_request.number }} --watch --interval 30
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable auto-merge
        if: steps.check-update-type.outputs.auto_merge == 'true'
        run: |
          gh pr merge ${{ github.event.pull_request.number }} --auto --squash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Add comment for major updates
        if: steps.check-update-type.outputs.auto_merge == 'false'
        run: |
          gh pr comment ${{ github.event.pull_request.number }} --body "ðŸš¨ This appears to be a major version update. Please review manually before merging."
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
