// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package settings.v1;

import "buf/validate/validate.proto";

option go_package = "github.com/antinvestor/apis/go/settings/v1;settingsv1";
option java_multiple_files = true;
option java_package = "settingsv1";

message Setting {
  string name = 1 [(buf.validate.field).string.min_len = 2];
  string object = 2 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 2
  ];
  string object_id = 3 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string lang = 4 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 2
  ];
  string module = 5 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3
  ];
}

message SettingObject {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  Setting key = 2;
  string value = 3;
  string updated = 4;
}

message GetRequest {
  Setting key = 1;
}

message GetResponse {
  SettingObject data = 1;
}

message ListRequest {
  Setting key = 1;
}

message ListResponse {
  repeated SettingObject data = 1;
}

message SetRequest {
  Setting key = 1;
  string value = 2;
}

message SetResponse {
  SettingObject data = 1;
}

service SettingsService {
  // Gets a single setting and its stored value
  rpc Get(GetRequest) returns (GetResponse);
  // Pulls all setting values that match some criteria in the name & any other setting properties
  rpc List(ListRequest) returns (stream ListResponse);

  rpc Set(SetRequest) returns (SetResponse);
}
