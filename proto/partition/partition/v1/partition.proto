// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package partition.v1;

// -----------------------------------------------------
// Core notes (normative):
// - Partition Service provides multi-tenancy and data isolation
// - Tenants contain hierarchical partitions for organizational structure
// - Role-based access control (RBAC) with partition and access roles
// - Custom pages for partition-specific UI customization
// - Profile-based access grants with role assignments
// - All timestamps are RFC3339 / google.protobuf.Timestamp
// -----------------------------------------------------

import "buf/validate/validate.proto";
import "common/v1/common.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "gnostic/openapi/v3/annotations.proto";

option go_package = "github.com/antinvestor/apis/go/partition/v1;partitionv1";
option java_multiple_files = true;
option java_package = "partitionv1";

option (gnostic.openapi.v3.document) = {
  info: {
    title: "Partition Service";
    version: "v1.0.0";
    description: "The Partition Service provides multi-tenancy and data isolation capabilities with hierarchical partitions, role-based access control (RBAC), and custom UI pages. Tenants represent top-level organizational units containing hierarchical partitions for departments, projects, or teams. The service supports fine-grained access control through partition roles and access grants, enabling secure multi-tenant applications with customizable user experiences.";
    contact: {
      name: "Ant Investor Ltd";
      url: "https://github.com/antinvestor/service-partition";
      email: "info@antinvestor.com";
    }
    license: {
      name: "Apache License";
      url: "https://github.com/antinvestor/apis/blob/master/LICENSE";
    }
  }
  components: {
    security_schemes: {
      additional_properties: [
        {
          name: "BearerAuth";
          value: {
            security_scheme: {
              type: "http";
              scheme: "bearer";
              bearer_format: "JWT";
            }
          }
        }
      ]
    }
  }
};

// -----------------------------------------------------
// Core Data Types
// -----------------------------------------------------

// TenantObject represents a top-level organizational unit.
message TenantObject {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Unique tenant ID
  string name = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];                    // Tenant name (organization, company)
  string description = 3 [
    (buf.validate.field).string.min_len = 10,
    (buf.validate.field).string.max_len = 500
  ];                    // Tenant description
  google.protobuf.Struct properties = 4;        // Additional tenant metadata
  google.protobuf.Timestamp created_at = 5;     // Creation timestamp
  common.v1.STATE state = 6;                    // Tenant state
}

//Request to create a new partition
message PartitionCreateRequest {
  string name = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];
  string tenant_id = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string parent_id = 3 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string description = 4 [
    (buf.validate.field).string.min_len = 10,
    (buf.validate.field).string.max_len = 250
  ];
  google.protobuf.Struct properties = 5;
}

message GetTenantRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message GetTenantResponse {
  TenantObject data = 1;
}

message ListTenantRequest {
  string query = 1;
  int64 page = 2;
  int32 count = 3;
  string start_date = 4;
  string end_date = 5;
  repeated string properties = 6;
  google.protobuf.Struct extras = 7;
}

message ListTenantResponse {
  repeated TenantObject data = 1;
}

//Request to create new tenancy
message CreateTenantRequest {
  string name = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];
  string description = 2 [
    (buf.validate.field).string.min_len = 10,
    (buf.validate.field).string.max_len = 500
  ];
  google.protobuf.Struct properties = 3;
}

message CreateTenantResponse {
  TenantObject data = 1;
}

message UpdateTenantRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string name = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];
  string description = 3 [
    (buf.validate.field).string.min_len = 10,
    (buf.validate.field).string.max_len = 500
  ];
  common.v1.STATE state = 4;
  google.protobuf.Struct properties = 5;
}

message UpdateTenantResponse {
  TenantObject data = 1;
}

message GetPartitionRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message GetPartitionResponse {
  PartitionObject data = 1;
}

message GetPartitionParentsRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message GetPartitionParentsResponse {
  repeated PartitionObject data = 1;
}

message ListPartitionRequest {
  string query = 1;
  int64 page = 2;
  int32 count = 3;
  string start_date = 4;
  string end_date = 5;
  repeated string properties = 6;
  google.protobuf.Struct extras = 7;
}

message ListPartitionResponse {
  repeated PartitionObject data = 1;
}

//Request to create new partition
message CreatePartitionRequest {
  string tenant_id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string parent_id = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string name = 3 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];
  string description = 4 [
    (buf.validate.field).string.min_len = 10,
    (buf.validate.field).string.max_len = 500
  ];
  google.protobuf.Struct properties = 5;
}

message CreatePartitionResponse {
  PartitionObject data = 1;
}

message UpdatePartitionRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string name = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];
  string description = 3 [
    (buf.validate.field).string.min_len = 10,
    (buf.validate.field).string.max_len = 500
  ];
  common.v1.STATE state = 4;
  google.protobuf.Struct properties = 5;
}

message UpdatePartitionResponse {
  PartitionObject data = 1;
}

// PartitionObject represents a data partition within a tenant.
message PartitionObject {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Unique partition ID
  string name = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];                    // Partition name (department, project, team)
  string tenant_id = 3 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Parent tenant ID
  string parent_id = 4 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Parent partition ID for hierarchical structure
  string description = 5 [
    (buf.validate.field).string.min_len = 10,
    (buf.validate.field).string.max_len = 500
  ];                    // Partition description
  common.v1.STATE state = 6;                    // Partition state
  google.protobuf.Struct properties = 7;        // Additional partition metadata
  google.protobuf.Timestamp created_at = 8;     // Creation timestamp
}

// PartitionRoleObject represents a role within a partition.
message PartitionRoleObject {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Unique role ID
  string partition_id = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Associated partition ID
  string name = 3 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];                    // Role name (admin, editor, viewer, etc.)
  google.protobuf.Struct properties = 4;        // Role permissions and metadata
  google.protobuf.Timestamp created_at = 5;     // Creation timestamp
  common.v1.STATE state = 6;                    // Role state
}

// PageObject represents a custom UI page for a partition.
message PageObject {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Unique page ID
  string name = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];                    // Page name
  string html = 3 [
    (buf.validate.field).string.min_len = 4,
    (buf.validate.field).string.max_len = 5000
  ];                    // HTML content for the page
  common.v1.STATE state = 4;                    // Page state
  google.protobuf.Timestamp created_at = 5;     // Creation timestamp
  google.protobuf.Struct properties = 6;        // Additional page metadata
}

// AccessObject represents a profile's access to a partition.
message AccessObject {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Unique access ID
  string profile_id = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Profile ID with access
  PartitionObject partition = 3;                // Partition being accessed
  common.v1.STATE state = 4;                    // Access state
  google.protobuf.Timestamp created_at = 5;     // Access grant timestamp
}

// AccessRoleObject links an access grant to a partition role.
message AccessRoleObject {
  string access_role_id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Unique access role ID
  string access_id = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];                    // Associated access ID
  PartitionRoleObject role = 3;                 // Assigned partition role
}

// -----------------------------------------------------
// Request/Response Messages
// -----------------------------------------------------

message CreatePartitionRoleRequest {
  string partition_id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string name = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];
  google.protobuf.Struct properties = 3;
}

message CreatePartitionRoleResponse {
  PartitionRoleObject data = 1;
}

message RemovePartitionRoleRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message RemovePartitionRoleResponse {
  bool succeeded = 1;
}

message ListPartitionRoleRequest {
  string partition_id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message ListPartitionRoleResponse {
  repeated PartitionRoleObject role = 1;
}

message CreatePageRequest {
  string partition_id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string name = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];
  string html = 3 [
    (buf.validate.field).string.min_len = 4,
    (buf.validate.field).string.max_len = 5000
  ];
}

message CreatePageResponse {
  PageObject data = 1;
}

message GetPageRequest {
  string page_id = 1 [
    (buf.validate.field).ignore = IGNORE_IF_ZERO_VALUE,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string partition_id = 2 [
    (buf.validate.field).ignore = IGNORE_IF_ZERO_VALUE,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string name = 3 [
    (buf.validate.field).ignore = IGNORE_IF_ZERO_VALUE,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 100
  ];
}

message GetPageResponse {
  PageObject data = 1;
}

message RemovePageRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message RemovePageResponse {
  bool succeeded = 1;
}

message CreateAccessRequest {
  oneof partition {
    option (buf.validate.oneof).required = false;

    string partition_id = 1 [
      (buf.validate.field).ignore = IGNORE_IF_ZERO_VALUE,
      (buf.validate.field).string.min_len = 3,
      (buf.validate.field).string.max_len = 40,
      (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
    ];

    string client_id = 3 [
      (buf.validate.field).ignore = IGNORE_IF_ZERO_VALUE,
      (buf.validate.field).string.min_len = 3,
      (buf.validate.field).string.max_len = 40,
      (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
    ];
  }

  string profile_id = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message CreateAccessResponse {
  AccessObject data = 1;
}

message GetAccessRequest {
  string access_id = 1 [
    (buf.validate.field).ignore = IGNORE_IF_ZERO_VALUE,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];

  oneof partition {
    option (buf.validate.oneof).required = false;

    string partition_id = 2 [
      (buf.validate.field).ignore = IGNORE_IF_ZERO_VALUE,
      (buf.validate.field).string.min_len = 3,
      (buf.validate.field).string.max_len = 40,
      (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
    ];

    string client_id = 3 [
      (buf.validate.field).ignore = IGNORE_IF_ZERO_VALUE,
      (buf.validate.field).string.min_len = 3,
      (buf.validate.field).string.max_len = 40,
      (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
    ];
  }

  string profile_id = 4 [
    (buf.validate.field).ignore = IGNORE_IF_ZERO_VALUE,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message GetAccessResponse {
  AccessObject data = 1;
}

message RemoveAccessRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message RemoveAccessResponse {
  bool succeeded = 1;
}

message CreateAccessRoleRequest {
  string access_id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string partition_role_id = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message CreateAccessRoleResponse {
  AccessRoleObject data = 1;
}

message RemoveAccessRoleRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message RemoveAccessRoleResponse {
  bool succeeded = 1;
}

message ListAccessRoleRequest {
  string access_id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message ListAccessRoleResponse {
  repeated AccessRoleObject role = 1;
}

// -----------------------------------------------------
// Partition Service
// -----------------------------------------------------

// PartitionService provides multi-tenancy and data isolation.
// All RPCs require authentication via Bearer token.
service PartitionService {
  // GetTenant retrieves a tenant by ID.
  rpc GetTenant(GetTenantRequest) returns (GetTenantResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "getTenant"
      summary: "Get tenant"
      description: "Retrieves a tenant by its unique identifier including all tenant metadata and properties."
      tags: "Tenants"
    };
  }

  // ListTenant retrieves all tenants matching criteria.
  rpc ListTenant(ListTenantRequest) returns (stream ListTenantResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "listTenants"
      summary: "List tenants"
      description: "Lists all tenants in the system with optional filtering by query, date range, and properties. Returns a stream of tenants."
      tags: "Tenants"
    };
  }

  // CreateTenant creates a new tenant.
  rpc CreateTenant(CreateTenantRequest) returns (CreateTenantResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "createTenant"
      summary: "Create tenant"
      description: "Creates a new tenant (top-level organizational unit) with name, description, and custom properties."
      tags: "Tenants"
    };
  }

  // UpdateTenant updates an existing tenant.
  rpc UpdateTenant(UpdateTenantRequest) returns (UpdateTenantResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "updateTenant"
      summary: "Update tenant"
      description: "Updates an existing tenant's name, description, state, and properties."
      tags: "Tenants"
    };
  }

  // ListPartition retrieves all partitions matching criteria.
  rpc ListPartition(ListPartitionRequest) returns (stream ListPartitionResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "listPartitions"
      summary: "List partitions"
      description: "Lists all partitions in the system with optional filtering by query, date range, and properties. Returns a stream of partitions."
      tags: "Partitions"
    };
  }

  // CreatePartition creates a new partition.
  rpc CreatePartition(CreatePartitionRequest) returns (CreatePartitionResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "createPartition"
      summary: "Create partition"
      description: "Creates a new partition within a tenant. Supports hierarchical structures with parent partitions."
      tags: "Partitions"
    };
  }

  // GetPartition retrieves a partition by ID.
  rpc GetPartition(GetPartitionRequest) returns (GetPartitionResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "getPartition"
      summary: "Get partition"
      description: "Retrieves a partition by its unique identifier including all partition metadata and properties."
      tags: "Partitions"
    };
  }

  // GetPartitionParents retrieves the parent hierarchy.
  rpc GetPartitionParents(GetPartitionParentsRequest) returns (GetPartitionParentsResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "getPartitionParents"
      summary: "Get partition parents"
      description: "Retrieves the complete parent hierarchy for a partition from the root tenant down to the partition."
      tags: "Partitions"
    };
  }

  // UpdatePartition updates an existing partition.
  rpc UpdatePartition(UpdatePartitionRequest) returns (UpdatePartitionResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "updatePartition"
      summary: "Update partition"
      description: "Updates an existing partition's name, description, state, and properties."
      tags: "Partitions"
    };
  }

  // CreatePartitionRole creates a role within a partition.
  rpc CreatePartitionRole(CreatePartitionRoleRequest) returns (CreatePartitionRoleResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "createPartitionRole"
      summary: "Create partition role"
      description: "Creates a new role within a partition for access control (admin, editor, viewer, etc.)."
      tags: "Roles"
    };
  }

  // ListPartitionRole retrieves all roles for a partition.
  rpc ListPartitionRole(ListPartitionRoleRequest) returns (stream ListPartitionRoleResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "listPartitionRoles"
      summary: "List partition roles"
      description: "Lists all roles available for a specific partition. Returns a stream of partition roles."
      tags: "Roles"
    };
  }

  // RemovePartitionRole deletes a partition role.
  rpc RemovePartitionRole(RemovePartitionRoleRequest) returns (RemovePartitionRoleResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "removePartitionRole"
      summary: "Remove partition role"
      description: "Removes a partition role. All access grants using this role must be removed first."
      tags: "Roles"
    };
  }

  // CreatePage creates a custom UI page for a partition.
  rpc CreatePage(CreatePageRequest) returns (CreatePageResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "createPage"
      summary: "Create custom page"
      description: "Creates a custom UI page for a partition with HTML content. Enables partition-specific branding and customization."
      tags: "Pages"
    };
  }

  // GetPage retrieves a custom page.
  rpc GetPage(GetPageRequest) returns (GetPageResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "getPage"
      summary: "Get custom page"
      description: "Retrieves a custom page by page ID, partition ID, or page name."
      tags: "Pages"
    };
  }

  // RemovePage deletes a custom page.
  rpc RemovePage(RemovePageRequest) returns (RemovePageResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "removePage"
      summary: "Remove custom page"
      description: "Removes a custom page from a partition."
      tags: "Pages"
    };
  }

  // CreateAccess grants a profile access to a partition.
  rpc CreateAccess(CreateAccessRequest) returns (CreateAccessResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "createAccess"
      summary: "Create access grant"
      description: "Grants a profile access to a partition. The profile can then be assigned roles via CreateAccessRole."
      tags: "Access"
    };
  }

  // GetAccess retrieves an access grant.
  rpc GetAccess(GetAccessRequest) returns (GetAccessResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "getAccess"
      summary: "Get access grant"
      description: "Retrieves an access grant by access ID or by partition and profile ID combination."
      tags: "Access"
    };
  }

  // RemoveAccess revokes a profile's access to a partition.
  rpc RemoveAccess(RemoveAccessRequest) returns (RemoveAccessResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "removeAccess"
      summary: "Remove access grant"
      description: "Revokes a profile's access to a partition. All associated access roles are also removed."
      tags: "Access"
    };
  }

  // CreateAccessRole assigns a role to an access grant.
  rpc CreateAccessRole(CreateAccessRoleRequest) returns (CreateAccessRoleResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "createAccessRole"
      summary: "Assign role to access"
      description: "Assigns a partition role to an access grant, granting the profile specific permissions within the partition."
      tags: "Access"
    };
  }

  // ListAccessRole retrieves all roles for an access grant.
  rpc ListAccessRole(ListAccessRoleRequest) returns (stream ListAccessRoleResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "listAccessRoles"
      summary: "List access roles"
      description: "Lists all roles assigned to an access grant. Returns a stream of access roles."
      tags: "Access"
    };
  }

  // RemoveAccessRole removes a role from an access grant.
  rpc RemoveAccessRole(RemoveAccessRoleRequest) returns (RemoveAccessRoleResponse) {
    option (gnostic.openapi.v3.operation) = {
      operation_id: "removeAccessRole"
      summary: "Remove access role"
      description: "Removes a specific role from an access grant. The profile retains access but loses the permissions of this role."
      tags: "Access"
    };
  }
}
