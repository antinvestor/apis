// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package property.v1;

import "buf/validate/validate.proto";
import "common/v1/common.proto";
import "google/protobuf/timestamp.proto";

option go_package = "propertyv1";

message Locality {
  string id = 1 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string parent_id = 2 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string name = 5 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 60
  ];
  string description = 6 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 50
  ];
  map<string, string> extras = 7;
  google.protobuf.Timestamp created_at = 8;

  oneof feature {
    // either x, y, or z must be set.
    option (buf.validate.oneof).required = true;

    string point = 3 [
      (buf.validate.field).ignore_empty = true,
      (buf.validate.field).string.min_len = 10,
      (buf.validate.field).string.max_len = 100
    ];
    string boundary = 4 [
      (buf.validate.field).ignore_empty = true,
      (buf.validate.field).string.min_len = 10,
      (buf.validate.field).string.max_len = 2048
    ];
  }
}

message AddLocalityRequest {
  Locality data = 1;
}
message AddLocalityResponse {
  Locality data = 1;
}

message PropertyState {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string propertyid = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  common.v1.STATE state = 3;
  common.v1.STATUS status = 4;
  string name = 5 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 60
  ];
  string description = 6 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 50
  ];
  map<string, string> extras = 7;
  google.protobuf.Timestamp created_at = 8;
}

message PropertyType {
  string id = 1 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string name = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 60
  ];
  string description = 3 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 50
  ];
  map<string, string> extra = 4;
  google.protobuf.Timestamp created_at = 5;
}

message AddPropertyTypeRequest {
  PropertyType data = 1;
}
message AddPropertyTypeResponse {
  PropertyType data = 1;
}

message Subscription {
  string id = 1 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string propertyid = 2 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40
  ];
  string profileid = 3 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 50
  ];
  string role = 4 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 50
  ];
  map<string, string> extra = 5;
  google.protobuf.Timestamp created_at = 6;
  google.protobuf.Timestamp expires_at = 7;
}

message AddSubscriptionRequest {
  Subscription data = 1;
}
message AddSubscriptionResponse {
  Subscription data = 1;
}

message Property {
  string id = 1 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string parent_id = 2 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string name = 3 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 60
  ];
  string description = 4 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 50
  ];
  PropertyType property_type = 5;
  Locality locality = 6;
  google.protobuf.Timestamp started_at = 7 [(buf.validate.field).timestamp.lt_now = true];
  google.protobuf.Timestamp created_at = 8;
  map<string, string> extra = 9 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).map.values = {
      string: {min_len: 3}
    }
  ];
}

message CreatePropertyRequest {
  Property data = 1;
}
message CreatePropertyResponse {
  Property data = 1;
}

message ListPropertyTypeRequest {
  string query = 1;
  int64 page = 2;
  int32 count = 3;
  string start_date = 4;
  string end_date = 5;
  repeated string properties = 6;
  map<string, string> extras = 7;
}

message ListPropertyTypeResponse {
  repeated PropertyType data = 1;
}

message SearchPropertyRequest {
  string query = 1;
  int64 page = 2;
  int32 count = 3;
  string start_date = 4;
  string end_date = 5;
  repeated string properties = 6;
  map<string, string> extras = 7;
}

message SearchPropertyResponse {
  repeated Property data = 1;
}

message DeleteLocalityRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message DeleteLocalityResponse {
  bool success = 1;
}

message DeletePropertyRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message DeletePropertyResponse {
  bool success = 1;
}

message StateOfPropertyRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message StateOfPropertyResponse {
  PropertyState data = 1;
}

message HistoryOfPropertyRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message HistoryOfPropertyResponse {
  repeated PropertyState data = 1;
}

message UpdatePropertyRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  common.v1.STATE state = 2;
  common.v1.STATUS status = 3;
  string name = 4 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 60
  ];
  string description = 5 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 60
  ];
  string guardian_id = 6 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string locality_id = 7 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  map<string, string> extras = 8 [
    (buf.validate.field).ignore_empty = true,
    (buf.validate.field).map.values = {
      string: {min_len: 3}
    }
  ];
}

message UpdatePropertyResponse {
  Property data = 1;
}

message ListSubscriptionRequest {
  string property_id = 1;
  string query = 2;
}

message ListSubscriptionResponse {
  repeated Subscription data = 1;
}

message DeleteSubscriptionRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
}

message DeleteSubscriptionResponse {
  bool success = 1;
}

service PropertyService {
  //Create method for adding a new property type into the system
  rpc AddPropertyType(AddPropertyTypeRequest) returns (AddPropertyTypeResponse);

  //List method for showing all property types in the system
  rpc ListPropertyType(ListPropertyTypeRequest) returns (stream ListPropertyTypeResponse);

  //Create method for adding a new locality into the system
  rpc AddLocality(AddLocalityRequest) returns (AddLocalityResponse);

  //Delete method for removing an existing locality from the system
  rpc DeleteLocality(DeleteLocalityRequest) returns (DeleteLocalityResponse);

  //Create method for adding a new property into the system
  rpc CreateProperty(CreatePropertyRequest) returns (CreatePropertyResponse);

  //Update property request to modify its current form to another
  rpc UpdateProperty(UpdatePropertyRequest) returns (UpdatePropertyResponse);

  //Delete property request to modify its current form to another
  rpc DeleteProperty(DeletePropertyRequest) returns (DeletePropertyResponse);

  //State request to determine active state and status of a property
  rpc StateOfProperty(StateOfPropertyRequest) returns (StateOfPropertyResponse);

  //History request returns all the state transitions a property has had over its lifetime in the system
  rpc HistoryOfProperty(HistoryOfPropertyRequest) returns (stream HistoryOfPropertyResponse);

  //Search method is for client request to query for properties that match query
  rpc SearchProperty(SearchPropertyRequest) returns (stream SearchPropertyResponse);

  //ListSubscriptions for a particular property
  rpc ListSubscription(ListSubscriptionRequest) returns (stream ListSubscriptionResponse);

  //AddSubscription for a profile to a property
  rpc AddSubscription(AddSubscriptionRequest) returns (AddSubscriptionResponse);

  //Delete subscription of profile to a property
  rpc DeleteSubscription(DeleteSubscriptionRequest) returns (DeleteSubscriptionResponse);
}
