// Copyright 2023-2024 Ant Investor Ltd
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package lostid.v1;

import "buf/validate/validate.proto";
import "google/type/interval.proto";
import "google/type/money.proto";

option go_package = "lostidv1";
option java_multiple_files = true;
option java_package = "lostidv1";

//Request to log a Collectible card
message CollectibleRequest {
  repeated string file_id = 1 [
    (buf.validate.field).repeated.min_items = 1,
    (buf.validate.field).repeated.max_items = 5,
    (buf.validate.field).repeated.items = {
      string: {
        min_len: 3,
        max_len: 40,
        pattern: "[0-9a-z_-]{3,20}"
      }
    }
  ];
  map<string, string> properties = 2;
}

message CollectibleResponse {
  string id = 1;
  repeated string file_id = 2;
  map<string, string> properties = 3;
  string state = 4;
}

message ListCollectibleRequest {
  oneof range {
    // either pagination or time interval must be set.
    option (buf.validate.oneof).required = true;

    Pagination pagination = 1;
    google.type.Interval interval = 2;
  }
}

message ListCollectibleResponse {
  repeated CollectibleResponse data = 1;
}

message SearchRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  string query = 2;
  map<string, string> properties = 3;
}

message SearchResponse {
  string id = 1;
  string query = 2;
  map<string, string> properties = 3;
  string state = 4;
}

// buf:lint:ignore ENUM_VALUE_PREFIX
enum ItemType {
  // buf:lint:ignore ENUM_ZERO_VALUE_SUFFIX
  COLLECTIBLE = 0;
  SEARCH = 1;
  TRANSACTION = 2;
}

message ProgressRequest {
  string id = 1 [
    (buf.validate.field).string.min_len = 3,
    (buf.validate.field).string.max_len = 40,
    (buf.validate.field).string.pattern = "[0-9a-z_-]{3,20}"
  ];
  ItemType type = 2 [(buf.validate.field).enum.defined_only = true];
}

message TransactionItem {
  string id = 1;
  string datetime = 2;
  bool credit = 3;
  google.type.Money amount = 4;
  string description = 5;
}

message ProgressItem {
  string id = 1;
  string datetime = 2;
  string state = 3;
  string description = 4;
}

message ProgressResponse {
  string id = 1;
  ItemType type = 2;
  map<string, string> properties = 3;
  string state = 4;
  repeated ProgressItem items = 5;
  repeated TransactionItem transactions = 6;
}

message Pagination {
  int32 count = 1;
  int32 page = 2;
}

message ListSearchRequest {
  oneof range {
    // either pagination or time interval must be set.
    option (buf.validate.oneof).required = true;

    Pagination pagination = 1;
    google.type.Interval interval = 2;
  }
}

message ListSearchResponse {
  repeated SearchResponse data = 1;
}

message ListTransactionRequest {
  oneof range {
    // either pagination or time interval must be set.
    option (buf.validate.oneof).required = true;

    Pagination pagination = 1;
    google.type.Interval interval = 2;
  }
}

message ListTransactionResponse {
  repeated TransactionItem data = 1;
}

service LostIdService {
  // Log a new Collectible request
  rpc Collectible(CollectibleRequest) returns (CollectibleResponse);

  rpc ListCollectible(ListCollectibleRequest) returns (stream ListCollectibleResponse);

  // Log a new search request
  rpc Search(SearchRequest) returns (SearchResponse);

  rpc ListSearch(ListSearchRequest) returns (stream ListSearchResponse);

  rpc Progress(ProgressRequest) returns (ProgressResponse);

  rpc ListTransaction(ListTransactionRequest) returns (stream ListTransactionResponse);
}
